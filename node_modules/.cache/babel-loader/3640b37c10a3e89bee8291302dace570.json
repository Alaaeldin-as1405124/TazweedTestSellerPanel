{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/customComponents/SortableList.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nconst SortableItem = SortableElement(({\n  value\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, value));\nconst SortableListC = SortableContainer(({\n  items\n}) => {\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, items.map((value, index) => React.createElement(SortableItem, {\n    key: \"item-\".concat(value),\n    index: index,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })));\n});\nexport default class SortableList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6']\n    };\n\n    this.onSortEnd = ({\n      oldIndex,\n      newIndex\n    }) => {\n      this.setState(({\n        items\n      }) => ({\n        items: arrayMove(items, oldIndex, newIndex)\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.items.map(item => {\n      return React.createElement(SortableItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"hey iam one \", item);\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/customComponents/SortableList.js"],"names":["React","Component","render","SortableContainer","SortableElement","arrayMove","SortableItem","value","SortableListC","items","map","index","SortableList","state","onSortEnd","oldIndex","newIndex","setState","item"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,iBAAR,EAA2BC,eAA3B,QAAiD,oBAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,YAAY,GAAGF,eAAe,CAAC,CAAC;AAACG,EAAAA;AAAD,CAAD,KAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,KAAN,CAAd,CAApC;AAEA,MAAMC,aAAa,GAAGL,iBAAiB,CAAC,CAAC;AAACM,EAAAA;AAAD,CAAD,KAAa;AACjD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,GAAN,CAAU,CAACH,KAAD,EAAQI,KAAR,KACP,oBAAC,YAAD;AAAc,IAAA,GAAG,iBAAUJ,KAAV,CAAjB;AAAoC,IAAA,KAAK,EAAEI,KAA3C;AAAkD,IAAA,KAAK,EAAEJ,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ;AAOH,CARsC,CAAvC;AAUA,eAAe,MAAMK,YAAN,SAA2BX,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAChDY,KADgD,GACxC;AACJJ,MAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD;AADH,KADwC;;AAAA,SAIhDK,SAJgD,GAIpC,CAAC;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAD,KAA0B;AAClC,WAAKC,QAAL,CAAc,CAAC;AAACR,QAAAA;AAAD,OAAD,MAAc;AACxBA,QAAAA,KAAK,EAAEJ,SAAS,CAACI,KAAD,EAAQM,QAAR,EAAkBC,QAAlB;AADQ,OAAd,CAAd;AAGH,KAR+C;AAAA;;AAShDd,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKW,KAAL,CAAWJ,KAAX,CAAiBC,GAAjB,CAAsBQ,IAAD,IAAS;AAC3B,aACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACiBA,IADjB,CADJ;AAKH,KANA,CADL,CADJ;AAYH;;AAtB+C","sourcesContent":["import React, {Component} from 'react';\nimport {render} from 'react-dom';\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nconst SortableItem = SortableElement(({value}) => <div>{value}</div>);\n\nconst SortableListC = SortableContainer(({items}) => {\n    return (\n        <ul>\n            {items.map((value, index) => (\n                <SortableItem key={`item-${value}`} index={index} value={value} />\n            ))}\n        </ul>\n    );\n});\n\nexport default class SortableList extends Component {\n    state = {\n        items: ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6'],\n    };\n    onSortEnd = ({oldIndex, newIndex}) => {\n        this.setState(({items}) => ({\n            items: arrayMove(items, oldIndex, newIndex),\n        }));\n    };\n    render() {\n        return (\n            <div>\n                {this.state.items.map((item) =>{\n                    return(\n                        <SortableItem>\n                            hey iam one {item}\n                        </SortableItem>\n                    )\n                })}\n\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}