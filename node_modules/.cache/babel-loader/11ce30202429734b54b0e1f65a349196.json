{"ast":null,"code":"import _slicedToArray from \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/customComponents/DragableList.js\";\nimport React, { Component } from 'react';\n\nconst SortableList = ({\n  sortable = true,\n  data = [],\n  onReorder = () => {},\n  renderItem = () => {},\n  keyExtractor = () => {},\n  transitionDuration = 200,\n  separator = null\n}) => {\n  const listRef = React.useRef(null);\n  const separatorsRef = React.useRef(data.map(() => React.createRef()));\n  const itemsRef = React.useRef(data.map((d, i) => React.createRef()));\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        active = _React$useState2[0],\n        setActive = _React$useState2[1];\n\n  const _React$useState3 = React.useState(data.map((d, i) => i)),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        currentOrder = _React$useState4[0],\n        setCurrentOrder = _React$useState4[1];\n\n  const onSortStart = event => sortable && sortStart(event, data, listRef, itemsRef, separatorsRef, onReorder, setActive, setCurrentOrder, transitionDuration);\n\n  return React.createElement(\"div\", {\n    ref: listRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, data.map((item, index) => React.createElement(\"div\", {\n    key: keyExtractor(item, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: itemsRef.current[index],\n    onMouseDown: onSortStart,\n    onTouchStart: onSortStart,\n    children: renderItem(item, currentOrder[index], active === index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), separator && index < data.length - 1 && React.createElement(\"div\", {\n    ref: separatorsRef.current[index],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, separator))));\n};\n\nconst sortStart = (event, data, listRef, itemsRef, separatorsRef, onReorder, setActive, setCurrentOrder, transitionDuration) => {\n  if (itemsRef.current.length < 2) return;\n  if (event.type === 'mousedown' && event.button > 0) return;\n  if (event.type === 'touchstart' && event.touches.length > 1) return;\n  const list = listRef.current;\n  if (list.classList.contains('is-sorting')) return;\n  list.classList.add('is-sorting');\n\n  const css = (item, css) => Object.keys(css).forEach(style => item.style[style] = css[style]);\n\n  css(list, {\n    position: 'relative',\n    height: list.offsetHeight + 'px',\n    width: list.offsetWidth + 'px'\n  });\n  const separators = separatorsRef.current.filter(ref => ref.current).map((ref, index) => {\n    console.log('red is ', ref);\n    const dom = ref.current;\n    if (dom) return {\n      index: index,\n      dom: dom,\n      left: dom.offsetLeft,\n      top: dom.offsetTop,\n      width: dom.offsetWidth,\n      height: dom.offsetHeight\n    };\n  });\n  const items = itemsRef.current.filter(ref => ref.current).map((ref, index) => {\n    const dom = ref.current;\n    if (dom) return {\n      index: index,\n      dom: dom,\n      left: dom.offsetLeft,\n      top: dom.offsetTop,\n      width: dom.offsetWidth,\n      height: dom.offsetHeight,\n      x: dom.offsetLeft,\n      y: dom.offsetTop,\n      dragged: dom.contains(event.target)\n    };\n  });\n  const dragged = items.find(item => item.dragged);\n  const spacing = items[1].top - (items[0].top + items[0].height);\n  let curIndex = items.indexOf(dragged);\n  let newOrder = items.map(item => item.index);\n  setActive(curIndex);\n  draggable(event, {\n    onStart: () => {\n      separators.map(separator => css(separator.dom, {\n        position: 'absolute',\n        width: separator.width + 'px',\n        height: separator.height + 'px',\n        left: separator.left + 'px',\n        top: separator.top + 'px',\n        zIndex: 1\n      }));\n      items.map(item => {\n        css(item.dom, {\n          position: 'absolute',\n          width: item.width + 'px',\n          height: item.height + 'px',\n          transform: \"translateX(\".concat(item.x, \"px) translateY(\").concat(item.y, \"px)\"),\n          zIndex: 2\n        });\n        setTimeout(() => {\n          if (item.dragged) return;\n          css(item.dom, {\n            transition: \"transform \".concat(transitionDuration, \"ms ease\")\n          });\n        });\n      });\n      css(dragged.dom, {\n        zIndex: 3\n      });\n    },\n    onMove: delta => {\n      const draggX = dragged.left + delta.x;\n      const draggY = dragged.top + delta.y;\n      const dragIndex = items.reduce((acc, item) => {\n        if (item.index === 0) return acc;\n        const shadowCenter = draggY + dragged.height / 2;\n        const itemStart = item.top - spacing / 2;\n        return acc += shadowCenter > itemStart ? 1 : 0;\n      }, 0);\n\n      if (dragIndex !== curIndex) {\n        newOrder[dragIndex] = newOrder.splice(curIndex, 1, newOrder[dragIndex])[0];\n        curIndex = dragIndex;\n        newOrder.reduce((acc, index) => {\n          const item = items[index];\n          item.y = acc;\n          css(item.dom, {\n            transform: \"translateX(\".concat(item.x, \") translateY(\").concat(item.y, \"px)\")\n          });\n          return acc += item.height + spacing;\n        }, 0);\n        setCurrentOrder(newOrder.reduce((acc, cur, idx) => {\n          acc[newOrder[idx]] = idx;\n          return acc;\n        }, []));\n      }\n\n      css(dragged.dom, {\n        transform: \"translateX(\".concat(draggX, \"px) translateY(\").concat(draggY, \"px)\")\n      });\n    },\n    onEnd: () => {\n      setActive(null);\n      css(dragged.dom, {\n        transition: \"all \".concat(transitionDuration, \"ms ease\"),\n        transform: \"translateX(\".concat(dragged.x, \") translateY(\").concat(dragged.y, \"px)\")\n      });\n      setTimeout(() => {\n        list.style = null;\n        list.classList.remove('is-sorting');\n        items.map(item => item.dom.style = null);\n        separators.map(separator => separator.dom.style = null);\n        setCurrentOrder(items.map(item => item.index));\n        onReorder(items.reduce((acc, cur, idx) => {\n          acc[idx] = data[newOrder[idx]];\n          return acc;\n        }, []));\n      }, transitionDuration);\n    }\n  });\n};\n\nconst draggable = (e, {\n  onStart,\n  onMove,\n  onEnd\n}) => {\n  let startPosition;\n\n  const onDragStart = e => {\n    const currentPosition = getPosition(e);\n    onStart(startPosition);\n    startPosition = currentPosition;\n    const touch = e.type === 'touchstart';\n    window.addEventListener(touch ? 'touchmove' : 'mousemove', onDragMove, {\n      passive: false\n    });\n    window.addEventListener(touch ? 'touchend' : 'mouseup', onDragEnd, false);\n  };\n\n  const onDragMove = e => {\n    const currentPosition = getPosition(e);\n    const deltaPosition = {\n      x: currentPosition.x - startPosition.x,\n      y: currentPosition.y - startPosition.y\n    };\n    onMove(deltaPosition, currentPosition);\n    e.preventDefault();\n  };\n\n  const onDragEnd = e => {\n    const currentPosition = getPosition(e);\n    onEnd(currentPosition);\n    const touch = e.type === 'touchend';\n    window.removeEventListener(touch ? 'touchmove' : 'mousemove', onDragMove, {\n      passive: false\n    });\n    window.removeEventListener(touch ? 'touchend' : 'mouseup', onDragEnd, false);\n  };\n\n  const getPosition = e => {\n    const dragEvent = e.touches ? e.touches[0] || e.changedTouches[0] : e;\n    return {\n      x: dragEvent.pageX,\n      y: dragEvent.pageY\n    };\n  };\n\n  onDragStart(e);\n};\n\nclass DragableList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentWillMount() {\n    //console.log('dragable list will mounnt',this.props)\n    if (this.props && this.props.data) this.setState({\n      data: this.props.data\n    });\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    //console.log('dragable list will recv props',nextProps)\n    if (nextProps && nextProps.data) {\n      this.setState({\n        data: nextProps.data\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(SortableList, {\n      data: this.state.data,\n      renderItem: (item, index, active) => this.props.renderItem(item, index, active),\n      keyExtractor: item => item._id,\n      onReorder: ordered => this.props.reOrder(ordered),\n      separator: React.createElement(\"div\", {\n        className: \"separator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default DragableList;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/customComponents/DragableList.js"],"names":["React","Component","SortableList","sortable","data","onReorder","renderItem","keyExtractor","transitionDuration","separator","listRef","useRef","separatorsRef","map","createRef","itemsRef","d","i","useState","active","setActive","currentOrder","setCurrentOrder","onSortStart","event","sortStart","item","index","current","length","type","button","touches","list","classList","contains","add","css","Object","keys","forEach","style","position","height","offsetHeight","width","offsetWidth","separators","filter","ref","console","log","dom","left","offsetLeft","top","offsetTop","items","x","y","dragged","target","find","spacing","curIndex","indexOf","newOrder","draggable","onStart","zIndex","transform","setTimeout","transition","onMove","delta","draggX","draggY","dragIndex","reduce","acc","shadowCenter","itemStart","splice","cur","idx","onEnd","remove","e","startPosition","onDragStart","currentPosition","getPosition","touch","window","addEventListener","onDragMove","passive","onDragEnd","deltaPosition","preventDefault","removeEventListener","dragEvent","changedTouches","pageX","pageY","DragableList","state","componentWillMount","props","setState","componentWillReceiveProps","nextProps","nextContext","render","_id","ordered","reOrder"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AACA,MAAMC,YAAY,GAAG,CAAC;AACIC,EAAAA,QAAQ,GAAG,IADf;AAEIC,EAAAA,IAAI,GAAG,EAFX;AAGIC,EAAAA,SAAS,GAAG,MAAM,CACjB,CAJL;AAKIC,EAAAA,UAAU,GAAG,MAAM,CAClB,CANL;AAOIC,EAAAA,YAAY,GAAG,MAAM,CACpB,CARL;AASIC,EAAAA,kBAAkB,GAAG,GATzB;AAUIC,EAAAA,SAAS,GAAG;AAVhB,CAAD,KAWO;AACxB,QAAMC,OAAO,GAAGV,KAAK,CAACW,MAAN,CAAa,IAAb,CAAhB;AACA,QAAMC,aAAa,GAAGZ,KAAK,CAACW,MAAN,CAAaP,IAAI,CAACS,GAAL,CAAS,MAAMb,KAAK,CAACc,SAAN,EAAf,CAAb,CAAtB;AACA,QAAMC,QAAQ,GAAGf,KAAK,CAACW,MAAN,CAAaP,IAAI,CAACS,GAAL,CAAS,CAACG,CAAD,EAAIC,CAAJ,KAAUjB,KAAK,CAACc,SAAN,EAAnB,CAAb,CAAjB;;AAHwB,0BAIId,KAAK,CAACkB,QAAN,CAAe,IAAf,CAJJ;AAAA;AAAA,QAIjBC,MAJiB;AAAA,QAITC,SAJS;;AAAA,2BAKgBpB,KAAK,CAACkB,QAAN,CAAed,IAAI,CAACS,GAAL,CAAS,CAACG,CAAD,EAAIC,CAAJ,KAAUA,CAAnB,CAAf,CALhB;AAAA;AAAA,QAKjBI,YALiB;AAAA,QAKHC,eALG;;AAOxB,QAAMC,WAAW,GAAGC,KAAK,IAAIrB,QAAQ,IAAIsB,SAAS,CAC9CD,KAD8C,EAE9CpB,IAF8C,EAG9CM,OAH8C,EAI9CK,QAJ8C,EAK9CH,aAL8C,EAM9CP,SAN8C,EAO9Ce,SAP8C,EAQ9CE,eAR8C,EAS9Cd,kBAT8C,CAAlD;;AAYA,SACI;AAAK,IAAA,GAAG,EAAEE,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,IAAI,CAACS,GAAL,CAAS,CAACa,IAAD,EAAOC,KAAP,KACN;AAAK,IAAA,GAAG,EAAEpB,YAAY,CAACmB,IAAD,EAAOC,KAAP,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,GAAG,EAAEZ,QAAQ,CAACa,OAAT,CAAiBD,KAAjB,CADT;AAEI,IAAA,WAAW,EAAEJ,WAFjB;AAGI,IAAA,YAAY,EAAEA,WAHlB;AAII,IAAA,QAAQ,EAAEjB,UAAU,CAACoB,IAAD,EAAOL,YAAY,CAACM,KAAD,CAAnB,EAA4BR,MAAM,KAAKQ,KAAvC,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOKlB,SAAS,IAAIkB,KAAK,GAAGvB,IAAI,CAACyB,MAAL,GAAc,CAAnC,IACD;AAAK,IAAA,GAAG,EAAEjB,aAAa,CAACgB,OAAd,CAAsBD,KAAtB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,SADL,CARJ,CADH,CADL,CADJ;AAmBH,CAjDD;;AAmDA,MAAMgB,SAAS,GAAG,CACdD,KADc,EAEdpB,IAFc,EAGdM,OAHc,EAIdK,QAJc,EAKdH,aALc,EAMdP,SANc,EAOde,SAPc,EAQdE,eARc,EASdd,kBATc,KAUb;AAEG,MAAIO,QAAQ,CAACa,OAAT,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC;AACjC,MAAIL,KAAK,CAACM,IAAN,KAAe,WAAf,IAA8BN,KAAK,CAACO,MAAN,GAAe,CAAjD,EAAoD;AACpD,MAAIP,KAAK,CAACM,IAAN,KAAe,YAAf,IAA+BN,KAAK,CAACQ,OAAN,CAAcH,MAAd,GAAuB,CAA1D,EAA6D;AAE7D,QAAMI,IAAI,GAAGvB,OAAO,CAACkB,OAArB;AACA,MAAIK,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAwB,YAAxB,CAAJ,EAA2C;AAC3CF,EAAAA,IAAI,CAACC,SAAL,CAAeE,GAAf,CAAmB,YAAnB;;AAEA,QAAMC,GAAG,GAAG,CAACX,IAAD,EAAOW,GAAP,KAAeC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,OAAjB,CAAyBC,KAAK,IAAIf,IAAI,CAACe,KAAL,CAAWA,KAAX,IAAoBJ,GAAG,CAACI,KAAD,CAAzD,CAA3B;;AAEAJ,EAAAA,GAAG,CAACJ,IAAD,EAAO;AACNS,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,MAAM,EAAEV,IAAI,CAACW,YAAL,GAAoB,IAFtB;AAGNC,IAAAA,KAAK,EAAEZ,IAAI,CAACa,WAAL,GAAmB;AAHpB,GAAP,CAAH;AAMA,QAAMC,UAAU,GAAGnC,aAAa,CAACgB,OAAd,CAAsBoB,MAAtB,CAA6BC,GAAG,IAAIA,GAAG,CAACrB,OAAxC,EAAiDf,GAAjD,CAAqD,CAACoC,GAAD,EAAMtB,KAAN,KAAgB;AACpFuB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,GAAtB;AACA,UAAMG,GAAG,GAAGH,GAAG,CAACrB,OAAhB;AACA,QAAIwB,GAAJ,EAAS,OAAO;AACZzB,MAAAA,KAAK,EAAEA,KADK;AAEZyB,MAAAA,GAAG,EAAEA,GAFO;AAGZC,MAAAA,IAAI,EAAED,GAAG,CAACE,UAHE;AAIZC,MAAAA,GAAG,EAAEH,GAAG,CAACI,SAJG;AAKZX,MAAAA,KAAK,EAAEO,GAAG,CAACN,WALC;AAMZH,MAAAA,MAAM,EAAES,GAAG,CAACR;AANA,KAAP;AAQZ,GAXkB,CAAnB;AAaA,QAAMa,KAAK,GAAG1C,QAAQ,CAACa,OAAT,CAAiBoB,MAAjB,CAAwBC,GAAG,IAAIA,GAAG,CAACrB,OAAnC,EAA4Cf,GAA5C,CAAgD,CAACoC,GAAD,EAAMtB,KAAN,KAAgB;AAC1E,UAAMyB,GAAG,GAAGH,GAAG,CAACrB,OAAhB;AACA,QAAIwB,GAAJ,EAAS,OAAO;AACZzB,MAAAA,KAAK,EAAEA,KADK;AAEZyB,MAAAA,GAAG,EAAEA,GAFO;AAGZC,MAAAA,IAAI,EAAED,GAAG,CAACE,UAHE;AAIZC,MAAAA,GAAG,EAAEH,GAAG,CAACI,SAJG;AAKZX,MAAAA,KAAK,EAAEO,GAAG,CAACN,WALC;AAMZH,MAAAA,MAAM,EAAES,GAAG,CAACR,YANA;AAOZc,MAAAA,CAAC,EAAEN,GAAG,CAACE,UAPK;AAQZK,MAAAA,CAAC,EAAEP,GAAG,CAACI,SARK;AASZI,MAAAA,OAAO,EAAER,GAAG,CAACjB,QAAJ,CAAaX,KAAK,CAACqC,MAAnB;AATG,KAAP;AAWZ,GAba,CAAd;AAeA,QAAMD,OAAO,GAAGH,KAAK,CAACK,IAAN,CAAWpC,IAAI,IAAIA,IAAI,CAACkC,OAAxB,CAAhB;AACA,QAAMG,OAAO,GAAGN,KAAK,CAAC,CAAD,CAAL,CAASF,GAAT,IAAgBE,KAAK,CAAC,CAAD,CAAL,CAASF,GAAT,GAAeE,KAAK,CAAC,CAAD,CAAL,CAASd,MAAxC,CAAhB;AAEA,MAAIqB,QAAQ,GAAGP,KAAK,CAACQ,OAAN,CAAcL,OAAd,CAAf;AACA,MAAIM,QAAQ,GAAGT,KAAK,CAAC5C,GAAN,CAAUa,IAAI,IAAIA,IAAI,CAACC,KAAvB,CAAf;AAEAP,EAAAA,SAAS,CAAC4C,QAAD,CAAT;AAEAG,EAAAA,SAAS,CAAC3C,KAAD,EAAQ;AACb4C,IAAAA,OAAO,EAAE,MAAM;AACXrB,MAAAA,UAAU,CAAClC,GAAX,CAAeJ,SAAS,IAAI4B,GAAG,CAAC5B,SAAS,CAAC2C,GAAX,EAAgB;AAC3CV,QAAAA,QAAQ,EAAE,UADiC;AAE3CG,QAAAA,KAAK,EAAEpC,SAAS,CAACoC,KAAV,GAAkB,IAFkB;AAG3CF,QAAAA,MAAM,EAAElC,SAAS,CAACkC,MAAV,GAAmB,IAHgB;AAI3CU,QAAAA,IAAI,EAAE5C,SAAS,CAAC4C,IAAV,GAAiB,IAJoB;AAK3CE,QAAAA,GAAG,EAAE9C,SAAS,CAAC8C,GAAV,GAAgB,IALsB;AAM3Cc,QAAAA,MAAM,EAAE;AANmC,OAAhB,CAA/B;AASAZ,MAAAA,KAAK,CAAC5C,GAAN,CAAUa,IAAI,IAAI;AACdW,QAAAA,GAAG,CAACX,IAAI,CAAC0B,GAAN,EAAW;AACVV,UAAAA,QAAQ,EAAE,UADA;AAEVG,UAAAA,KAAK,EAAEnB,IAAI,CAACmB,KAAL,GAAa,IAFV;AAGVF,UAAAA,MAAM,EAAEjB,IAAI,CAACiB,MAAL,GAAc,IAHZ;AAIV2B,UAAAA,SAAS,uBAAgB5C,IAAI,CAACgC,CAArB,4BAAwChC,IAAI,CAACiC,CAA7C,QAJC;AAKVU,UAAAA,MAAM,EAAE;AALE,SAAX,CAAH;AAOAE,QAAAA,UAAU,CAAC,MAAM;AACb,cAAI7C,IAAI,CAACkC,OAAT,EAAkB;AAClBvB,UAAAA,GAAG,CAACX,IAAI,CAAC0B,GAAN,EAAW;AAACoB,YAAAA,UAAU,sBAAehE,kBAAf;AAAX,WAAX,CAAH;AACH,SAHS,CAAV;AAIH,OAZD;AAcA6B,MAAAA,GAAG,CAACuB,OAAO,CAACR,GAAT,EAAc;AAACiB,QAAAA,MAAM,EAAE;AAAT,OAAd,CAAH;AACH,KA1BY;AA2BbI,IAAAA,MAAM,EAAEC,KAAK,IAAI;AACb,YAAMC,MAAM,GAAGf,OAAO,CAACP,IAAR,GAAeqB,KAAK,CAAChB,CAApC;AACA,YAAMkB,MAAM,GAAGhB,OAAO,CAACL,GAAR,GAAcmB,KAAK,CAACf,CAAnC;AAEA,YAAMkB,SAAS,GAAGpB,KAAK,CAACqB,MAAN,CAAa,CAACC,GAAD,EAAMrD,IAAN,KAAe;AAC1C,YAAIA,IAAI,CAACC,KAAL,KAAe,CAAnB,EAAsB,OAAOoD,GAAP;AACtB,cAAMC,YAAY,GAAGJ,MAAM,GAAGhB,OAAO,CAACjB,MAAR,GAAiB,CAA/C;AACA,cAAMsC,SAAS,GAAGvD,IAAI,CAAC6B,GAAL,GAAWQ,OAAO,GAAG,CAAvC;AACA,eAAOgB,GAAG,IAAKC,YAAY,GAAGC,SAAhB,GAA6B,CAA7B,GAAiC,CAA/C;AACH,OALiB,EAKf,CALe,CAAlB;;AAOA,UAAIJ,SAAS,KAAKb,QAAlB,EAA4B;AACxBE,QAAAA,QAAQ,CAACW,SAAD,CAAR,GAAsBX,QAAQ,CAACgB,MAAT,CAAgBlB,QAAhB,EAA0B,CAA1B,EAA6BE,QAAQ,CAACW,SAAD,CAArC,EAAkD,CAAlD,CAAtB;AACAb,QAAAA,QAAQ,GAAGa,SAAX;AAEAX,QAAAA,QAAQ,CAACY,MAAT,CAAgB,CAACC,GAAD,EAAMpD,KAAN,KAAgB;AAC5B,gBAAMD,IAAI,GAAG+B,KAAK,CAAC9B,KAAD,CAAlB;AACAD,UAAAA,IAAI,CAACiC,CAAL,GAASoB,GAAT;AACA1C,UAAAA,GAAG,CAACX,IAAI,CAAC0B,GAAN,EAAW;AAACkB,YAAAA,SAAS,uBAAgB5C,IAAI,CAACgC,CAArB,0BAAsChC,IAAI,CAACiC,CAA3C;AAAV,WAAX,CAAH;AACA,iBAAOoB,GAAG,IAAIrD,IAAI,CAACiB,MAAL,GAAcoB,OAA5B;AACH,SALD,EAKG,CALH;AAOAzC,QAAAA,eAAe,CAAC4C,QAAQ,CAACY,MAAT,CAAgB,CAACC,GAAD,EAAMI,GAAN,EAAWC,GAAX,KAAmB;AAC/CL,UAAAA,GAAG,CAACb,QAAQ,CAACkB,GAAD,CAAT,CAAH,GAAqBA,GAArB;AACA,iBAAOL,GAAP;AACH,SAHe,EAGb,EAHa,CAAD,CAAf;AAIH;;AAED1C,MAAAA,GAAG,CAACuB,OAAO,CAACR,GAAT,EAAc;AAACkB,QAAAA,SAAS,uBAAgBK,MAAhB,4BAAwCC,MAAxC;AAAV,OAAd,CAAH;AACH,KAxDY;AAyDbS,IAAAA,KAAK,EAAE,MAAM;AACTjE,MAAAA,SAAS,CAAC,IAAD,CAAT;AAEAiB,MAAAA,GAAG,CAACuB,OAAO,CAACR,GAAT,EAAc;AACboB,QAAAA,UAAU,gBAAShE,kBAAT,YADG;AAEb8D,QAAAA,SAAS,uBAAgBV,OAAO,CAACF,CAAxB,0BAAyCE,OAAO,CAACD,CAAjD;AAFI,OAAd,CAAH;AAKAY,MAAAA,UAAU,CAAC,MAAM;AACbtC,QAAAA,IAAI,CAACQ,KAAL,GAAa,IAAb;AACAR,QAAAA,IAAI,CAACC,SAAL,CAAeoD,MAAf,CAAsB,YAAtB;AACA7B,QAAAA,KAAK,CAAC5C,GAAN,CAAUa,IAAI,IAAIA,IAAI,CAAC0B,GAAL,CAASX,KAAT,GAAiB,IAAnC;AACAM,QAAAA,UAAU,CAAClC,GAAX,CAAeJ,SAAS,IAAIA,SAAS,CAAC2C,GAAV,CAAcX,KAAd,GAAsB,IAAlD;AACAnB,QAAAA,eAAe,CAACmC,KAAK,CAAC5C,GAAN,CAAUa,IAAI,IAAIA,IAAI,CAACC,KAAvB,CAAD,CAAf;AACAtB,QAAAA,SAAS,CAACoD,KAAK,CAACqB,MAAN,CAAa,CAACC,GAAD,EAAMI,GAAN,EAAWC,GAAX,KAAmB;AACtCL,UAAAA,GAAG,CAACK,GAAD,CAAH,GAAWhF,IAAI,CAAC8D,QAAQ,CAACkB,GAAD,CAAT,CAAf;AACA,iBAAOL,GAAP;AACH,SAHS,EAGP,EAHO,CAAD,CAAT;AAIH,OAVS,EAUPvE,kBAVO,CAAV;AAWH;AA5EY,GAAR,CAAT;AAmFP,CAnJD;;AAqJA,MAAM2D,SAAS,GAAG,CAACoB,CAAD,EAAI;AAACnB,EAAAA,OAAD;AAAUK,EAAAA,MAAV;AAAkBY,EAAAA;AAAlB,CAAJ,KAAiC;AAE3C,MAAIG,aAAJ;;AAEA,QAAMC,WAAW,GAAGF,CAAC,IAAI;AACrB,UAAMG,eAAe,GAAGC,WAAW,CAACJ,CAAD,CAAnC;AACAnB,IAAAA,OAAO,CAACoB,aAAD,CAAP;AACAA,IAAAA,aAAa,GAAGE,eAAhB;AACA,UAAME,KAAK,GAAGL,CAAC,CAACzD,IAAF,KAAW,YAAzB;AACA+D,IAAAA,MAAM,CAACC,gBAAP,CAAyBF,KAAK,GAAG,WAAH,GAAiB,WAA/C,EAA6DG,UAA7D,EAAyE;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAzE;AACAH,IAAAA,MAAM,CAACC,gBAAP,CAAyBF,KAAK,GAAG,UAAH,GAAgB,SAA9C,EAA0DK,SAA1D,EAAqE,KAArE;AACH,GAPD;;AASA,QAAMF,UAAU,GAAGR,CAAC,IAAI;AACpB,UAAMG,eAAe,GAAGC,WAAW,CAACJ,CAAD,CAAnC;AACA,UAAMW,aAAa,GAAG;AAClBxC,MAAAA,CAAC,EAAEgC,eAAe,CAAChC,CAAhB,GAAoB8B,aAAa,CAAC9B,CADnB;AAElBC,MAAAA,CAAC,EAAE+B,eAAe,CAAC/B,CAAhB,GAAoB6B,aAAa,CAAC7B;AAFnB,KAAtB;AAIAc,IAAAA,MAAM,CAACyB,aAAD,EAAgBR,eAAhB,CAAN;AACAH,IAAAA,CAAC,CAACY,cAAF;AACH,GARD;;AAUA,QAAMF,SAAS,GAAGV,CAAC,IAAI;AACnB,UAAMG,eAAe,GAAGC,WAAW,CAACJ,CAAD,CAAnC;AACAF,IAAAA,KAAK,CAACK,eAAD,CAAL;AACA,UAAME,KAAK,GAAGL,CAAC,CAACzD,IAAF,KAAW,UAAzB;AACA+D,IAAAA,MAAM,CAACO,mBAAP,CAA4BR,KAAK,GAAG,WAAH,GAAiB,WAAlD,EAAgEG,UAAhE,EAA4E;AAACC,MAAAA,OAAO,EAAE;AAAV,KAA5E;AACAH,IAAAA,MAAM,CAACO,mBAAP,CAA4BR,KAAK,GAAG,UAAH,GAAgB,SAAjD,EAA6DK,SAA7D,EAAwE,KAAxE;AACH,GAND;;AAQA,QAAMN,WAAW,GAAGJ,CAAC,IAAI;AACrB,UAAMc,SAAS,GAAGd,CAAC,CAACvD,OAAF,GAAauD,CAAC,CAACvD,OAAF,CAAU,CAAV,KAAgBuD,CAAC,CAACe,cAAF,CAAiB,CAAjB,CAA7B,GAAoDf,CAAtE;AACA,WAAO;AAAC7B,MAAAA,CAAC,EAAE2C,SAAS,CAACE,KAAd;AAAqB5C,MAAAA,CAAC,EAAE0C,SAAS,CAACG;AAAlC,KAAP;AACH,GAHD;;AAKAf,EAAAA,WAAW,CAACF,CAAD,CAAX;AAGP,CAvCD;;AA4CA,MAAMkB,YAAN,SAA2BxG,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCyG,KADiC,GACzB;AACJtG,MAAAA,IAAI,EAAE;AADF,KADyB;AAAA;;AAKjCuG,EAAAA,kBAAkB,GAAG;AACjB;AACA,QAAI,KAAKC,KAAL,IAAc,KAAKA,KAAL,CAAWxG,IAA7B,EACI,KAAKyG,QAAL,CAAc;AAACzG,MAAAA,IAAI,EAAE,KAAKwG,KAAL,CAAWxG;AAAlB,KAAd;AACP;;AAED0G,EAAAA,yBAAyB,CAACC,SAAD,EAAYC,WAAZ,EAAyB;AAC9C;AACA,QAAID,SAAS,IAAIA,SAAS,CAAC3G,IAA3B,EAAgC;AAE5B,WAAKyG,QAAL,CAAc;AAACzG,QAAAA,IAAI,EAAE2G,SAAS,CAAC3G;AAAjB,OAAd;AACH;AACJ;;AAED6G,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,YAAD;AACI,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWtG,IADrB;AAEI,MAAA,UAAU,EAAE,CAACsB,IAAD,EAAOC,KAAP,EAAcR,MAAd,KAAyB,KAAKyF,KAAL,CAAWtG,UAAX,CAAsBoB,IAAtB,EAA4BC,KAA5B,EAAkCR,MAAlC,CAFzC;AAGI,MAAA,YAAY,EAAEO,IAAI,IAAIA,IAAI,CAACwF,GAH/B;AAII,MAAA,SAAS,EAAEC,OAAO,IAAI,KAAKP,KAAL,CAAWQ,OAAX,CAAmBD,OAAnB,CAJ1B;AAKI,MAAA,SAAS,EAAE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH;;AA7BgC;;AAiCrC,eAAeV,YAAf","sourcesContent":["import React, {Component} from 'react';\nconst SortableList = ({\n                          sortable = true,\n                          data = [],\n                          onReorder = () => {\n                          },\n                          renderItem = () => {\n                          },\n                          keyExtractor = () => {\n                          },\n                          transitionDuration = 200,\n                          separator = null,\n                      }) => {\n    const listRef = React.useRef(null)\n    const separatorsRef = React.useRef(data.map(() => React.createRef()))\n    const itemsRef = React.useRef(data.map((d, i) => React.createRef()))\n    const [active, setActive] = React.useState(null)\n    const [currentOrder, setCurrentOrder] = React.useState(data.map((d, i) => i))\n\n    const onSortStart = event => sortable && sortStart(\n        event,\n        data,\n        listRef,\n        itemsRef,\n        separatorsRef,\n        onReorder,\n        setActive,\n        setCurrentOrder,\n        transitionDuration\n    )\n\n    return (\n        <div ref={listRef}>\n            {data.map((item, index) =>\n                <div key={keyExtractor(item, index)}>\n                    <div\n                        ref={itemsRef.current[index]}\n                        onMouseDown={onSortStart}\n                        onTouchStart={onSortStart}\n                        children={renderItem(item, currentOrder[index], active === index)}\n                    />\n                    {separator && index < data.length - 1 &&\n                    <div ref={separatorsRef.current[index]}>\n                        {separator}\n                    </div>\n                    }\n                </div>\n            )}\n        </div>\n    )\n}\n\nconst sortStart = (\n    event,\n    data,\n    listRef,\n    itemsRef,\n    separatorsRef,\n    onReorder,\n    setActive,\n    setCurrentOrder,\n    transitionDuration,\n) => {\n   \n        if (itemsRef.current.length < 2) return\n        if (event.type === 'mousedown' && event.button > 0) return\n        if (event.type === 'touchstart' && event.touches.length > 1) return\n\n        const list = listRef.current\n        if (list.classList.contains('is-sorting')) return\n        list.classList.add('is-sorting')\n\n        const css = (item, css) => Object.keys(css).forEach(style => item.style[style] = css[style])\n\n        css(list, {\n            position: 'relative',\n            height: list.offsetHeight + 'px',\n            width: list.offsetWidth + 'px',\n        })\n\n        const separators = separatorsRef.current.filter(ref => ref.current).map((ref, index) => {\n            console.log('red is ',ref);\n            const dom = ref.current\n            if (dom) return {\n                index: index,\n                dom: dom,\n                left: dom.offsetLeft,\n                top: dom.offsetTop,\n                width: dom.offsetWidth,\n                height: dom.offsetHeight,\n            }\n        })\n\n        const items = itemsRef.current.filter(ref => ref.current).map((ref, index) => {\n            const dom = ref.current\n            if (dom) return {\n                index: index,\n                dom: dom,\n                left: dom.offsetLeft,\n                top: dom.offsetTop,\n                width: dom.offsetWidth,\n                height: dom.offsetHeight,\n                x: dom.offsetLeft,\n                y: dom.offsetTop,\n                dragged: dom.contains(event.target)\n            }\n        })\n\n        const dragged = items.find(item => item.dragged)\n        const spacing = items[1].top - (items[0].top + items[0].height)\n\n        let curIndex = items.indexOf(dragged)\n        let newOrder = items.map(item => item.index)\n\n        setActive(curIndex)\n\n        draggable(event, {\n            onStart: () => {\n                separators.map(separator => css(separator.dom, {\n                    position: 'absolute',\n                    width: separator.width + 'px',\n                    height: separator.height + 'px',\n                    left: separator.left + 'px',\n                    top: separator.top + 'px',\n                    zIndex: 1,\n                }))\n\n                items.map(item => {\n                    css(item.dom, {\n                        position: 'absolute',\n                        width: item.width + 'px',\n                        height: item.height + 'px',\n                        transform: `translateX(${item.x}px) translateY(${item.y}px)`,\n                        zIndex: 2,\n                    })\n                    setTimeout(() => {\n                        if (item.dragged) return\n                        css(item.dom, {transition: `transform ${transitionDuration}ms ease`})\n                    })\n                })\n\n                css(dragged.dom, {zIndex: 3})\n            },\n            onMove: delta => {\n                const draggX = dragged.left + delta.x\n                const draggY = dragged.top + delta.y\n\n                const dragIndex = items.reduce((acc, item) => {\n                    if (item.index === 0) return acc\n                    const shadowCenter = draggY + dragged.height / 2\n                    const itemStart = item.top - spacing / 2\n                    return acc += (shadowCenter > itemStart) ? 1 : 0\n                }, 0)\n\n                if (dragIndex !== curIndex) {\n                    newOrder[dragIndex] = newOrder.splice(curIndex, 1, newOrder[dragIndex])[0]\n                    curIndex = dragIndex\n\n                    newOrder.reduce((acc, index) => {\n                        const item = items[index]\n                        item.y = acc\n                        css(item.dom, {transform: `translateX(${item.x}) translateY(${item.y}px)`})\n                        return acc += item.height + spacing\n                    }, 0)\n\n                    setCurrentOrder(newOrder.reduce((acc, cur, idx) => {\n                        acc[newOrder[idx]] = idx\n                        return acc\n                    }, []))\n                }\n\n                css(dragged.dom, {transform: `translateX(${draggX}px) translateY(${draggY}px)`})\n            },\n            onEnd: () => {\n                setActive(null)\n\n                css(dragged.dom, {\n                    transition: `all ${transitionDuration}ms ease`,\n                    transform: `translateX(${dragged.x}) translateY(${dragged.y}px)`,\n                })\n\n                setTimeout(() => {\n                    list.style = null\n                    list.classList.remove('is-sorting')\n                    items.map(item => item.dom.style = null)\n                    separators.map(separator => separator.dom.style = null)\n                    setCurrentOrder(items.map(item => item.index))\n                    onReorder(items.reduce((acc, cur, idx) => {\n                        acc[idx] = data[newOrder[idx]]\n                        return acc\n                    }, []))\n                }, transitionDuration)\n            }\n        })\n\n\n\n\n\n}\n\nconst draggable = (e, {onStart, onMove, onEnd}) => {\n\n        let startPosition\n\n        const onDragStart = e => {\n            const currentPosition = getPosition(e)\n            onStart(startPosition)\n            startPosition = currentPosition\n            const touch = e.type === 'touchstart'\n            window.addEventListener((touch ? 'touchmove' : 'mousemove'), onDragMove, {passive: false})\n            window.addEventListener((touch ? 'touchend' : 'mouseup'), onDragEnd, false)\n        }\n\n        const onDragMove = e => {\n            const currentPosition = getPosition(e)\n            const deltaPosition = {\n                x: currentPosition.x - startPosition.x,\n                y: currentPosition.y - startPosition.y,\n            }\n            onMove(deltaPosition, currentPosition)\n            e.preventDefault()\n        }\n\n        const onDragEnd = e => {\n            const currentPosition = getPosition(e)\n            onEnd(currentPosition)\n            const touch = e.type === 'touchend'\n            window.removeEventListener((touch ? 'touchmove' : 'mousemove'), onDragMove, {passive: false})\n            window.removeEventListener((touch ? 'touchend' : 'mouseup'), onDragEnd, false)\n        }\n\n        const getPosition = e => {\n            const dragEvent = e.touches ? (e.touches[0] || e.changedTouches[0]) : e\n            return {x: dragEvent.pageX, y: dragEvent.pageY}\n        }\n\n        onDragStart(e)\n\n\n}\n\n\n\n\nclass DragableList extends Component {\n    state = {\n        data: []\n    }\n\n    componentWillMount() {\n        //console.log('dragable list will mounnt',this.props)\n        if (this.props && this.props.data)\n            this.setState({data: this.props.data})\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        //console.log('dragable list will recv props',nextProps)\n        if (nextProps && nextProps.data){\n\n            this.setState({data: nextProps.data})\n        }\n    }\n\n    render() {\n        return (\n            <SortableList\n                data={this.state.data}\n                renderItem={(item, index, active) => this.props.renderItem(item, index,active)}\n                keyExtractor={item => item._id}\n                onReorder={ordered => this.props.reOrder(ordered)}\n                separator={<div className=\"separator\"/>}\n            />\n        );\n    }\n}\n\n\nexport default DragableList\n"]},"metadata":{},"sourceType":"module"}