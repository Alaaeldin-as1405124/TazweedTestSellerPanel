{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/src/components/Appointments.js\";\nimport React, { Component } from 'react';\nimport { Dropdown, Table } from \"react-bootstrap\";\nimport baseService from \"../services/baseService\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\n\nclass Appointments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      appointments: [],\n      appointmentsFiltered: [],\n      show: false,\n      selectedAppointment: {},\n      filter: 'All'\n    };\n\n    this.eventClicked = e => {\n      alert(e);\n    };\n\n    this.close = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.updateAppointmentStatus = async status => {\n      let newAppointment = this.state.selectedAppointment;\n      newAppointment.status = status;\n      await baseService.updateAppointment(newAppointment);\n    };\n\n    this.accept = () => {\n      this.updateAppointmentStatus('Accepted');\n      this.close();\n    };\n\n    this.reject = () => {\n      this.updateAppointmentStatus('Rejected');\n      this.close();\n    };\n\n    this.filter = filterCondition => {\n      this.setState({\n        filter: filterCondition\n      });\n\n      if (filterCondition === \"All\") {\n        this.setState({\n          appointmentsFiltered: this.state.appointments\n        });\n        return;\n      }\n\n      let appoinntments = [...this.state.appointments];\n      appoinntments = appoinntments.filter(singleAppointment => {\n        if (filterCondition === \"Pending\" || filterCondition === \"Accepted\" || filterCondition === \"Rejected\") return singleAppointment.status == filterCondition;else if (filterCondition === \"Coming\") return singleAppointment.appointmentDate < new Date().toDateString();else if (filterCondition === \"Past\") return singleAppointment.appointmentDate > new Date().toDateString();else if (filterCondition === \"Today\") return singleAppointment.appointmentDate == new Date().toDateString();\n      });\n      this.setState({\n        appointmentsFiltered: appoinntments\n      });\n    };\n\n    this.onAppointmentClick = (e, selectedAppointment) => {\n      e.preventDefault();\n      this.setState({\n        selectedAppointment,\n        show: true\n      });\n    };\n\n    this.renderAppointments = () => {\n      return React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Request Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Appointment Time\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Appointment Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.appointmentsFiltered.length > 0 ? this.state.appointmentsFiltered.map((singleAppointment, index) => {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, index + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, singleAppointment.clientId.username), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, new Date(singleAppointment.requestDate).toDateString()), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, singleAppointment.time), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, singleAppointment.appointmentDate), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, singleAppointment.status), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, singleAppointment.status !== \"Pending\" ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Action Taken\") : React.createElement(\"a\", {\n          href: \"\",\n          onClick: e => this.onAppointmentClick(e, singleAppointment),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Take Action\")));\n      }) : React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"there is no \", this.state.filter !== \"All\" && this.state.filter.toLowerCase(), \" appointments yet\")))));\n    };\n  }\n\n  componentWillMount() {\n    baseService.getAppointments().then(response => {\n      this.setState({\n        appointments: response,\n        appointmentsFiltered: response\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Appointments\"), React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"(\", this.state.filter, \") Appointments\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onSelect: () => this.filter('All'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"All\"), React.createElement(Dropdown.Item, {\n      onSelect: () => this.filter('Today'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Today\"), React.createElement(Dropdown.Item, {\n      onSelect: () => this.filter('Pending'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Pending\"), React.createElement(Dropdown.Item, {\n      onSelect: () => this.filter('Accepted'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Accepted\"), React.createElement(Dropdown.Item, {\n      onSelect: () => this.filter('Rejected'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Rejected\"), React.createElement(Dropdown.Item, {\n      onSelect: () => this.filter('Past'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Past\"), React.createElement(Dropdown.Item, {\n      onSelect: () => this.filter('Coming'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Coming\"))), this.renderAppointments(), React.createElement(ConfirmationModal, {\n      show: this.state.show,\n      close: this.close,\n      accept: this.accept,\n      reject: this.reject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Appointments;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/src/components/Appointments.js"],"names":["React","Component","Dropdown","Table","baseService","ConfirmationModal","Tab","Tabs","Appointments","state","appointments","appointmentsFiltered","show","selectedAppointment","filter","eventClicked","e","alert","close","setState","updateAppointmentStatus","status","newAppointment","updateAppointment","accept","reject","filterCondition","appoinntments","singleAppointment","appointmentDate","Date","toDateString","onAppointmentClick","preventDefault","renderAppointments","length","map","index","clientId","username","requestDate","time","toLowerCase","componentWillMount","getAppointments","then","response","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Dropdown, Table} from \"react-bootstrap\";\nimport baseService from \"../services/baseService\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\n\n\nclass Appointments extends Component {\n\n    state = {\n        appointments: [],\n        appointmentsFiltered: [],\n        show: false,\n        selectedAppointment: {},\n        filter: 'All'\n    };\n\n    componentWillMount() {\n        baseService.getAppointments().then((response) => {\n            this.setState({appointments: response, appointmentsFiltered: response})\n        }).catch(err => console.log(err))\n    }\n\n    eventClicked = (e) => {\n        alert(e);\n    }\n\n    close = () => {\n        this.setState({show: false})\n    };\n    updateAppointmentStatus = async (status) => {\n        let newAppointment = this.state.selectedAppointment;\n        newAppointment.status = status;\n        await baseService.updateAppointment(newAppointment);\n    }\n    accept = () => {\n        this.updateAppointmentStatus('Accepted')\n        this.close();\n    }\n    reject = () => {\n        this.updateAppointmentStatus('Rejected')\n        this.close();\n    }\n\n    filter = (filterCondition) => {\n        this.setState({filter:filterCondition});\n        if(filterCondition === \"All\")\n        {\n            this.setState({appointmentsFiltered: this.state.appointments});\n            return;\n        }\n        let appoinntments = [...this.state.appointments];\n        appoinntments = appoinntments.filter((singleAppointment) => {\n            if (filterCondition === \"Pending\" || filterCondition === \"Accepted\" || filterCondition === \"Rejected\")\n                return singleAppointment.status == filterCondition;\n            else if (filterCondition === \"Coming\")\n                return singleAppointment.appointmentDate < new Date().toDateString();\n            else if (filterCondition === \"Past\")\n                return singleAppointment.appointmentDate > new Date().toDateString()\n            else if (filterCondition === \"Today\")\n                return singleAppointment.appointmentDate == new Date().toDateString()\n        })\n        this.setState({appointmentsFiltered: appoinntments})\n\n    };\n    onAppointmentClick = (e,selectedAppointment) => {\n        e.preventDefault();\n        this.setState({selectedAppointment, show: true})\n\n    }\n    renderAppointments = () => {\n        return (\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Username</th>\n                    <th>Request Date</th>\n                    <th>Appointment Time</th>\n                    <th>Appointment Date</th>\n                    <th>Status</th>\n                    <th>Actions</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.appointmentsFiltered.length > 0 ? this.state.appointmentsFiltered.map((singleAppointment, index) => {\n                    return (\n\n                        <tr key={index}>\n                            <td>{index + 1}</td>\n                            <td>{singleAppointment.clientId.username}</td>\n                            <td>{new Date(singleAppointment.requestDate).toDateString()}</td>\n                            <td>{singleAppointment.time}</td>\n                            <td>{singleAppointment.appointmentDate}</td>\n                            <td>{singleAppointment.status}</td>\n                            <td>{singleAppointment.status !==\"Pending\" ?\n                                <p>Action Taken</p>:\n                                <a href='' onClick={(e) => this.onAppointmentClick(e,singleAppointment)}>Take Action</a>}\n                            </td>\n                        </tr>\n                    )\n                }) : <tr>\n                    <td colSpan={7}>\n                        <p className={'center'}>there is no {this.state.filter !==\"All\" && this.state.filter.toLowerCase()} appointments yet</p>\n                    </td>\n                </tr>}\n                </tbody>\n            </Table>\n        )\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h2>Appointments</h2>\n\n                <Dropdown>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        ({this.state.filter}) Appointments\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item onSelect={()=>this.filter('All')} >All</Dropdown.Item>\n                        <Dropdown.Item onSelect={()=>this.filter('Today')} >Today</Dropdown.Item>\n                        <Dropdown.Item onSelect={()=>this.filter('Pending')} >Pending</Dropdown.Item>\n                        <Dropdown.Item onSelect={()=>this.filter('Accepted')} >Accepted</Dropdown.Item>\n                        <Dropdown.Item onSelect={()=>this.filter('Rejected')} >Rejected</Dropdown.Item>\n                        <Dropdown.Item onSelect={()=>this.filter('Past')} >Past</Dropdown.Item>\n                        <Dropdown.Item onSelect={()=>this.filter('Coming')} >Coming</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                {this.renderAppointments()}\n\n                <ConfirmationModal show={this.state.show} close={this.close} accept={this.accept} reject={this.reject}/>\n            </div>\n        );\n    }\n}\n\nexport default Appointments;\n\n"]},"metadata":{},"sourceType":"module"}