{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/TazweedAdminPanel/src/components/Appointments.js\";\nimport React, { Component } from 'react';\nimport { Table } from \"react-bootstrap\";\nimport baseService from \"../services/baseService\";\n\nclass Appointments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      appointments: []\n    };\n\n    this.eventClicked = e => {\n      alert(e);\n    };\n\n    this.timeConvert = time => {\n      // Check correct time format and split into components\n      time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n      if (time.length > 1) {\n        // If time format correct\n        time = time.slice(1); // Remove full string match value\n\n        time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n\n        time[0] = +time[0] % 12 || 12; // Adjust hours\n      }\n\n      return time.join(''); // return adjusted time or original string\n    };\n  }\n\n  componentWillMount() {\n    baseService.getAppointments().then(response => {\n      this.setState({\n        appointments: response\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Appointments\"), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Time\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.appointments.length > 0 ? this.state.appointments.map((singleAppointment, index) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, index + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, singleAppointment.clientId.username), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, singleAppointment.requestDate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.timeConvert('00:22')));\n    }) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" \", React.createElement(\"td\", {\n      colSpan: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"there is no appointments yet\"))))));\n  }\n\n}\n\nexport default Appointments;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/TazweedAdminPanel/src/components/Appointments.js"],"names":["React","Component","Table","baseService","Appointments","state","appointments","eventClicked","e","alert","timeConvert","time","toString","match","length","slice","join","componentWillMount","getAppointments","then","response","setState","catch","err","console","log","render","map","singleAppointment","index","clientId","username","requestDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Table} from \"react-bootstrap\";\nimport baseService from \"../services/baseService\";\n\n\nclass Appointments extends Component {\n\n    state={\n        appointments:[]\n    };\n    componentWillMount() {\n        baseService.getAppointments().then((response)=>{\n            this.setState({appointments:response})\n        }).catch(err=>console.log(err))\n    }\n\n    eventClicked = (e) =>{\n        alert(e);\n    }\n    timeConvert= (time)=> {\n        // Check correct time format and split into components\n        time = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n        if (time.length > 1) { // If time format correct\n            time = time.slice (1);  // Remove full string match value\n            time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n            time[0] = +time[0] % 12 || 12; // Adjust hours\n        }\n        return time.join (''); // return adjusted time or original string\n    }\n    render() {\n        return (\n            <div>\n                <h2 >Appointments</h2>\n\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Username</th>\n                        <th>Date</th>\n                        <th>Time</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.appointments.length > 0 ? this.state.appointments.map((singleAppointment,index) =>{\n                        return(\n\n                            <tr>\n                                <td>{index+1}</td>\n                                <td>{singleAppointment.clientId.username}</td>\n                                <td>{singleAppointment.requestDate}</td>\n                                <td>{this.timeConvert('00:22')}</td>\n                            </tr>\n                        )\n                    }) :<tr> <td colSpan={5}><center>there is no appointments yet</center></td></tr> }\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default Appointments;\n\n"]},"metadata":{},"sourceType":"module"}