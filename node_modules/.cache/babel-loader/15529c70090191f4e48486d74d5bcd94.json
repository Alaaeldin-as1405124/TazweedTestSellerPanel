{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/customComponents/Map.js\";\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n\n    this.renderFunc = ({\n      getInputProps,\n      getSuggestionItemProps,\n      suggestions\n    }) => React.createElement(\"div\", {\n      className: \"autocomplete-root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.state.loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Loading...\"), suggestions.map(suggestion => React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, suggestion.description)))));\n\n    this.handleChange = p => {\n      console.log(p);\n    };\n  }\n\n  render() {\n    return React.createElement(PlacesAutocomplete, {\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.renderFunc);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/customComponents/Map.js"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","Map","Component","state","loading","renderFunc","getInputProps","getSuggestionItemProps","suggestions","map","suggestion","description","handleChange","p","console","log","render","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,IACIC,gBADJ,EAEIC,SAFJ,QAGO,2BAHP;;AAIA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE7BC,KAF6B,GAEvB;AACFC,MAAAA,OAAO,EAAC;AADN,KAFuB;;AAAA,SAK7BC,UAL6B,GAKhB,CAAC;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA,sBAAjB;AAAyCC,MAAAA;AAAzC,KAAD,KACT;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,+CAAWF,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWC,OAAX,IAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD3B,EAEKI,WAAW,CAACC,GAAZ,CAAgBC,UAAU,IACvB,6CAASH,sBAAsB,CAACG,UAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,UAAU,CAACC,WAAlB,CADJ,CADH,CAFL,CAFJ,CANyB;;AAAA,SAoBjCC,YApBiC,GAoBjBC,CAAD,IAAM;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAAe,KApBJ;AAAA;;AAqB7BG,EAAAA,MAAM,GAAE;AACL,WACI,oBAAC,kBAAD;AAAoB,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWc,KAAtC;AAA6C,MAAA,QAAQ,EAAE,KAAKL,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKP,UADV,CADJ;AAKF;;AA3B4B;;AA6BjC,eAAeJ,GAAf","sourcesContent":["import React from 'react'\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    getLatLng,\n} from 'react-places-autocomplete';\nclass Map extends React.Component{\n\n    state={\n        loading:false\n    }\n    renderFunc = ({ getInputProps, getSuggestionItemProps, suggestions }) => (\n        <div className=\"autocomplete-root\">\n            <input {...getInputProps()} />\n            <div className=\"autocomplete-dropdown-container\">\n                {this.state.loading && <div>Loading...</div>}\n                {suggestions.map(suggestion => (\n                    <div {...getSuggestionItemProps(suggestion)}>\n                        <span>{suggestion.description}</span>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n\n// In render function\nhandleChange = (p) =>{console.log(p)}\n    render(){\n       return(\n           <PlacesAutocomplete value={this.state.value} onChange={this.handleChange}>\n               {this.renderFunc}\n           </PlacesAutocomplete>\n       )\n    }\n}\nexport default Map\n"]},"metadata":{},"sourceType":"module"}