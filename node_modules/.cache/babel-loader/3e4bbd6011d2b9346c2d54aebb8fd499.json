{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/customComponents/SortableList.js\";\nimport React from 'react';\nimport Sortable from 'react-sortablejs';\nimport { Button, ListGroup } from \"react-bootstrap\"; // Functional Component\n\nconst SortableList = ({\n  items,\n  onChange\n}) => {\n  let sortable = null; // sortable instance\n\n  const reverseOrder = evt => {\n    const order = sortable.toArray();\n    onChange(order.reverse());\n  };\n\n  const listItems = items.map((file, index) => React.createElement(\"div\", {\n    key: index,\n    \"data-id\": file,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'row',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'col',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, file.type.includes('video') && !file.link.toString().toLowerCase().includes('youtube') ? React.createElement(\"video\", {\n    style: {\n      width: 200,\n      height: 250,\n      padding: 5\n    },\n    controls: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: file.link,\n    type: 'video/' + file.link.substr(file.link.lastIndexOf('.') + 1, file.link.length),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), \"Your browser does not support HTML5 video.\") : file.type.includes('video') && file.link.toString().toLowerCase().includes('youtube') && React.createElement(\"iframe\", {\n    width: \"200\",\n    height: \"250\",\n    src: file.link.replace('watch?v=', 'embed/').split('&')[0],\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), file.type.includes('image') && React.createElement(\"img\", {\n    style: {\n      width: 100,\n      height: 100,\n      padding: 5\n    },\n    src: file.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => this.removeImageFile(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Remove\")))));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: reverseOrder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Reverse Order\"), React.createElement(Sortable // Sortable options (https://github.com/RubaXa/Sortable#options)\n  , {\n    options: {} // [Optional] Use ref to get the sortable instance\n    // https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute\n    ,\n    ref: c => {\n      if (c) {\n        sortable = c.sortable;\n      }\n    } // [Optional] A tag or react component to specify the wrapping element. Defaults to \"div\".\n    // In a case of a react component it is required to has children in the component\n    // and pass it down.\n    ,\n    tag: \"ul\" // [Optional] The onChange method allows you to implement a controlled component and keep\n    // DOM nodes untouched. You have to change state to re-render the component.\n    // @param {Array} order An ordered array of items defined by the `data-id` attribute.\n    // @param {Object} sortable The sortable instance.\n    // @param {Event} evt The event object.\n    ,\n    onChange: (order, sortable, evt) => {\n      onChange(order);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, listItems));\n};\n\nexport default SortableList;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/customComponents/SortableList.js"],"names":["React","Sortable","Button","ListGroup","SortableList","items","onChange","sortable","reverseOrder","evt","order","toArray","reverse","listItems","map","file","index","type","includes","link","toString","toLowerCase","width","height","padding","substr","lastIndexOf","length","replace","split","removeImageFile","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Sortable from 'react-sortablejs';\nimport {Button, ListGroup} from \"react-bootstrap\";\n\n// Functional Component\nconst SortableList = ({ items, onChange }) => {\n    let sortable = null; // sortable instance\n    const reverseOrder = (evt) => {\n        const order = sortable.toArray();\n        onChange(order.reverse());\n    };\n    const listItems = items.map((file,index) => (\n        <div key={index} data-id={file}>\n                <ListGroup.Item>\n                    <div className={'row'}>\n                        <div className={'col'}>\n                            { (file.type.includes('video') && !file.link.toString().toLowerCase().includes('youtube')) ?\n                                <video style={{width: 200, height: 250, padding: 5}} controls>\n                                    <source\n                                        src={file.link}\n                                        type={'video/' + file.link.substr(file.link.lastIndexOf('.') + 1, file.link.length)}\n                                    />\n                                    Your browser does not support HTML5 video.\n                                </video> : file.type.includes('video') && file.link.toString().toLowerCase().includes('youtube') &&\n                                <iframe width=\"200\" height=\"250\"\n                                        src={file.link.replace('watch?v=','embed/').split('&')[0]} frameBorder=\"0\"\n                                        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                                        allowFullScreen/>\n                            }\n                            {file.type.includes('image') &&\n                            <img style={{width: 100, height: 100, padding: 5}} src={file.link}/>}\n\n                        </div>\n                        <Button variant=\"danger\"\n                                onClick={() => this.removeImageFile(index)}>Remove</Button>\n                    </div>\n                </ListGroup.Item>\n\n\n        </div>\n    ));\n\n    return (\n        <div>\n            <button type=\"button\" onClick={reverseOrder}>Reverse Order</button>\n            <Sortable\n                // Sortable options (https://github.com/RubaXa/Sortable#options)\n                options={{\n                }}\n\n                // [Optional] Use ref to get the sortable instance\n                // https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute\n                ref={(c) => {\n                    if (c) {\n                        sortable = c.sortable;\n                    }\n                }}\n\n                // [Optional] A tag or react component to specify the wrapping element. Defaults to \"div\".\n                // In a case of a react component it is required to has children in the component\n                // and pass it down.\n                tag=\"ul\"\n\n                // [Optional] The onChange method allows you to implement a controlled component and keep\n                // DOM nodes untouched. You have to change state to re-render the component.\n                // @param {Array} order An ordered array of items defined by the `data-id` attribute.\n                // @param {Object} sortable The sortable instance.\n                // @param {Event} evt The event object.\n                onChange={(order, sortable, evt) => {\n                    onChange(order);\n                }}\n            >\n                {listItems}\n            </Sortable>\n        </div>\n    );\n};\n\n\n\nexport default SortableList;\n"]},"metadata":{},"sourceType":"module"}