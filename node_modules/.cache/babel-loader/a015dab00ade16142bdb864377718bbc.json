{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/AddCategory.js\";\nimport React, { Component } from 'react';\nimport { Button, Col, Container, Form, FormControl, ListGroup, Modal, Row } from \"react-bootstrap\";\nimport Media from \"./Media\";\nimport MediaSingle from \"./MediaSingle\";\nimport AddSubCategory from \"./AddSubCategory\";\n\nclass AddCategory extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      subCategories: [],\n      category: {},\n      name: '',\n      nameAr: '',\n      icon: '',\n      modal: false,\n      subCategoryModal: false,\n      edit: false,\n      title: 'Add'\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        modal: false,\n        subCategoryModal: false\n      });\n      this.props.handleClose();\n    };\n\n    this.addSubCategory = category => {\n      let subCategories = [...this.state.subCategories];\n      subCategories.push(category); //consider validations\n\n      this.setState({\n        subCategories,\n        subCategoryModal: false\n      });\n    };\n\n    this.addMediaFile = icon => {\n      this.setState({\n        icon\n      }); //console.log(icon)\n    };\n\n    this.onChange = (key, e) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    };\n\n    this.addCategory = () => {\n      if (this.state.name === '' || this.state.nameAr === '' || this.state.icon === '' || this.state.subCategories.length === 0) {\n        alert('please fill all fields');\n        return;\n      }\n\n      if (this.state.edit) {\n        //edit method\n        let category = this.state.category;\n        category.name = this.state.name;\n        category.nameAr = this.state.nameAr;\n        category.icon = this.state.icon;\n        category.subCategories = this.state.subCategories;\n        this.props.editCategory(category).catch(err => console.log(err));\n      } else {\n        this.props.addCategory({\n          name: this.state.name,\n          nameAr: this.state.nameAr,\n          icon: this.state.icon,\n          subCategories: this.state.subCategories\n        });\n      }\n\n      this.setState({\n        name: '',\n        nameAr: '',\n        icon: '',\n        subCategories: [],\n        edit: false,\n        title: 'Add'\n      });\n      this.handleClose();\n    };\n\n    this.removeSubCategory = subCategoryIndex => {\n      let subCategories = [...this.state.subCategories];\n      subCategories.splice(subCategoryIndex, 1);\n      this.setState({\n        subCategories\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (this.state.modal !== nextProps.modal) this.setState({\n      modal: nextProps.modal\n    });\n\n    if (nextProps.edit) {\n      let category = nextProps.category;\n\n      if (category) {\n        //edit category\n        this.setState({\n          category: nextProps.category,\n          title: 'Edit',\n          edit: true,\n          name: category.name,\n          nameAr: category.nameAr,\n          icon: category.icon,\n          subCategories: category.subCategories\n        });\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(Container, {\n      class: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.modal,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.title, \" Category\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Name (English)\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Category name\",\n      value: this.state.name,\n      onChange: e => this.onChange('name', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Name (Arabic)\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Category name (Arabic)\",\n      value: this.state.nameAr,\n      onChange: e => this.onChange('nameAr', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Category Icon\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(MediaSingle, {\n      updateMedia: this.addMediaFile,\n      icon: this.state.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      className: 'col',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"badge-info col\",\n      onClick: () => this.setState({\n        subCategoryModal: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), \" Add SubCategory\")), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.subCategories.length !== 0 ? this.state.subCategories.map((category, index) => {\n      return React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          width: 64,\n          height: 64,\n          padding: 5\n        },\n        src: category.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, category.name, \" / \", category.nameAr), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeSubCategory(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Remove\")));\n    }) : React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: 'col',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"No Subcategories yet\"))), React.createElement(AddSubCategory, {\n      modal: this.state.subCategoryModal,\n      handleClose: () => this.setState({\n        subCategoryModal: false\n      }),\n      addSubCategory: this.addSubCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => {\n        this.addCategory();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Save Changes\"))));\n  }\n\n}\n\nexport default AddCategory;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/AddCategory.js"],"names":["React","Component","Button","Col","Container","Form","FormControl","ListGroup","Modal","Row","Media","MediaSingle","AddSubCategory","AddCategory","state","subCategories","category","name","nameAr","icon","modal","subCategoryModal","edit","title","handleClose","setState","props","addSubCategory","push","addMediaFile","onChange","key","e","target","value","addCategory","length","alert","editCategory","catch","err","console","log","removeSubCategory","subCategoryIndex","splice","componentWillReceiveProps","nextProps","nextContext","render","map","index","width","height","padding"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Col, Container, Form, FormControl, ListGroup, Modal, Row} from \"react-bootstrap\";\nimport Media from \"./Media\";\nimport MediaSingle from \"./MediaSingle\";\nimport AddSubCategory from \"./AddSubCategory\";\n\nclass AddCategory extends Component {\n\n    state = {\n        subCategories: [],\n        category: {},\n        name: '',\n        nameAr: '',\n        icon: '',\n        modal: false,\n        subCategoryModal: false,\n        edit: false,\n        title: 'Add',\n\n    };\n\n    handleClose = () => {\n        this.setState({modal: false, subCategoryModal: false});\n\n        this.props.handleClose();\n    }\n\n    addSubCategory = (category) => {\n        let subCategories = [...this.state.subCategories];\n        subCategories.push(category);//consider validations\n        this.setState({subCategories, subCategoryModal: false});\n    }\n\n    addMediaFile = (icon) => {\n        this.setState({icon});\n        //console.log(icon)\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n\n    addCategory = () => {\n        if (this.state.name === '' || this.state.nameAr === '' || this.state.icon === '' || this.state.subCategories.length === 0) {\n            alert('please fill all fields');\n            return;\n        }\n        if (this.state.edit) {\n            //edit method\n            let category = this.state.category;\n            category.name = this.state.name;\n            category.nameAr = this.state.nameAr;\n            category.icon = this.state.icon;\n            category.subCategories = this.state.subCategories;\n            this.props.editCategory(category).catch((err) => console.log(err))\n        } else {\n            this.props.addCategory({\n                name: this.state.name,\n                nameAr: this.state.nameAr,\n                icon: this.state.icon,\n                subCategories: this.state.subCategories\n            });\n        }\n        this.setState({name: '', nameAr: '', icon: '', subCategories: [], edit: false, title: 'Add'})\n        this.handleClose();\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (this.state.modal !== nextProps.modal)\n            this.setState({modal: nextProps.modal});\n        if (nextProps.edit) {\n            let category = nextProps.category;\n            if (category) {\n                //edit category\n                this.setState({\n                    category: nextProps.category,\n                    title: 'Edit',\n                    edit: true,\n                    name: category.name,\n                    nameAr: category.nameAr,\n                    icon: category.icon,\n                    subCategories: category.subCategories,\n\n                })\n            }\n\n        }\n\n    }\n\n    removeSubCategory = (subCategoryIndex) => {\n        let subCategories = [...this.state.subCategories];\n        subCategories.splice(subCategoryIndex, 1);\n        this.setState({subCategories})\n    };\n\n    render() {\n        return (\n            <Container class>\n                <Modal show={this.state.modal} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.state.title} Category</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n\n                        <Form>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"2\">\n                                    Name (English)\n                                </Form.Label>\n                                <Col sm=\"4\">\n                                    <Form.Control type=\"text\" placeholder=\"Category name\"\n                                                  value={this.state.name}\n                                                  onChange={(e) => this.onChange('name', e)}/>\n                                </Col>\n                                <Form.Label column sm=\"2\">\n                                    Name (Arabic)\n                                </Form.Label>\n                                <Col sm=\"4\">\n                                    <Form.Control type=\"text\" placeholder=\"Category name (Arabic)\"\n                                                  value={this.state.nameAr}\n                                                  onChange={(e) => this.onChange('nameAr', e)}/>\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"2\">\n                                    Category Icon\n                                </Form.Label>\n                                <Col>\n                                    <MediaSingle updateMedia={this.addMediaFile} icon={this.state.icon}/>\n                                </Col>\n\n                            </Form.Group>\n\n\n                            <Form.Group as={Row} className={'col'}>\n                                <Button className=\"badge-info col\"\n                                        onClick={() => this.setState({subCategoryModal: true})}><i\n                                    className=\"fa fa-plus\"/> Add SubCategory</Button>\n                            </Form.Group>\n\n                            <ListGroup>\n\n\n                                {this.state.subCategories.length !== 0 ? this.state.subCategories.map((category, index) => {\n                                        return (\n                                            <ListGroup.Item>\n                                                <div className={'row'}>\n                                                    <img style={{width: 64, height: 64, padding: 5}} src={category.icon}/>\n                                                    <p className={'col'}>{category.name} / {category.nameAr}</p>\n                                                    <Button variant=\"danger\"\n                                                            onClick={() => this.removeSubCategory(index)}>Remove</Button>\n                                                </div>\n                                            </ListGroup.Item>\n                                        )\n                                    }) :\n                                    <ListGroup.Item>\n                                        <p className={'col'}>No Subcategories yet</p>\n                                    </ListGroup.Item>\n                                }\n\n\n                            </ListGroup>\n\n                            <AddSubCategory modal={this.state.subCategoryModal}\n                                            handleClose={() => this.setState({subCategoryModal: false})}\n                                            addSubCategory={this.addSubCategory}/>\n\n                        </Form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Cancel\n                        </Button>\n                        <Button variant=\"primary\" onClick={() => {\n                            this.addCategory()\n                        }}>\n                            Save Changes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </Container>\n\n        );\n    }\n}\n\nexport default AddCategory;\n"]},"metadata":{},"sourceType":"module"}