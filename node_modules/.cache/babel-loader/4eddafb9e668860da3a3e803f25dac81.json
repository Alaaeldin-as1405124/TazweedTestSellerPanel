{"ast":null,"code":"import _toConsumableArray from\"/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import baseService from\"../services/baseService\";import{Button,Form,ListGroup}from\"react-bootstrap\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import Col from\"react-bootstrap/Col\";var AddTimeSlot=/*#__PURE__*/function(_Component){_inherits(AddTimeSlot,_Component);function AddTimeSlot(){var _getPrototypeOf2;var _this;_classCallCheck(this,AddTimeSlot);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(AddTimeSlot)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={timeSlots:[],startTime:'',endTime:''};_this.getTimeSlots=function(){baseService.getTimeSlots().then(function(timeSlots){console.log('timeslots from the server ',timeSlots);_this.setState({timeSlots:timeSlots});});};_this.onChange=function(key,e){_this.setState(_defineProperty({},key,e.target.value));};_this.checkTimeValidity=function(){//TODO Advance time conflict check\n//check if there is conflict\nvar result=true;_this.state.timeSlots.forEach(function(singleTimeSlot){if(_this.state.startTime==singleTimeSlot.startTime||_this.state.endTime==singleTimeSlot.endTime)result=false;});return result;};_this.addTime=function(){var timeSlots=_toConsumableArray(_this.state.timeSlots);if(_this.state.startTime===''||_this.state.endTime===''){alert('Please enter valid time');return;}if(_this.checkTimeValidity()){timeSlots.push({startTime:_this.state.startTime,endTime:_this.state.endTime});baseService.addTimeSlot(timeSlots).then(function(responnse){_this.getTimeSlots();_this.setState({startTime:'',endTime:''});}).catch(function(err){return console.log(err);});}else{alert(\"Time conflict\");}};_this.removeTimeSlot=function(index){if(window.confirm(\"Are you sure you want to this time slot? It won't affect the current booked appointments, it will be applied for the future appointments\")){var timeSlots=_toConsumableArray(_this.state.timeSlots);timeSlots.splice(index,1);baseService.deleteTimeSlot(timeSlots).then(function(response){_this.getTimeSlots();//update the current state after changing to the database\n}).catch(function(err){return console.log(err);});}};_this.timeConvert=function(time){//do the format\ntime=time.startTime+' to '+time.endTime;var newTime=time.split(' to ');newTime.map(function(singleTime,index){// Check correct time format and split into components\nsingleTime=singleTime.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/)||[time];if(singleTime.length>1){// If time format correct\nsingleTime=singleTime.slice(1);// Remove full string match value\nsingleTime[5]=+singleTime[0]<12?'AM':'PM';// Set AM/PM\nsingleTime[0]=+singleTime[0]%12||12;// Adjust hours\n}newTime[index]=singleTime.join('');if(index===0)newTime[index]+=\" to \";});return newTime;// return adjusted time or original string\n};return _this;}_createClass(AddTimeSlot,[{key:\"componentWillMount\",value:function componentWillMount(){this.getTimeSlots();}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{className:'col-9'},React.createElement(\"h2\",null,\"Add time slot\"),React.createElement(Form,null,React.createElement(Form.Row,null,React.createElement(Form.Group,{className:'col'},React.createElement(Form.Label,null,\"From\"),React.createElement(Form.Control,{type:\"time\",placeholder:\"enter start time\",value:this.state.startTime,onChange:function onChange(e){return _this2.onChange('startTime',e);}})),React.createElement(Form.Group,{className:'col'},React.createElement(Form.Label,null,\"To\"),React.createElement(Form.Control,{type:\"time\",placeholder:\"enter ending time\",value:this.state.endTime,onChange:function onChange(e){return _this2.onChange('endTime',e);}})),React.createElement(Form.Group,null,React.createElement(Button,{variant:\"success\",onClick:this.addTime},React.createElement(\"i\",{className:\"fa fa-plus\"}),\" Add\")))),this.state.timeSlots.map(function(singleTimeSlot,index){return React.createElement(ListGroup.Item,null,React.createElement(\"div\",{className:'row'},React.createElement(\"p\",{className:'col'},_this2.timeConvert(singleTimeSlot)),React.createElement(Button,{variant:\"danger\",onClick:function onClick(){return _this2.removeTimeSlot(index);}},\"Remove\")));}));}}]);return AddTimeSlot;}(Component);export default AddTimeSlot;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/src/components/AddTimeSlot.js"],"names":["React","Component","baseService","Button","Form","ListGroup","FontAwesomeIcon","Col","AddTimeSlot","state","timeSlots","startTime","endTime","getTimeSlots","then","console","log","setState","onChange","key","e","target","value","checkTimeValidity","result","forEach","singleTimeSlot","addTime","alert","push","addTimeSlot","responnse","catch","err","removeTimeSlot","index","window","confirm","splice","deleteTimeSlot","response","timeConvert","time","newTime","split","map","singleTime","toString","match","length","slice","join"],"mappings":"q+BAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CAEA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,OAAQC,MAAR,CAAgBC,IAAhB,CAAsBC,SAAtB,KAAsC,iBAAtC,CACA,OAAQC,eAAR,KAA8B,gCAA9B,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,C,GAEMC,CAAAA,W,mZACFC,K,CAAQ,CACJC,SAAS,CAAE,EADP,CAEJC,SAAS,CAAE,EAFP,CAGJC,OAAO,CAAE,EAHL,C,OAURC,Y,CAAe,UAAM,CACjBX,WAAW,CAACW,YAAZ,GAA2BC,IAA3B,CAAgC,SAACJ,SAAD,CAAe,CAC3CK,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0CN,SAA1C,EACA,MAAKO,QAAL,CAAc,CAACP,SAAS,CAATA,SAAD,CAAd,EACH,CAHD,EAIH,C,OAEDQ,Q,CAAW,SAACC,GAAD,CAAMC,CAAN,CAAY,CACnB,MAAKH,QAAL,oBAAgBE,GAAhB,CAAsBC,CAAC,CAACC,MAAF,CAASC,KAA/B,GACH,C,OAEDC,iB,CAAoB,UAAI,CACpB;AACA;AACA,GAAIC,CAAAA,MAAM,CAAG,IAAb,CACA,MAAKf,KAAL,CAAWC,SAAX,CAAqBe,OAArB,CAA6B,SAACC,cAAD,CAAkB,CAC3C,GAAG,MAAKjB,KAAL,CAAWE,SAAX,EAAwBe,cAAc,CAACf,SAAvC,EAAoD,MAAKF,KAAL,CAAWG,OAAX,EAAsBc,cAAc,CAACd,OAA5F,CACIY,MAAM,CAAE,KAAR,CAEP,CAJD,EAKA,MAAOA,CAAAA,MAAP,CACH,C,OACDG,O,CAAU,UAAM,CACZ,GAAIjB,CAAAA,SAAS,oBAAO,MAAKD,KAAL,CAAWC,SAAlB,CAAb,CACA,GAAG,MAAKD,KAAL,CAAWE,SAAX,GAAyB,EAAzB,EAA+B,MAAKF,KAAL,CAAWG,OAAX,GAAsB,EAAxD,CAA2D,CACvDgB,KAAK,CAAC,yBAAD,CAAL,CACA,OACH,CACD,GAAG,MAAKL,iBAAL,EAAH,CAA4B,CAExBb,SAAS,CAACmB,IAAV,CAAe,CACXlB,SAAS,CAAE,MAAKF,KAAL,CAAWE,SADX,CAEXC,OAAO,CAAE,MAAKH,KAAL,CAAWG,OAFT,CAAf,EAIAV,WAAW,CAAC4B,WAAZ,CAAwBpB,SAAxB,EAAmCI,IAAnC,CAAwC,SAACiB,SAAD,CAAe,CACnD,MAAKlB,YAAL,GACA,MAAKI,QAAL,CAAc,CAACN,SAAS,CAAC,EAAX,CAAcC,OAAO,CAAC,EAAtB,CAAd,EACH,CAHD,EAGGoB,KAHH,CAGS,SAACC,GAAD,QAASlB,CAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ,CAAT,EAHT,EAIH,CAVD,IAWI,CACAL,KAAK,CAAC,eAAD,CAAL,CACH,CAEJ,C,OAEDM,c,CAAiB,SAACC,KAAD,CAAW,CACxB,GAAIC,MAAM,CAACC,OAAP,CAAe,0IAAf,CAAJ,CAAgK,CAC5J,GAAI3B,CAAAA,SAAS,oBAAO,MAAKD,KAAL,CAAWC,SAAlB,CAAb,CACAA,SAAS,CAAC4B,MAAV,CAAiBH,KAAjB,CAAwB,CAAxB,EACAjC,WAAW,CAACqC,cAAZ,CAA2B7B,SAA3B,EAAsCI,IAAtC,CAA2C,SAAC0B,QAAD,CAAc,CACrD,MAAK3B,YAAL,GAAoB;AACvB,CAFD,EAEGmB,KAFH,CAES,SAACC,GAAD,QAASlB,CAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ,CAAT,EAFT,EAGH,CAEJ,C,OAEDQ,W,CAAc,SAACC,IAAD,CAAU,CACpB;AACAA,IAAI,CAAGA,IAAI,CAAC/B,SAAL,CAAgB,MAAhB,CAAuB+B,IAAI,CAAC9B,OAAnC,CACA,GAAI+B,CAAAA,OAAO,CAAGD,IAAI,CAACE,KAAL,CAAW,MAAX,CAAd,CACAD,OAAO,CAACE,GAAR,CAAY,SAACC,UAAD,CAAaX,KAAb,CAAuB,CAC/B;AACAW,UAAU,CAAGA,UAAU,CAACC,QAAX,GAAsBC,KAAtB,CAA4B,0CAA5B,GAA2E,CAACN,IAAD,CAAxF,CAEA,GAAII,UAAU,CAACG,MAAX,CAAoB,CAAxB,CAA2B,CAAE;AACzBH,UAAU,CAAGA,UAAU,CAACI,KAAX,CAAiB,CAAjB,CAAb,CAAmC;AACnCJ,UAAU,CAAC,CAAD,CAAV,CAAgB,CAACA,UAAU,CAAC,CAAD,CAAX,CAAiB,EAAjB,CAAsB,IAAtB,CAA6B,IAA7C,CAAmD;AACnDA,UAAU,CAAC,CAAD,CAAV,CAAgB,CAACA,UAAU,CAAC,CAAD,CAAX,CAAiB,EAAjB,EAAuB,EAAvC,CAA2C;AAC9C,CAEDH,OAAO,CAACR,KAAD,CAAP,CAAiBW,UAAU,CAACK,IAAX,CAAgB,EAAhB,CAAjB,CACA,GAAIhB,KAAK,GAAK,CAAd,CACIQ,OAAO,CAACR,KAAD,CAAP,EAAkB,MAAlB,CAGP,CAfD,EAiBA,MAAOQ,CAAAA,OAAP,CAAgB;AACnB,C,sGAlFoB,CACjB,KAAK9B,YAAL,GACH,C,uCAkFQ,iBACL,MACI,4BAAK,SAAS,CAAE,OAAhB,EACI,8CADJ,CAEI,oBAAC,IAAD,MACI,oBAAC,IAAD,CAAM,GAAN,MACI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAE,KAAvB,EACI,oBAAC,IAAD,CAAM,KAAN,aADJ,CAEI,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,kBAAtC,CACc,KAAK,CAAE,KAAKJ,KAAL,CAAWE,SADhC,CAEc,QAAQ,CAAE,kBAACS,CAAD,QAAO,CAAA,MAAI,CAACF,QAAL,CAAc,WAAd,CAA2BE,CAA3B,CAAP,EAFxB,EAFJ,CADJ,CAOI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAE,KAAvB,EACI,oBAAC,IAAD,CAAM,KAAN,WADJ,CAEI,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,mBAAtC,CACc,KAAK,CAAE,KAAKX,KAAL,CAAWG,OADhC,CAEc,QAAQ,CAAE,kBAACQ,CAAD,QAAO,CAAA,MAAI,CAACF,QAAL,CAAc,SAAd,CAAyBE,CAAzB,CAAP,EAFxB,EAFJ,CAPJ,CAcI,oBAAC,IAAD,CAAM,KAAN,MAEI,oBAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,CAAE,KAAKO,OAAxC,EACI,yBAAG,SAAS,CAAC,YAAb,EADJ,QAFJ,CAdJ,CADJ,CAFJ,CA+BK,KAAKlB,KAAL,CAAWC,SAAX,CAAqBmC,GAArB,CAAyB,SAACnB,cAAD,CAAiBS,KAAjB,CAA2B,CACjD,MAEI,qBAAC,SAAD,CAAW,IAAX,MACI,2BAAK,SAAS,CAAE,KAAhB,EAEI,yBAAG,SAAS,CAAE,KAAd,EAAsB,MAAI,CAACM,WAAL,CAAiBf,cAAjB,CAAtB,CAFJ,CAGI,oBAAC,MAAD,EAAQ,OAAO,CAAC,QAAhB,CACQ,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACQ,cAAL,CAAoBC,KAApB,CAAN,EADjB,WAHJ,CADJ,CAFJ,CAYH,CAbA,CA/BL,CADJ,CAgDH,C,yBA5IqBlC,S,EA+I1B,cAAeO,CAAAA,WAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport baseService from \"../services/baseService\";\nimport {Button, Form, ListGroup} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Col from \"react-bootstrap/Col\";\n\nclass AddTimeSlot extends Component {\n    state = {\n        timeSlots: [],\n        startTime: '',\n        endTime: ''\n    };\n\n    componentWillMount() {\n        this.getTimeSlots();\n    }\n\n    getTimeSlots = () => {\n        baseService.getTimeSlots().then((timeSlots) => {\n            console.log('timeslots from the server ', timeSlots)\n            this.setState({timeSlots})\n        })\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n\n    checkTimeValidity = ()=>{\n        //TODO Advance time conflict check\n        //check if there is conflict\n        let result = true;\n        this.state.timeSlots.forEach((singleTimeSlot)=>{\n            if(this.state.startTime == singleTimeSlot.startTime || this.state.endTime == singleTimeSlot.endTime)\n                result= false;\n\n        })\n        return result;\n    }\n    addTime = () => {\n        let timeSlots = [...this.state.timeSlots];\n        if(this.state.startTime === '' || this.state.endTime=== ''){\n            alert('Please enter valid time');\n            return;\n        }\n        if(this.checkTimeValidity()){\n\n            timeSlots.push({\n                startTime: this.state.startTime,\n                endTime: this.state.endTime\n            });\n            baseService.addTimeSlot(timeSlots).then((responnse) => {\n                this.getTimeSlots();\n                this.setState({startTime:'',endTime:''})\n            }).catch((err) => console.log(err));\n        }\n        else{\n            alert(\"Time conflict\")\n        }\n\n    }\n\n    removeTimeSlot = (index) => {\n        if (window.confirm(\"Are you sure you want to this time slot? It won't affect the current booked appointments, it will be applied for the future appointments\")) {\n            let timeSlots = [...this.state.timeSlots];\n            timeSlots.splice(index, 1);\n            baseService.deleteTimeSlot(timeSlots).then((response) => {\n                this.getTimeSlots();//update the current state after changing to the database\n            }).catch((err) => console.log(err));\n        }\n\n    }\n\n    timeConvert = (time) => {\n        //do the format\n        time = time.startTime +' to '+time.endTime;\n        let newTime = time.split(' to ');\n        newTime.map((singleTime, index) => {\n            // Check correct time format and split into components\n            singleTime = singleTime.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n            if (singleTime.length > 1) { // If time format correct\n                singleTime = singleTime.slice(1);  // Remove full string match value\n                singleTime[5] = +singleTime[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n                singleTime[0] = +singleTime[0] % 12 || 12; // Adjust hours\n            }\n\n            newTime[index] = singleTime.join('');\n            if (index === 0)\n                newTime[index] += \" to \";\n\n\n        });\n\n        return newTime; // return adjusted time or original string\n    };\n\n    render() {\n        return (\n            <div className={'col-9'}>\n                <h2>Add time slot</h2>\n                <Form>\n                    <Form.Row>\n                        <Form.Group className={'col'}>\n                            <Form.Label>From</Form.Label>\n                            <Form.Control type=\"time\" placeholder=\"enter start time\"\n                                          value={this.state.startTime}\n                                          onChange={(e) => this.onChange('startTime', e)}/>\n                        </Form.Group>\n                        <Form.Group className={'col'}>\n                            <Form.Label>To</Form.Label>\n                            <Form.Control type=\"time\" placeholder=\"enter ending time\"\n                                          value={this.state.endTime}\n                                          onChange={(e) => this.onChange('endTime', e)}/>\n                        </Form.Group>\n\n                        <Form.Group >\n\n                            <Button variant=\"success\" onClick={this.addTime}>\n                                <i className=\"fa fa-plus\"/> Add\n                            </Button>\n\n                        </Form.Group>\n\n\n\n                    </Form.Row>\n\n                </Form>\n\n                {this.state.timeSlots.map((singleTimeSlot, index) => {\n                    return (\n\n                        <ListGroup.Item>\n                            <div className={'row'}>\n\n                                <p className={'col'}>{this.timeConvert(singleTimeSlot)}</p>\n                                <Button variant=\"danger\"\n                                        onClick={() => this.removeTimeSlot(index)}>Remove</Button>\n                            </div>\n                        </ListGroup.Item>\n\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default AddTimeSlot;\n\n"]},"metadata":{},"sourceType":"module"}