{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/AddPlace.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Row, Col, ListGroup, Alert, Modal, Container, FormControl } from 'react-bootstrap';\nimport { useState, useEffect, useRef } from 'react';\nimport Media from \"./Media\";\nimport SocialMedia from \"./SocialMedia\";\nimport baseService from \"../services/baseService\";\nimport DragableList from \"../customComponents/DragableList\";\nimport SubScriptionControl from \"./SubScriptionControl\";\n\nclass AddPlace extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      categories: [],\n      name: '',\n      nameAr: '',\n      desc: '',\n      descAr: '',\n      media: [],\n      loading: true,\n      title: 'Add',\n      edit: false,\n      locations: [],\n      selectedLocationIndex: 0,\n      selectedCategoryIndex: 0,\n      selectedSubCategoryIndex: 0,\n      phones: [],\n      emails: [],\n      workingHours: [],\n      website: '',\n      phone: '',\n      email: '',\n      workingHourFrom: '',\n      workingHourTo: '',\n      subscriptionInfo: {},\n      place: {},\n      socialMedia: []\n    };\n\n    this.updateSubscriptionInfo = subscriptionInfo => {\n      this.setState({\n        subscriptionInfo\n      });\n    };\n\n    this.checkProps = nextProps => {\n      if (nextProps.edit) {\n        let place = nextProps.place;\n\n        if (place) {\n          //edit category\n          this.setState({\n            place: nextProps.place,\n            edit: true,\n            title: 'Edit',\n            name: place.name,\n            nameAr: place.nameAr,\n            desc: place.desc,\n            descAr: place.descAr,\n            media: place.media,\n            phones: place.phone,\n            emails: place.email,\n            workingHours: place.workingHours,\n            website: place.website,\n            subscriptionInfo: place.subscriptionInfo,\n            socialMedia: place.socialMedia\n          });\n        }\n      }\n    };\n\n    this.onChange = (key, e) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    };\n\n    this.onLocationChange = e => {\n      this.setState({\n        selectedLocationIndex: e.target.selectedIndex\n      });\n    };\n\n    this.onCategoryChange = e => {\n      this.setState({\n        selectedCategoryIndex: e.target.selectedIndex\n      });\n    };\n\n    this.onSubCategoryChange = e => {\n      this.setState({\n        selectedSubCategoryIndex: e.target.selectedIndex\n      });\n    };\n\n    this.addCategory = () => {\n      let locationCategories = [...this.state.locationCategories];\n\n      if (locationCategories.includes(this.state.categories[this.state.selectedCategory])) {\n        alert('AddLocation already has this category');\n        return;\n      }\n\n      locationCategories.push(this.state.categories[this.state.selectedCategory]);\n      this.setState({\n        locationCategories\n      });\n    };\n\n    this.updateSocialMediaList = socialMediaList => {\n      //keep social media sync\n      this.setState({\n        socialMedia: socialMediaList\n      });\n    };\n\n    this.updateMediaFiles = media => {\n      this.setState({\n        media\n      });\n    };\n\n    this.addPhone = () => {\n      let phones = [...this.state.phones];\n      phones.push(this.state.phone);\n      this.setState({\n        phones,\n        phone: ''\n      });\n    };\n\n    this.removePhone = index => {\n      let phones = [...this.state.phones];\n      phones.splice(index, 1);\n      this.setState({\n        phones\n      });\n    };\n\n    this.addEmail = () => {\n      let emails = [...this.state.emails];\n      emails.push(this.state.email);\n      this.setState({\n        emails,\n        email: ''\n      });\n    };\n\n    this.removeEmail = index => {\n      let emails = [...this.state.emails];\n      emails.splice(index, 1);\n      this.setState({\n        emails\n      });\n    };\n\n    this.timeFormat = time => {\n      let timeSplit = time.split(':'),\n          hours,\n          minutes,\n          meridian;\n      hours = timeSplit[0];\n      minutes = timeSplit[1];\n\n      if (hours > 12) {\n        meridian = 'PM';\n        hours -= 12;\n      } else if (hours < 12) {\n        meridian = 'AM';\n\n        if (hours === 0) {\n          hours = 12;\n        }\n      } else {\n        meridian = 'PM';\n      }\n\n      return hours + ':' + minutes + ' ' + meridian; //alert(hours + ':' + minutes + ' ' + meridian);\n    };\n\n    this.addWorkingHour = () => {\n      let workingFrom = this.state.workingHourFrom;\n      let workingTo = this.state.workingHourTo;\n\n      if (!workingFrom || !workingTo) {\n        alert('Please choose correct time');\n        return;\n      }\n\n      let workingHours = [...this.state.workingHours];\n      let workingHour = this.timeFormat(workingFrom) + \" To \" + this.timeFormat(workingTo);\n      workingHours.push(workingHour);\n      this.setState({\n        workingHours,\n        workingHourFrom: '',\n        workingHourTo: ''\n      });\n    };\n\n    this.removeWorkingHour = index => {\n      let workingHours = [...this.state.workingHours];\n      workingHours.splice(index, 1);\n      this.setState({\n        workingHours\n      });\n    };\n\n    this.addPlace = () => {\n      let category = this.state.categories[this.state.selectedCategoryIndex]._id; //get categoryId from the selected one\n\n      let subCategory = this.state.categories[this.state.selectedCategoryIndex].subCategories[this.state.selectedSubCategoryIndex]._id;\n      let location = this.state.locations[this.state.selectedLocationIndex]._id;\n      let mapLocation = {\n        latitude: '124',\n        longitude: '-12'\n      };\n\n      if (this.state.edit) {\n        let place = this.state.place;\n        place.name = this.state.name;\n        place.nameAr = this.state.nameAr;\n        place.desc = this.state.desc;\n        place.descAr = this.state.descAr;\n        place.media = this.state.media;\n        place.category = category;\n        place.subCategory = subCategory;\n        place.phone = this.state.phones;\n        place.email = this.state.emails;\n        place.workingHours = this.state.workingHours;\n        place.website = this.state.website;\n        place.location = location;\n        place.mapLocation = mapLocation;\n        place.socialMedia = this.state.socialMedia;\n        place.subscriptionInfo = this.state.subscriptionInfo;\n        baseService.updatePlace(place).catch(err => console.log(err));\n        if (this.props && this.props.updatePlace) this.props.updatePlace();\n      } else {\n        let place = {\n          name: this.state.name,\n          nameAr: this.state.nameAr,\n          desc: this.state.desc,\n          descAr: this.state.descAr,\n          media: this.state.media,\n          category: category,\n          subCategory: subCategory,\n          phone: this.state.phones,\n          email: this.state.emails,\n          workingHours: this.state.workingHours,\n          website: this.state.website,\n          location: location,\n          mapLocation: mapLocation,\n          socialMedia: this.state.socialMedia,\n          subscriptionInfo: this.state.subscriptionInfo\n        };\n        baseService.addPlace(place).then(response => console.log(response)).catch(err => console.log(err));\n      }\n    };\n  }\n\n  componentWillMount() {\n    baseService.getCategories().then(categories => this.setState({\n      categories,\n      loading: false\n    }));\n    baseService.getLocations().then(locations => this.setState({\n      locations\n    }));\n    this.checkProps(this.props);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    this.checkProps(nextProps);\n  }\n\n  render() {\n    if (this.state.categories.length === 0) return React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Please Add Location first\", React.createElement(Button, {\n      className: \"badge-info col-6\",\n      href: '/Categories',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), \" Add Category\"));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Container, {\n      class: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, !this.props.handleClose && React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \" Add Place\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Name (English)\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Place name\",\n      onChange: e => this.onChange('name', e),\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })), React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Name (Arabic)\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Place name (Arabic)\",\n      onChange: e => this.onChange('nameAr', e),\n      value: this.state.nameAr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formPlaintextPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Description (English)\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Place Description\",\n      onChange: e => this.onChange('desc', e),\n      value: this.state.desc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    })), React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Description (Arabic)\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Place Description (Arabic)\",\n      onChange: e => this.onChange('descAr', e),\n      value: this.state.descAr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formPlaintextPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Website\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Website\",\n      onChange: e => this.onChange('website', e),\n      value: this.state.website,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }))), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Please choose location\"), React.createElement(FormControl, {\n      as: 'select',\n      onChange: this.onLocationChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, this.state.locations.map((location, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, location.name, \" / \", location.nameAr);\n    }))), React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"Please choose Category\"), React.createElement(FormControl, {\n      as: 'select',\n      onChange: this.onCategoryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, this.state.locations[this.state.selectedLocationIndex] && this.state.locations[this.state.selectedLocationIndex].categories.map((category, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, category.name, \" / \", category.nameAr);\n    }))), React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Choose SubCategory\"), React.createElement(FormControl, {\n      as: 'select',\n      onChange: this.onSubCategoryChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, this.state.locations[this.state.selectedLocationIndex] && this.state.locations[this.state.selectedLocationIndex].categories[this.state.selectedCategoryIndex].subCategories.map((category, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, category.name, \" / \", category.nameAr);\n    })))))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Please Add phone\"), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Phone Number\",\n      onChange: e => this.onChange('phone', e),\n      value: this.state.phone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      className: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"badge-info col-6\",\n      onClick: () => this.addPhone(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), \" Add\"))), this.state.phones.length !== 0 ? this.state.phones.map((phone, index) => {\n      return React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, phone), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removePhone(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"Remove\")));\n    }) : React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: 'col',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"No Phones added yet\"))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"Please Add Email\"), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Email\",\n      onChange: e => this.onChange('email', e),\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      className: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"badge-info col-6\",\n      onClick: () => this.addEmail(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }), \" Add\"))), this.state.emails.length !== 0 ? this.state.emails.map((email, index) => {\n      return React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, email), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeEmail(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, \"Remove\")));\n    }) : React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: 'col',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"No Emails added yet\"))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"Please Working Hours\"), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"time\",\n      placeholder: \"Working Hours From\",\n      onChange: e => this.onChange('workingHourFrom', e),\n      value: this.state.workingHourFrom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, \"To\"), React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"time\",\n      placeholder: \"Working Hours To\",\n      onChange: e => this.onChange('workingHourTo', e),\n      value: this.state.workingHourTo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      className: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"badge-info col-6\",\n      onClick: () => this.addWorkingHour(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }), \" Add\"))), this.state.workingHours.length !== 0 ? this.state.workingHours.map((workingHour, index) => {\n      return React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, workingHour), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeWorkingHour(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, \"Remove\")));\n    }) : React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: 'col',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"No Working Hours added yet\"))), React.createElement(Media, {\n      media: this.state.media,\n      updateMedia: this.updateMediaFiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'p-2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), React.createElement(SocialMedia, {\n      socialMediaList: this.state.socialMedia,\n      updateSocialMediaList: this.updateSocialMediaList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }), React.createElement(SubScriptionControl, {\n      update: this.updateSubscriptionInfo,\n      subscriptionInfo: this.state.subscriptionInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'p-2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.addPlace(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, this.state.title, \" Place\"))));\n  }\n\n}\n\nexport default AddPlace;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/AddPlace.js"],"names":["React","Component","Form","Button","Row","Col","ListGroup","Alert","Modal","Container","FormControl","useState","useEffect","useRef","Media","SocialMedia","baseService","DragableList","SubScriptionControl","AddPlace","state","modal","categories","name","nameAr","desc","descAr","media","loading","title","edit","locations","selectedLocationIndex","selectedCategoryIndex","selectedSubCategoryIndex","phones","emails","workingHours","website","phone","email","workingHourFrom","workingHourTo","subscriptionInfo","place","socialMedia","updateSubscriptionInfo","setState","checkProps","nextProps","onChange","key","e","target","value","onLocationChange","selectedIndex","onCategoryChange","onSubCategoryChange","addCategory","locationCategories","includes","selectedCategory","alert","push","updateSocialMediaList","socialMediaList","updateMediaFiles","addPhone","removePhone","index","splice","addEmail","removeEmail","timeFormat","time","timeSplit","split","hours","minutes","meridian","addWorkingHour","workingFrom","workingTo","workingHour","removeWorkingHour","addPlace","category","_id","subCategory","subCategories","location","mapLocation","latitude","longitude","updatePlace","catch","err","console","log","props","then","response","componentWillMount","getCategories","getLocations","componentWillReceiveProps","nextContext","render","length","color","handleClose","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button, Row, Col, ListGroup, Alert, Modal, Container, FormControl} from 'react-bootstrap'\nimport {useState, useEffect, useRef} from 'react'\nimport Media from \"./Media\";\nimport SocialMedia from \"./SocialMedia\";\nimport baseService from \"../services/baseService\";\nimport DragableList from \"../customComponents/DragableList\";\nimport SubScriptionControl from \"./SubScriptionControl\";\n\n\nclass AddPlace extends Component {\n    state = {\n        modal: false,\n        categories: [],\n        name: '',\n        nameAr: '',\n        desc: '',\n        descAr: '',\n        media: [],\n        loading: true,\n        title: 'Add',\n        edit: false,\n        locations: [],\n        selectedLocationIndex: 0,\n        selectedCategoryIndex: 0,\n        selectedSubCategoryIndex: 0,\n        phones: [],\n        emails: [],\n        workingHours: [],\n        website: '',\n        phone: '',\n        email: '',\n        workingHourFrom: '',\n        workingHourTo: '',\n        subscriptionInfo: {},\n        place: {},\n        socialMedia: [],\n\n\n    };\n\n    componentWillMount() {\n        baseService.getCategories().then((categories) => this.setState({categories, loading: false}));\n        baseService.getLocations().then((locations) => this.setState({locations}));\n        this.checkProps(this.props);\n\n    }\n\n    updateSubscriptionInfo = (subscriptionInfo) => {\n        this.setState({subscriptionInfo});\n    }\n    checkProps = (nextProps) => {\n        if (nextProps.edit) {\n            let place = nextProps.place;\n            if (place) {\n                //edit category\n                this.setState({\n                    place: nextProps.place,\n                    edit: true,\n                    title: 'Edit',\n                    name: place.name,\n                    nameAr: place.nameAr,\n                    desc: place.desc,\n                    descAr: place.descAr,\n                    media: place.media,\n                    phones: place.phone,\n                    emails: place.email,\n                    workingHours: place.workingHours,\n                    website: place.website,\n                    subscriptionInfo: place.subscriptionInfo,\n                    socialMedia: place.socialMedia,\n\n                })\n            }\n\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.checkProps(nextProps);\n\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n\n    onLocationChange = (e) => {\n        this.setState({selectedLocationIndex: e.target.selectedIndex})\n    };\n    onCategoryChange = (e) => {\n        this.setState({selectedCategoryIndex: e.target.selectedIndex})\n    };\n    onSubCategoryChange = (e) => {\n        this.setState({selectedSubCategoryIndex: e.target.selectedIndex})\n    };\n    addCategory = () => {\n        let locationCategories = [...this.state.locationCategories];\n        if (locationCategories.includes(this.state.categories[this.state.selectedCategory])) {\n            alert('AddLocation already has this category');\n            return;\n        }\n        locationCategories.push(this.state.categories[this.state.selectedCategory]);\n        this.setState({locationCategories});\n    };\n\n    updateSocialMediaList = (socialMediaList) => {\n        //keep social media sync\n        this.setState({socialMedia: socialMediaList});\n\n    };\n    updateMediaFiles = (media) => {\n        this.setState({media});\n    }\n\n    addPhone = () => {\n        let phones = [...this.state.phones];\n        phones.push(this.state.phone);\n        this.setState({phones, phone: ''});\n    };\n    removePhone = (index) => {\n        let phones = [...this.state.phones];\n        phones.splice(index, 1)\n        this.setState({phones});\n    };\n    addEmail = () => {\n        let emails = [...this.state.emails];\n        emails.push(this.state.email);\n        this.setState({emails, email: ''});\n    };\n    removeEmail = (index) => {\n        let emails = [...this.state.emails];\n        emails.splice(index, 1);\n        this.setState({emails});\n    };\n    timeFormat = (time) => {\n        let timeSplit = time.split(':'),\n            hours,\n            minutes,\n            meridian;\n        hours = timeSplit[0];\n        minutes = timeSplit[1];\n        if (hours > 12) {\n            meridian = 'PM';\n            hours -= 12;\n        } else if (hours < 12) {\n            meridian = 'AM';\n            if (hours === 0) {\n                hours = 12;\n            }\n        } else {\n            meridian = 'PM';\n        }\n        return hours + ':' + minutes + ' ' + meridian;\n        //alert(hours + ':' + minutes + ' ' + meridian);\n    }\n    addWorkingHour = () => {\n        let workingFrom = this.state.workingHourFrom;\n        let workingTo = this.state.workingHourTo;\n        if (!workingFrom || !workingTo) {\n            alert('Please choose correct time');\n            return;\n        }\n\n        let workingHours = [...this.state.workingHours];\n        let workingHour = this.timeFormat(workingFrom) + \" To \" + this.timeFormat(workingTo);\n        workingHours.push(workingHour);\n        this.setState({workingHours, workingHourFrom: '', workingHourTo: ''});\n    };\n    removeWorkingHour = (index) => {\n        let workingHours = [...this.state.workingHours];\n        workingHours.splice(index, 1);\n        this.setState({workingHours});\n    };\n    addPlace = () => {\n        let category = this.state.categories[this.state.selectedCategoryIndex]._id;//get categoryId from the selected one\n        let subCategory = this.state.categories[this.state.selectedCategoryIndex].subCategories[this.state.selectedSubCategoryIndex]._id;\n        let location = this.state.locations[this.state.selectedLocationIndex]._id;\n        let mapLocation = {\n            latitude: '124',\n            longitude: '-12',\n        };\n        if (this.state.edit) {\n            let place = this.state.place;\n\n\n            place.name = this.state.name;\n            place.nameAr = this.state.nameAr;\n            place.desc = this.state.desc;\n            place.descAr = this.state.descAr;\n            place.media = this.state.media;\n            place.category = category;\n            place.subCategory = subCategory;\n            place.phone = this.state.phones;\n            place.email = this.state.emails;\n            place.workingHours = this.state.workingHours;\n            place.website = this.state.website;\n            place.location = location;\n            place.mapLocation = mapLocation;\n            place.socialMedia = this.state.socialMedia;\n            place.subscriptionInfo = this.state.subscriptionInfo;\n\n\n\n            baseService.updatePlace(place).catch((err) => console.log(err));\n            if (this.props && this.props.updatePlace)\n                this.props.updatePlace();\n\n        } else {\n            let place = {\n                name: this.state.name,\n                nameAr: this.state.nameAr,\n                desc: this.state.desc,\n                descAr: this.state.descAr,\n                media: this.state.media,\n                category: category,\n                subCategory: subCategory,\n                phone: this.state.phones,\n                email: this.state.emails,\n                workingHours: this.state.workingHours,\n                website: this.state.website,\n                location: location,\n                mapLocation: mapLocation,\n                socialMedia: this.state.socialMedia,\n                subscriptionInfo: this.state.subscriptionInfo,\n\n\n            }\n            baseService.addPlace(place).then((response) => console.log(response)).catch((err) => console.log(err))\n        }\n\n    }\n\n    render() {\n        if (this.state.categories.length === 0)\n            return (<div style={{color: 'red'}}>\n                Please Add Location first\n                <Button className=\"badge-info col-6\" href={'/Categories'}>\n                    <i className=\"fa fa-plus\"/> Add Category\n\n                </Button>\n            </div>);\n\n        return (\n            <div>\n                <Container class>\n                    {!this.props.handleClose && <h2> Add Place</h2>}\n                    <Form>\n                        <Form.Group as={Row}>\n                            <Form.Label column sm=\"2\">\n                                Name (English)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control type=\"text\" placeholder=\"Place name\"\n                                              onChange={(e) => this.onChange('name', e)} value={this.state.name}/>\n                            </Col>\n                            <Form.Label column sm=\"2\">\n                                Name (Arabic)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control type=\"text\" placeholder=\"Place name (Arabic)\"\n                                              onChange={(e) => this.onChange('nameAr', e)} value={this.state.nameAr}/>\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                            <Form.Label column sm=\"2\">\n                                Description (English)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control type=\"text\" placeholder=\"Place Description\"\n                                              onChange={(e) => this.onChange('desc', e)} value={this.state.desc}/>\n                            </Col>\n                            <Form.Label column sm=\"2\">\n                                Description (Arabic)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control type=\"text\" placeholder=\"Place Description (Arabic)\"\n                                              onChange={(e) => this.onChange('descAr', e)} value={this.state.descAr}/>\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                            <Form.Label column sm=\"2\">\n                                Website\n                            </Form.Label>\n                            <Col>\n                                <Form.Control type=\"text\" placeholder=\"Website\"\n                                              onChange={(e) => this.onChange('website', e)} value={this.state.website}/>\n                            </Col>\n\n                        </Form.Group>\n\n\n                        <Form>\n                            <Form.Group>\n\n                                <Form.Row>\n                                    <Form.Group as={Col}>\n\n                                        <Form.Label>\n                                            Please choose location\n                                        </Form.Label>\n                                        <FormControl as={'select'} onChange={this.onLocationChange}>\n                                            {this.state.locations.map((location, index) => {\n                                                return (\n                                                    <option key={index}>{location.name} / {location.nameAr}</option>\n                                                )\n                                            })}\n                                        </FormControl>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col}>\n\n                                        <Form.Label>\n                                            Please choose Category\n                                        </Form.Label>\n                                        <FormControl as={'select'} onChange={this.onCategoryChange}>\n                                            {this.state.locations[this.state.selectedLocationIndex] &&\n                                            this.state.locations[this.state.selectedLocationIndex].categories.map((category, index) => {\n                                                return (\n                                                    <option key={index}>{category.name} / {category.nameAr}</option>\n                                                )\n                                            })}\n                                        </FormControl>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col}>\n\n                                        <Form.Label>\n                                            Choose SubCategory\n                                        </Form.Label>\n                                        <FormControl as={'select'} onChange={this.onSubCategoryChange}>\n                                            {this.state.locations[this.state.selectedLocationIndex] &&\n                                            this.state.locations[this.state.selectedLocationIndex].categories[this.state.selectedCategoryIndex].subCategories.map((category, index) => {\n                                                return (\n                                                    <option key={index}>{category.name} / {category.nameAr}</option>\n                                                )\n                                            })}\n                                        </FormControl>\n                                    </Form.Group>\n\n\n                                </Form.Row>\n                            </Form.Group>\n                        </Form>\n\n\n                        <Form.Group>\n                            <Form.Label>\n                                Please Add phone\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"text\" placeholder=\"Phone Number\"\n                                                  onChange={(e) => this.onChange('phone', e)} value={this.state.phone}/>\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addPhone()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                            {this.state.phones.length !== 0 ? this.state.phones.map((phone, index) => {\n                                    return (\n                                        <ListGroup.Item>\n                                            <div className={'row'}>\n                                                <p className={'col'}>{phone}</p>\n                                                <Button variant=\"danger\"\n                                                        onClick={() => this.removePhone(index)}>Remove</Button>\n                                            </div>\n                                        </ListGroup.Item>)\n                                })\n                                :\n                                <ListGroup.Item>\n                                    <p className={'col'}>No Phones added yet</p>\n                                </ListGroup.Item>\n                            }\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>\n                                Please Add Email\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"text\" placeholder=\"Email\"\n                                                  onChange={(e) => this.onChange('email', e)} value={this.state.email}/>\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addEmail()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                            {this.state.emails.length !== 0 ? this.state.emails.map((email, index) => {\n                                    return (\n                                        <ListGroup.Item>\n                                            <div className={'row'}>\n                                                <p className={'col'}>{email}</p>\n                                                <Button variant=\"danger\"\n                                                        onClick={() => this.removeEmail(index)}>Remove</Button>\n                                            </div>\n                                        </ListGroup.Item>)\n                                })\n                                :\n                                <ListGroup.Item>\n                                    <p className={'col'}>No Emails added yet</p>\n                                </ListGroup.Item>\n                            }\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>\n                                Please Working Hours\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"time\" placeholder=\"Working Hours From\"\n                                                  onChange={(e) => this.onChange('workingHourFrom', e)}\n                                                  value={this.state.workingHourFrom}/>\n\n                                </Form.Group>\n                                <p>To</p>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"time\" placeholder=\"Working Hours To\"\n                                                  onChange={(e) => this.onChange('workingHourTo', e)}\n                                                  value={this.state.workingHourTo}/>\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addWorkingHour()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                            {this.state.workingHours.length !== 0 ? this.state.workingHours.map((workingHour, index) => {\n                                    return (\n                                        <ListGroup.Item>\n                                            <div className={'row'}>\n                                                <p className={'col'}>{workingHour}</p>\n                                                <Button variant=\"danger\"\n                                                        onClick={() => this.removeWorkingHour(index)}>Remove</Button>\n                                            </div>\n                                        </ListGroup.Item>)\n                                })\n                                :\n                                <ListGroup.Item>\n                                    <p className={'col'}>No Working Hours added yet</p>\n                                </ListGroup.Item>\n                            }\n                        </Form.Group>\n\n\n                        <Media media={this.state.media} updateMedia={this.updateMediaFiles}/>\n\n                        <div className={'p-2'}/>\n\n                        <SocialMedia socialMediaList={this.state.socialMedia}\n                                     updateSocialMediaList={this.updateSocialMediaList}/>\n\n\n                        <SubScriptionControl update={this.updateSubscriptionInfo} subscriptionInfo={this.state.subscriptionInfo}/>\n                        <div className={'p-2'}/>\n                        <Button variant=\"primary\"\n                                onClick={() => this.addPlace()}>{this.state.title} Place</Button>\n\n\n                    </Form>\n\n\n                </Container>\n\n\n            </div>\n        );\n    }\n}\n\nexport default AddPlace;\n"]},"metadata":{},"sourceType":"module"}