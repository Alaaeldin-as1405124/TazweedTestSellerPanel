{"ast":null,"code":"const WebApiBaseUrl = \"http://127.0.0.1:8000/api\";\nexport default class BaseService {\n  static getApiUrl() {\n    return WebApiBaseUrl;\n  }\n\n  static getToken() {\n    return 'Bearer ' + window.localStorage.getItem('token');\n  }\n\n  static async getTimeSlots() {\n    const response = await fetch(\"\".concat(WebApiBaseUrl, \"/timeSlots/\"), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.getToken()\n      }\n    });\n    if (response.ok) return await response.json();else return response.ok;\n  }\n\n  static async addTimeSlot(timeSlot) {\n    const response = await fetch(\"\".concat(WebApiBaseUrl, \"/timeSlots/\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.getToken()\n      },\n      body: JSON.stringify(timeSlot)\n    });\n    if (response.ok) return await response.json();else return response.ok;\n  }\n\n  static async deleteTimeSlot(timeSlot) {\n    const response = await fetch(\"\".concat(WebApiBaseUrl, \"/timeSlots/\"), {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.getToken()\n      },\n      body: JSON.stringify(timeSlot)\n    });\n    if (response.ok) return await response.json();else return response.ok;\n  }\n\n  static async getAppointments() {\n    const response = await fetch(\"\".concat(WebApiBaseUrl, \"/appointments/\"), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.getToken()\n      }\n    });\n    if (response.ok) return await response.json();else return response.ok;\n  }\n\n  static async updateAppointment(appointment) {\n    const response = await fetch(\"\".concat(WebApiBaseUrl, \"/appointments/\"), {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': this.getToken()\n      },\n      body: JSON.stringify(appointment)\n    });\n    if (response.ok) return await response.json();else return response.ok;\n  }\n\n  static checkLogin() {\n    let token = window.localStorage.getItem('token');\n\n    if (token && token !== '' && token.length > 10) {\n      console.log('am check login and returning true');\n      return true;\n    }\n\n    return false;\n  }\n\n  static logout() {\n    return window.localStorage.removeItem('token');\n  }\n\n  static async login(user) {\n    const authUser = await fetch(\"\".concat(WebApiBaseUrl, \"/login/\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json' //,'Authorization': token\n\n      },\n      body: JSON.stringify(user)\n    });\n    if (authUser.ok) return await authUser.json();else return authUser.ok;\n  }\n\n}","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/TazweedAdminPanel/src/services/baseService.js"],"names":["WebApiBaseUrl","BaseService","getApiUrl","getToken","window","localStorage","getItem","getTimeSlots","response","fetch","method","headers","ok","json","addTimeSlot","timeSlot","body","JSON","stringify","deleteTimeSlot","getAppointments","updateAppointment","appointment","checkLogin","token","length","console","log","logout","removeItem","login","user","authUser"],"mappings":"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","sourcesContent":["const WebApiBaseUrl = `http://127.0.0.1:8000/api`;\n\nexport default class BaseService {\n\n    static getApiUrl() {\n        return WebApiBaseUrl;\n    }\n\n    static getToken() {\n        return 'Bearer ' + window.localStorage.getItem('token');\n    }\n\n    static async getTimeSlots() {\n        const response = await fetch(`${WebApiBaseUrl}/timeSlots/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.getToken()\n\n            }\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok;\n\n    }\n\n    static async addTimeSlot(timeSlot) {\n\n        const response = await fetch(`${WebApiBaseUrl}/timeSlots/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.getToken()\n\n            },\n            body: JSON.stringify(timeSlot)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n\n    static async deleteTimeSlot(timeSlot) {\n\n        const response = await fetch(`${WebApiBaseUrl}/timeSlots/`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.getToken()\n\n            },\n            body: JSON.stringify(timeSlot)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n\n    static async getAppointments() {\n\n        const response = await fetch(`${WebApiBaseUrl}/appointments/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.getToken()\n\n            }\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n    static async updateAppointment(appointment) {\n\n        const response = await fetch(`${WebApiBaseUrl}/appointments/`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.getToken()\n\n            },\n            body: JSON.stringify(appointment)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n\n\n    static checkLogin() {\n        let token = window.localStorage.getItem('token');\n\n        if (token && token !== '' && token.length > 10) {\n            console.log('am check login and returning true');\n\n            return true\n        }\n        return false;\n\n    }\n\n    static logout() {\n        return window.localStorage.removeItem('token');\n    }\n\n    static async login(user) {\n\n        const authUser = await fetch(`${WebApiBaseUrl}/login/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n                //,'Authorization': token\n            },\n            body: JSON.stringify(user)\n        });\n\n        if (authUser.ok)\n            return await authUser.json();\n        else\n            return authUser.ok\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}