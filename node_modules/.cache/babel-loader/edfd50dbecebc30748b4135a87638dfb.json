{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/src/components/AddTimeSlot.js\";\nimport React, { Component } from 'react';\nimport baseService from \"../services/baseService\";\nimport { Button, Form, ListGroup } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass AddTimeSlot extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timeSlots: [],\n      startTime: '',\n      endTime: ''\n    };\n\n    this.getTimeSlots = () => {\n      baseService.getTimeSlots().then(timeSlots => {\n        console.log('timeslots from the server ', timeSlots);\n        this.setState({\n          timeSlots\n        });\n      });\n    };\n\n    this.onChange = (key, e) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    };\n\n    this.addTime = () => {\n      let timeSlots = [...this.state.timeSlots];\n\n      if (this.state.startTime === '' || this.state.endTime === '') {\n        alert('Please enter valid time');\n        return;\n      }\n\n      if (this.checkTimeValidity()) {\n        timeSlots.push({\n          startTime: this.state.startTime,\n          endTime: this.state.endTime\n        });\n        baseService.addTimeSlot(timeSlots).then(responnse => {\n          this.getTimeSlots();\n        }).catch(err => console.log(err));\n      } else {\n        alert(\"Time conflict\");\n      }\n    };\n\n    this.removeTimeSlot = index => {\n      let timeSlots = [...this.state.timeSlots];\n      timeSlots.splice(index, 1);\n      baseService.deleteTimeSlot(timeSlots).then(response => {\n        this.getTimeSlots(); //update the current state after changing to the database\n      }).catch(err => console.log(err)); //this.setState({timeSlots});\n    };\n  }\n\n  componentWillMount() {\n    this.getTimeSlots();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'col-9',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Add time slot\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"From\"), React.createElement(Form.Control, {\n      type: \"time\",\n      placeholder: \"enter start time\",\n      onChange: e => this.onChange('startTime', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"To\"), React.createElement(Form.Control, {\n      type: \"time\",\n      placeholder: \"enter ending time\",\n      onChange: e => this.onChange('endTime', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.addTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Add\")))), this.state.timeSlots.map((singleTimeSlot, index) => {\n      return React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, singleTimeSlot.startTime, \":\", singleTimeSlot.endTime), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeTimeSlot(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Remove\")));\n    }));\n  }\n\n}\n\nexport default AddTimeSlot;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/src/components/AddTimeSlot.js"],"names":["React","Component","baseService","Button","Form","ListGroup","FontAwesomeIcon","AddTimeSlot","state","timeSlots","startTime","endTime","getTimeSlots","then","console","log","setState","onChange","key","e","target","value","addTime","alert","checkTimeValidity","push","addTimeSlot","responnse","catch","err","removeTimeSlot","index","splice","deleteTimeSlot","response","componentWillMount","render","map","singleTimeSlot"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport baseService from \"../services/baseService\";\nimport {Button, Form, ListGroup} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nclass AddTimeSlot extends Component {\n    state = {\n        timeSlots: [],\n        startTime: '',\n        endTime: ''\n    };\n\n    componentWillMount() {\n        this.getTimeSlots();\n    }\n\n    getTimeSlots = () => {\n        baseService.getTimeSlots().then((timeSlots) => {\n            console.log('timeslots from the server ', timeSlots)\n            this.setState({timeSlots})\n        })\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n\n    addTime = () => {\n        let timeSlots = [...this.state.timeSlots];\n        if(this.state.startTime === '' || this.state.endTime=== ''){\n            alert('Please enter valid time');\n            return;\n        }\n        if(this.checkTimeValidity()){\n\n            timeSlots.push({\n                startTime: this.state.startTime,\n                endTime: this.state.endTime\n            })\n            baseService.addTimeSlot(timeSlots).then((responnse) => {\n                this.getTimeSlots();\n            }).catch((err) => console.log(err));\n        }\n        else{\n            alert(\"Time conflict\")\n        }\n\n    }\n    removeTimeSlot = (index) => {\n        let timeSlots = [...this.state.timeSlots];\n        timeSlots.splice(index, 1);\n        baseService.deleteTimeSlot(timeSlots).then((response) => {\n            this.getTimeSlots();//update the current state after changing to the database\n        }).catch((err) => console.log(err));\n\n        //this.setState({timeSlots});\n    }\n\n    render() {\n        return (\n            <div className={'col-9'}>\n                <h2>Add time slot</h2>\n                <Form>\n                    <Form.Row>\n                        <Form.Group >\n                            <Form.Label>From</Form.Label>\n                            <Form.Control type=\"time\" placeholder=\"enter start time\"\n                                          onChange={(e) => this.onChange('startTime', e)}/>\n                        </Form.Group>\n                        <Form.Group >\n                            <Form.Label>To</Form.Label>\n                            <Form.Control type=\"time\" placeholder=\"enter ending time\"\n                                          onChange={(e) => this.onChange('endTime', e)}/>\n                        </Form.Group>\n\n                        <Form.Group >\n                            <Button variant=\"success\" onClick={this.addTime}>Add</Button>\n                        </Form.Group>\n\n\n                    </Form.Row>\n\n                </Form>\n\n                {this.state.timeSlots.map((singleTimeSlot, index) => {\n                    return (\n\n                        <ListGroup.Item>\n                            <div className={'row'}>\n\n                                <p className={'col'}>{singleTimeSlot.startTime}:{singleTimeSlot.endTime}</p>\n                                <Button variant=\"danger\"\n                                        onClick={() => this.removeTimeSlot(index)}>Remove</Button>\n                            </div>\n                        </ListGroup.Item>\n\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default AddTimeSlot;\n\n"]},"metadata":{},"sourceType":"module"}