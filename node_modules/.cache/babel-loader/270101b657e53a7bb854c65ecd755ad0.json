{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/AddPlace.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Row, Col, ListGroup, Alert, Modal, Container, FormControl } from 'react-bootstrap';\nimport { useState, useEffect, useRef } from 'react';\nimport Media from \"./Media\";\nimport SocialMedia from \"./SocialMedia\";\nimport baseService from \"../services/baseService\";\nimport DragableList from \"../customComponents/DragableList\";\nimport SubScriptionControl from \"./SubScriptionControl\";\nimport MapView from \"../customComponents/MapView\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport PlaceLocationSelections from \"./PlaceLocationSelections\"; // Import css\n\nclass AddPlace extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      categories: [],\n      name: '',\n      nameAr: '',\n      desc: '',\n      descAr: '',\n      media: [],\n      loading: true,\n      title: 'Add',\n      edit: false,\n      locations: [],\n      selectedLocationIndex: 0,\n      selectedCategoryIndex: 0,\n      selectedSubCategoryIndex: 0,\n      phones: [],\n      emails: [],\n      workingHours: [],\n      website: '',\n      phone: '',\n      email: '',\n      workingHourFrom: '',\n      workingHourTo: '',\n      subscriptionInfo: {},\n      place: {},\n      socialMedia: [],\n      mapLocation: {}\n    };\n\n    this.fetchData = async () => {\n      let categories = await baseService.getCategories();\n      let locations = await baseService.getLocations();\n      this.setState({\n        categories,\n        locations,\n        loading: false\n      });\n      this.checkProps(this.props);\n    };\n\n    this.updateSubscriptionInfo = subscriptionInfo => {\n      this.setState({\n        subscriptionInfo\n      });\n    };\n\n    this.checkProps = nextProps => {\n      if (nextProps.edit) {\n        let place = nextProps.place;\n\n        if (place) {\n          //the gotten place has the full location/category/subcategoryId\n          let selectedLocationIndex = this.state.locations.findIndex(singleLocation => singleLocation._id === place.location._id);\n          let selectedCategoryIndex = this.state.locations[selectedLocationIndex].categories.findIndex(singleCategory => singleCategory._id === place.category._id);\n          let selectedSubCategoryIndex = this.state.locations[selectedLocationIndex].categories[selectedCategoryIndex].subCategories.findIndex(singleSubCategory => singleSubCategory._id === place.subCategory);\n          console.log('subCategories are ', this.state.locations[selectedLocationIndex].categories[selectedCategoryIndex].subCategories, '\\n findinng ', place.subCategory);\n          console.log('selected location index', selectedLocationIndex, '\\n categ ind', selectedCategoryIndex, '\\n sub cat index', selectedSubCategoryIndex); //edit category\n\n          this.setState({\n            place: nextProps.place,\n            edit: true,\n            title: 'Edit',\n            name: place.name,\n            nameAr: place.nameAr,\n            desc: place.desc,\n            descAr: place.descAr,\n            media: place.media,\n            phones: place.phone,\n            emails: place.email,\n            workingHours: place.workingHours,\n            website: place.website,\n            subscriptionInfo: place.subscriptionInfo,\n            socialMedia: place.socialMedia,\n            mapLocation: place.mapLocation,\n            selectedLocationIndex: selectedLocationIndex !== -1 ? selectedLocationIndex : 0,\n            selectedCategoryIndex: selectedCategoryIndex !== -1 ? selectedCategoryIndex : 0,\n            selectedSubCategoryIndex: selectedSubCategoryIndex !== -1 ? selectedSubCategoryIndex : 0\n          });\n        }\n      }\n    };\n\n    this.alert = title => {\n      confirmAlert({\n        title: '' + title,\n        message: '',\n        buttons: [{\n          label: 'Dismiss'\n        }]\n      });\n    };\n\n    this.onChange = (key, e) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    };\n\n    this.onLocationChange = e => {\n      console.log('onLodationChange');\n      this.setState({\n        selectedLocationIndex: e.target.selectedIndex,\n        selectedCategoryIndex: 0,\n        selectedSubCategoryIndex: 0\n      });\n    };\n\n    this.onCategoryChange = e => {\n      console.log('Category change');\n      this.setState({\n        selectedCategoryIndex: e.target.selectedIndex\n      });\n    };\n\n    this.onSubCategoryChange = e => {\n      console.log('SubCategory change');\n      this.setState({\n        selectedSubCategoryIndex: e.target.selectedIndex\n      });\n    };\n\n    this.addCategory = () => {\n      let locationCategories = [...this.state.locationCategories];\n\n      if (locationCategories.includes(this.state.categories[this.state.selectedCategory])) {\n        this.alert('AddLocation already has this category');\n        return;\n      }\n\n      locationCategories.push(this.state.categories[this.state.selectedCategory]);\n      this.setState({\n        locationCategories\n      });\n    };\n\n    this.updateSocialMediaList = socialMediaList => {\n      //keep social media sync\n      this.setState({\n        socialMedia: socialMediaList\n      });\n    };\n\n    this.updateMediaFiles = media => {\n      console.log(\"updating media to \", media);\n      this.setState({\n        media\n      });\n    };\n\n    this.addPhone = () => {\n      let phones = [...this.state.phones];\n      phones.push(this.state.phone);\n      this.setState({\n        phones,\n        phone: ''\n      });\n    };\n\n    this.removePhone = index => {\n      let phones = [...this.state.phones];\n      phones.splice(index, 1);\n      this.setState({\n        phones\n      });\n    };\n\n    this.addEmail = () => {\n      let emails = [...this.state.emails];\n      emails.push(this.state.email);\n      this.setState({\n        emails,\n        email: ''\n      });\n    };\n\n    this.removeEmail = index => {\n      let emails = [...this.state.emails];\n      emails.splice(index, 1);\n      this.setState({\n        emails\n      });\n    };\n\n    this.timeFormat = time => {\n      let timeSplit = time.split(':'),\n          hours,\n          minutes,\n          meridian;\n      hours = timeSplit[0];\n      minutes = timeSplit[1];\n\n      if (hours > 12) {\n        meridian = 'PM';\n        hours -= 12;\n      } else if (hours < 12) {\n        meridian = 'AM';\n\n        if (hours === 0) {\n          hours = 12;\n        }\n      } else {\n        meridian = 'PM';\n      }\n\n      return hours + ':' + minutes + ' ' + meridian; //alert(hours + ':' + minutes + ' ' + meridian);\n    };\n\n    this.addWorkingHour = () => {\n      let workingFrom = this.state.workingHourFrom;\n      let workingTo = this.state.workingHourTo;\n\n      if (!workingFrom || !workingTo) {\n        this.alert('Please choose correct time');\n        return;\n      }\n\n      let workingHours = [...this.state.workingHours];\n      let workingHour = this.timeFormat(workingFrom) + \" To \" + this.timeFormat(workingTo);\n      workingHours.push(workingHour);\n      this.setState({\n        workingHours,\n        workingHourFrom: '',\n        workingHourTo: ''\n      });\n    };\n\n    this.removeWorkingHour = index => {\n      let workingHours = [...this.state.workingHours];\n      workingHours.splice(index, 1);\n      this.setState({\n        workingHours\n      });\n    };\n\n    this.updateMap = (position, address) => {\n      let mapLocation = {\n        longitude: position.lng,\n        latitude: position.lat,\n        address: address\n      };\n      this.setState({\n        mapLocation\n      });\n    };\n\n    this.validation = place => {\n      console.log('validating ', place);\n      let valid = true;\n\n      if (place) {\n        if (place.name === '' || place.nameAr === '' || place.desc === '' || place.descAr === '' || place.category === '' || place.subCategory === '' || place.phone.length === 0 || place.email.length === 0 || place.media.length === 0 || place.location === '' || place.website === '' || place.mapLocation === {} || place.subscriptionInfo === {}) valid = false;\n      }\n\n      return valid;\n    };\n\n    this.addPlace = () => {\n      console.log(this.state.selectedCategoryIndex);\n      let category = this.state.categories[this.state.selectedCategoryIndex]._id; //get categoryId from the selected one\n\n      console.log(this.state.selectedSubCategoryIndex);\n      let subCategory = this.state.categories[this.state.selectedCategoryIndex].subCategories[this.state.selectedSubCategoryIndex]._id;\n      let location = this.state.locations[this.state.selectedLocationIndex]._id; //do validation\n\n      let place;\n\n      if (this.state.edit) {\n        place = this.state.place;\n        place.name = this.state.name;\n        place.nameAr = this.state.nameAr;\n        place.desc = this.state.desc;\n        place.descAr = this.state.descAr;\n        place.media = this.state.media;\n        place.category = category;\n        place.subCategory = subCategory;\n        place.phone = this.state.phones;\n        place.email = this.state.emails;\n        place.workingHours = this.state.workingHours;\n        place.website = this.state.website;\n        place.location = location;\n        place.mapLocation = this.state.mapLocation;\n        place.socialMedia = this.state.socialMedia;\n        place.subscriptionInfo = this.state.subscriptionInfo;\n\n        if (this.validation(place)) {\n          baseService.updatePlace(place).catch(err => console.log(err));\n          if (this.props && this.props.updatePlace) this.props.updatePlace();\n        } else this.alert('Please fill all fields');\n      } else {\n        place = {\n          name: this.state.name,\n          nameAr: this.state.nameAr,\n          desc: this.state.desc,\n          descAr: this.state.descAr,\n          media: this.state.media,\n          category: category,\n          subCategory: subCategory,\n          phone: this.state.phones,\n          email: this.state.emails,\n          workingHours: this.state.workingHours,\n          website: this.state.website,\n          location: location,\n          mapLocation: this.state.mapLocation,\n          socialMedia: this.state.socialMedia,\n          subscriptionInfo: this.state.subscriptionInfo\n        };\n\n        if (this.validation(place)) {\n          baseService.addPlace(place).then(response => console.log(response)).catch(err => console.log(err));\n        } else this.alert('Please fill all fields');\n      }\n\n      if (this.props && this.props.handleClose && this.validation(place)) this.props.handleClose();\n    };\n  }\n\n  componentWillMount() {\n    this.fetchData();\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    this.checkProps(nextProps);\n  }\n\n  render() {\n    console.log('selected inndex state ', this.state.selectedLocationIndex);\n    if (this.state.categories.length === 0) return React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Please Add Location first\", React.createElement(Button, {\n      className: \"badge-info col-6\",\n      href: '/Categories',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), \" Add Category\"));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Container, {\n      class: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, !this.props.handleClose && React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \" Add Place\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Name (English)\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Place name\",\n      onChange: e => this.onChange('name', e),\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    })), React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Name (Arabic)\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Place name (Arabic)\",\n      onChange: e => this.onChange('nameAr', e),\n      value: this.state.nameAr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formPlaintextPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Description (English)\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: 'textarea',\n      placeholder: \"Place Description\",\n      onChange: e => this.onChange('desc', e),\n      value: this.state.desc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    })), React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Description (Arabic)\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: 'textarea',\n      placeholder: \"Place Description (Arabic)\",\n      onChange: e => this.onChange('descAr', e),\n      value: this.state.descAr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formPlaintextPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"Website\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Website\",\n      onChange: e => this.onChange('website', e),\n      value: this.state.website,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }))), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(PlaceLocationSelections, {\n      locations: this.state.locations,\n      categories: this.state.categories,\n      edit: this.state.edit,\n      place: this.state.place,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Please Add phone\"), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Phone Number\",\n      onChange: e => this.onChange('phone', e),\n      value: this.state.phone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      className: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"badge-info col-6\",\n      onClick: () => this.addPhone(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }), \" Add\"))), this.state.phones.length !== 0 ? this.state.phones.map((phone, index) => {\n      return React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, phone), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removePhone(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, \"Remove\")));\n    }) : React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: 'col',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"No Phones added yet\"))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \"Please Add Email\"), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Email\",\n      onChange: e => this.onChange('email', e),\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      className: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"badge-info col-6\",\n      onClick: () => this.addEmail(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }), \" Add\"))), this.state.emails.length !== 0 ? this.state.emails.map((email, index) => {\n      return React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, email), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeEmail(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"Remove\")));\n    }) : React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: 'col',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, \"No Emails added yet\"))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"Please Working Hours\"), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"time\",\n      placeholder: \"Working Hours From\",\n      onChange: e => this.onChange('workingHourFrom', e),\n      value: this.state.workingHourFrom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"To\"), React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"time\",\n      placeholder: \"Working Hours To\",\n      onChange: e => this.onChange('workingHourTo', e),\n      value: this.state.workingHourTo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      className: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"badge-info col-6\",\n      onClick: () => this.addWorkingHour(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), \" Add\"))), this.state.workingHours.length !== 0 ? this.state.workingHours.map((workingHour, index) => {\n      return React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, workingHour), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeWorkingHour(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"Remove\")));\n    }) : React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: 'col',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, \"No Working Hours added yet\"))), React.createElement(Media, {\n      media: this.state.media,\n      updateMedia: this.updateMediaFiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'p-2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }), React.createElement(SocialMedia, {\n      socialMediaList: this.state.socialMedia,\n      updateSocialMediaList: this.updateSocialMediaList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }), React.createElement(SubScriptionControl, {\n      update: this.updateSubscriptionInfo,\n      subscriptionInfo: this.state.subscriptionInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'p-2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }), React.createElement(MapView, {\n      update: this.updateMap,\n      location: this.state.mapLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'p-2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.addPlace(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, this.state.title, \" Place\"))));\n  }\n\n}\n\nexport default AddPlace;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/AddPlace.js"],"names":["React","Component","Form","Button","Row","Col","ListGroup","Alert","Modal","Container","FormControl","useState","useEffect","useRef","Media","SocialMedia","baseService","DragableList","SubScriptionControl","MapView","confirmAlert","PlaceLocationSelections","AddPlace","state","modal","categories","name","nameAr","desc","descAr","media","loading","title","edit","locations","selectedLocationIndex","selectedCategoryIndex","selectedSubCategoryIndex","phones","emails","workingHours","website","phone","email","workingHourFrom","workingHourTo","subscriptionInfo","place","socialMedia","mapLocation","fetchData","getCategories","getLocations","setState","checkProps","props","updateSubscriptionInfo","nextProps","findIndex","singleLocation","_id","location","singleCategory","category","subCategories","singleSubCategory","subCategory","console","log","alert","message","buttons","label","onChange","key","e","target","value","onLocationChange","selectedIndex","onCategoryChange","onSubCategoryChange","addCategory","locationCategories","includes","selectedCategory","push","updateSocialMediaList","socialMediaList","updateMediaFiles","addPhone","removePhone","index","splice","addEmail","removeEmail","timeFormat","time","timeSplit","split","hours","minutes","meridian","addWorkingHour","workingFrom","workingTo","workingHour","removeWorkingHour","updateMap","position","address","longitude","lng","latitude","lat","validation","valid","length","addPlace","updatePlace","catch","err","then","response","handleClose","componentWillMount","componentWillReceiveProps","nextContext","render","color","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button, Row, Col, ListGroup, Alert, Modal, Container, FormControl} from 'react-bootstrap'\nimport {useState, useEffect, useRef} from 'react'\nimport Media from \"./Media\";\nimport SocialMedia from \"./SocialMedia\";\nimport baseService from \"../services/baseService\";\nimport DragableList from \"../customComponents/DragableList\";\nimport SubScriptionControl from \"./SubScriptionControl\";\nimport MapView from \"../customComponents/MapView\";\nimport {confirmAlert} from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport PlaceLocationSelections from \"./PlaceLocationSelections\"; // Import css\n\nclass AddPlace extends Component {\n    state = {\n        modal: false,\n        categories: [],\n        name: '',\n        nameAr: '',\n        desc: '',\n        descAr: '',\n        media: [],\n        loading: true,\n        title: 'Add',\n        edit: false,\n        locations: [],\n        selectedLocationIndex: 0,\n        selectedCategoryIndex: 0,\n        selectedSubCategoryIndex: 0,\n        phones: [],\n        emails: [],\n        workingHours: [],\n        website: '',\n        phone: '',\n        email: '',\n        workingHourFrom: '',\n        workingHourTo: '',\n        subscriptionInfo: {},\n        place: {},\n        socialMedia: [],\n        mapLocation: {}\n\n\n    };\n\n    componentWillMount() {\n        this.fetchData();\n\n    }\n\n    fetchData = async () => {\n        let categories = await baseService.getCategories();\n        let locations = await baseService.getLocations();\n        this.setState({categories, locations, loading: false});\n        this.checkProps(this.props);\n    }\n    updateSubscriptionInfo = (subscriptionInfo) => {\n        this.setState({subscriptionInfo});\n    }\n    checkProps = (nextProps) => {\n        if (nextProps.edit) {\n            let place = nextProps.place;\n            if (place) {\n                //the gotten place has the full location/category/subcategoryId\n\n                let selectedLocationIndex = this.state.locations.findIndex((singleLocation) => singleLocation._id === place.location._id);\n                let selectedCategoryIndex = this.state.locations[selectedLocationIndex].categories.findIndex((singleCategory) => singleCategory._id === place.category._id)\n                let selectedSubCategoryIndex = this.state.locations[selectedLocationIndex].categories[selectedCategoryIndex].subCategories.findIndex((singleSubCategory) => singleSubCategory._id === place.subCategory);\n                console.log('subCategories are ',this.state.locations[selectedLocationIndex].categories[selectedCategoryIndex].subCategories, '\\n findinng ',place.subCategory);\n                console.log('selected location index',selectedLocationIndex,'\\n categ ind',selectedCategoryIndex,'\\n sub cat index',selectedSubCategoryIndex)\n                //edit category\n                this.setState({\n                    place: nextProps.place,\n                    edit: true,\n                    title: 'Edit',\n                    name: place.name,\n                    nameAr: place.nameAr,\n                    desc: place.desc,\n                    descAr: place.descAr,\n                    media: place.media,\n                    phones: place.phone,\n                    emails: place.email,\n                    workingHours: place.workingHours,\n                    website: place.website,\n                    subscriptionInfo: place.subscriptionInfo,\n                    socialMedia: place.socialMedia,\n                    mapLocation: place.mapLocation,\n                    selectedLocationIndex: selectedLocationIndex !== -1 ? selectedLocationIndex : 0,\n                    selectedCategoryIndex: selectedCategoryIndex !== -1 ? selectedCategoryIndex : 0,\n                    selectedSubCategoryIndex: selectedSubCategoryIndex !== -1 ? selectedSubCategoryIndex : 0,\n\n                })\n            }\n\n        }\n    }\n\n    alert = (title) => {\n        confirmAlert({\n            title: '' + title,\n            message: '',\n            buttons: [{label: 'Dismiss'}]\n        });\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.checkProps(nextProps);\n\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n\n    onLocationChange = (e) => {\n        console.log('onLodationChange')\n        this.setState({selectedLocationIndex: e.target.selectedIndex,\n            selectedCategoryIndex: 0,\n            selectedSubCategoryIndex: 0})\n    };\n    onCategoryChange = (e) => {\n        console.log('Category change')\n        this.setState({selectedCategoryIndex: e.target.selectedIndex})\n    };\n    onSubCategoryChange = (e) => {\n\n        console.log('SubCategory change')\n        this.setState({selectedSubCategoryIndex: e.target.selectedIndex})\n    };\n    addCategory = () => {\n        let locationCategories = [...this.state.locationCategories];\n        if (locationCategories.includes(this.state.categories[this.state.selectedCategory])) {\n            this.alert('AddLocation already has this category');\n            return;\n        }\n        locationCategories.push(this.state.categories[this.state.selectedCategory]);\n        this.setState({locationCategories});\n    };\n\n    updateSocialMediaList = (socialMediaList) => {\n        //keep social media sync\n        this.setState({socialMedia: socialMediaList});\n\n    };\n    updateMediaFiles = (media) => {\n        console.log(\"updating media to \", media);\n        this.setState({media});\n    }\n\n    addPhone = () => {\n        let phones = [...this.state.phones];\n        phones.push(this.state.phone);\n        this.setState({phones, phone: ''});\n    };\n    removePhone = (index) => {\n        let phones = [...this.state.phones];\n        phones.splice(index, 1)\n        this.setState({phones});\n    };\n    addEmail = () => {\n        let emails = [...this.state.emails];\n        emails.push(this.state.email);\n        this.setState({emails, email: ''});\n    };\n    removeEmail = (index) => {\n        let emails = [...this.state.emails];\n        emails.splice(index, 1);\n        this.setState({emails});\n    };\n    timeFormat = (time) => {\n        let timeSplit = time.split(':'),\n            hours,\n            minutes,\n            meridian;\n        hours = timeSplit[0];\n        minutes = timeSplit[1];\n        if (hours > 12) {\n            meridian = 'PM';\n            hours -= 12;\n        } else if (hours < 12) {\n            meridian = 'AM';\n            if (hours === 0) {\n                hours = 12;\n            }\n        } else {\n            meridian = 'PM';\n        }\n        return hours + ':' + minutes + ' ' + meridian;\n        //alert(hours + ':' + minutes + ' ' + meridian);\n    }\n    addWorkingHour = () => {\n        let workingFrom = this.state.workingHourFrom;\n        let workingTo = this.state.workingHourTo;\n        if (!workingFrom || !workingTo) {\n            this.alert('Please choose correct time');\n            return;\n        }\n\n        let workingHours = [...this.state.workingHours];\n        let workingHour = this.timeFormat(workingFrom) + \" To \" + this.timeFormat(workingTo);\n        workingHours.push(workingHour);\n        this.setState({workingHours, workingHourFrom: '', workingHourTo: ''});\n    };\n    removeWorkingHour = (index) => {\n        let workingHours = [...this.state.workingHours];\n        workingHours.splice(index, 1);\n        this.setState({workingHours});\n    };\n    updateMap = (position, address) => {\n        let mapLocation = {\n            longitude: position.lng,\n            latitude: position.lat,\n            address: address\n        };\n        this.setState({mapLocation})\n    };\n    validation = (place) => {\n        console.log('validating ', place);\n        let valid = true;\n        if (place) {\n            if (\n                place.name === '' ||\n                place.nameAr === '' ||\n                place.desc === '' ||\n                place.descAr === '' ||\n                place.category === '' ||\n                place.subCategory === '' ||\n                place.phone.length === 0 ||\n                place.email.length === 0 ||\n                place.media.length === 0 ||\n                place.location === '' ||\n                place.website === '' ||\n                place.mapLocation === {} ||\n                place.subscriptionInfo === {}\n            )\n                valid = false;\n        }\n        return valid;\n    }\n    addPlace = () => {\n        console.log(this.state.selectedCategoryIndex);\n        let category = this.state.categories[this.state.selectedCategoryIndex]._id;//get categoryId from the selected one\nconsole.log(this.state.selectedSubCategoryIndex);\n        let subCategory = this.state.categories[this.state.selectedCategoryIndex].subCategories[this.state.selectedSubCategoryIndex]._id;\n        let location = this.state.locations[this.state.selectedLocationIndex]._id;\n        //do validation\n        let place;\n        if (this.state.edit) {\n            place = this.state.place;\n\n\n            place.name = this.state.name;\n            place.nameAr = this.state.nameAr;\n            place.desc = this.state.desc;\n            place.descAr = this.state.descAr;\n            place.media = this.state.media;\n            place.category = category;\n            place.subCategory = subCategory;\n            place.phone = this.state.phones;\n            place.email = this.state.emails;\n            place.workingHours = this.state.workingHours;\n            place.website = this.state.website;\n            place.location = location;\n            place.mapLocation = this.state.mapLocation;\n            place.socialMedia = this.state.socialMedia;\n            place.subscriptionInfo = this.state.subscriptionInfo;\n            if (this.validation(place)) {\n                baseService.updatePlace(place).catch((err) => console.log(err));\n                if (this.props && this.props.updatePlace)\n                    this.props.updatePlace();\n            } else\n                this.alert('Please fill all fields')\n\n\n        } else {\n            place = {\n                name: this.state.name,\n                nameAr: this.state.nameAr,\n                desc: this.state.desc,\n                descAr: this.state.descAr,\n                media: this.state.media,\n                category: category,\n                subCategory: subCategory,\n                phone: this.state.phones,\n                email: this.state.emails,\n                workingHours: this.state.workingHours,\n                website: this.state.website,\n                location: location,\n                mapLocation: this.state.mapLocation,\n                socialMedia: this.state.socialMedia,\n                subscriptionInfo: this.state.subscriptionInfo,\n\n\n            };\n            if (this.validation(place)) {\n                baseService.addPlace(place).then((response) => console.log(response)).catch((err) => console.log(err))\n\n            } else\n                this.alert('Please fill all fields')\n        }\n        if (this.props && this.props.handleClose && this.validation(place))\n            this.props.handleClose()\n\n    }\n\n    render() {\n        console.log('selected inndex state ',this.state.selectedLocationIndex)\n        if (this.state.categories.length === 0)\n            return (<div style={{color: 'red'}}>\n                Please Add Location first\n                <Button className=\"badge-info col-6\" href={'/Categories'}>\n                    <i className=\"fa fa-plus\"/> Add Category\n\n                </Button>\n            </div>);\n\n        return (\n            <div>\n                <Container class>\n                    {!this.props.handleClose && <h2> Add Place</h2>}\n                    <Form>\n                        <Form.Group as={Row}>\n                            <Form.Label column sm=\"2\">\n                                Name (English)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control type=\"text\" placeholder=\"Place name\"\n                                              onChange={(e) => this.onChange('name', e)} value={this.state.name}/>\n                            </Col>\n                            <Form.Label column sm=\"2\">\n                                Name (Arabic)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control type=\"text\" placeholder=\"Place name (Arabic)\"\n                                              onChange={(e) => this.onChange('nameAr', e)} value={this.state.nameAr}/>\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                            <Form.Label column sm=\"2\">\n                                Description (English)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control as={'textarea'} placeholder=\"Place Description\"\n                                              onChange={(e) => this.onChange('desc', e)} value={this.state.desc}/>\n                            </Col>\n                            <Form.Label column sm=\"2\">\n                                Description (Arabic)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control as={'textarea'} placeholder=\"Place Description (Arabic)\"\n                                              onChange={(e) => this.onChange('descAr', e)} value={this.state.descAr}/>\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                            <Form.Label column sm=\"2\">\n                                Website\n                            </Form.Label>\n                            <Col>\n                                <Form.Control type=\"text\" placeholder=\"Website\"\n                                              onChange={(e) => this.onChange('website', e)} value={this.state.website}/>\n                            </Col>\n\n                        </Form.Group>\n\n\n                        <Form>\n                         <PlaceLocationSelections locations={this.state.locations} categories={this.state.categories} edit={this.state.edit} place={this.state.place}/>\n                        </Form>\n\n\n                        <Form.Group>\n                            <Form.Label>\n                                Please Add phone\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"text\" placeholder=\"Phone Number\"\n                                                  onChange={(e) => this.onChange('phone', e)} value={this.state.phone}/>\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addPhone()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                            {this.state.phones.length !== 0 ? this.state.phones.map((phone, index) => {\n                                    return (\n                                        <ListGroup.Item>\n                                            <div className={'row'}>\n                                                <p className={'col'}>{phone}</p>\n                                                <Button variant=\"danger\"\n                                                        onClick={() => this.removePhone(index)}>Remove</Button>\n                                            </div>\n                                        </ListGroup.Item>)\n                                })\n                                :\n                                <ListGroup.Item>\n                                    <p className={'col'}>No Phones added yet</p>\n                                </ListGroup.Item>\n                            }\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>\n                                Please Add Email\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"text\" placeholder=\"Email\"\n                                                  onChange={(e) => this.onChange('email', e)} value={this.state.email}/>\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addEmail()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                            {this.state.emails.length !== 0 ? this.state.emails.map((email, index) => {\n                                    return (\n                                        <ListGroup.Item>\n                                            <div className={'row'}>\n                                                <p className={'col'}>{email}</p>\n                                                <Button variant=\"danger\"\n                                                        onClick={() => this.removeEmail(index)}>Remove</Button>\n                                            </div>\n                                        </ListGroup.Item>)\n                                })\n                                :\n                                <ListGroup.Item>\n                                    <p className={'col'}>No Emails added yet</p>\n                                </ListGroup.Item>\n                            }\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>\n                                Please Working Hours\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"time\" placeholder=\"Working Hours From\"\n                                                  onChange={(e) => this.onChange('workingHourFrom', e)}\n                                                  value={this.state.workingHourFrom}/>\n\n                                </Form.Group>\n                                <p>To</p>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"time\" placeholder=\"Working Hours To\"\n                                                  onChange={(e) => this.onChange('workingHourTo', e)}\n                                                  value={this.state.workingHourTo}/>\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addWorkingHour()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                            {this.state.workingHours.length !== 0 ? this.state.workingHours.map((workingHour, index) => {\n                                    return (\n                                        <ListGroup.Item>\n                                            <div className={'row'}>\n                                                <p className={'col'}>{workingHour}</p>\n                                                <Button variant=\"danger\"\n                                                        onClick={() => this.removeWorkingHour(index)}>Remove</Button>\n                                            </div>\n                                        </ListGroup.Item>)\n                                })\n                                :\n                                <ListGroup.Item>\n                                    <p className={'col'}>No Working Hours added yet</p>\n                                </ListGroup.Item>\n                            }\n                        </Form.Group>\n\n\n                        <Media media={this.state.media} updateMedia={this.updateMediaFiles}/>\n\n                        <div className={'p-2'}/>\n\n                        <SocialMedia socialMediaList={this.state.socialMedia}\n                                     updateSocialMediaList={this.updateSocialMediaList}/>\n\n\n                        <SubScriptionControl update={this.updateSubscriptionInfo}\n                                             subscriptionInfo={this.state.subscriptionInfo}/>\n                        <div className={'p-2'}/>\n                        <MapView update={this.updateMap} location={this.state.mapLocation}/>\n                        <div className={'p-2'}/>\n                        <Button variant=\"primary\"\n                                onClick={() => this.addPlace()}>{this.state.title} Place</Button>\n\n\n                    </Form>\n\n\n                </Container>\n\n\n            </div>\n        );\n    }\n}\n\nexport default AddPlace;\n"]},"metadata":{},"sourceType":"module"}