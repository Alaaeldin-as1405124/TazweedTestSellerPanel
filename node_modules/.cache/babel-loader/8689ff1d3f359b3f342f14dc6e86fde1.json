{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/Router.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport AddLocation from './components/AddLocation';\nimport NavBar from \"./components/NavBar\";\nimport Categories from \"./components/Categories\";\nimport AddCategory from \"./components/AddCategory\";\nimport Locations from \"./components/Locations\";\nimport Places from \"./components/Places\";\nimport AddPlace from \"./components/AddPlace\";\nimport MapView from \"./customComponents/MapView\";\nimport Login from \"./components/Login\";\nimport Logout from \"./components/Login\";\n\nfunction RouterComponent() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/addLocation\",\n    component: AddLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/categories\",\n    component: Categories,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/about\",\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/addCategory\",\n    component: AddCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/Locations\",\n    component: Locations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/Places\",\n    component: Places,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/addPlace\",\n    component: AddPlace,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/MapView\",\n    component: MapView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/Login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/Logout\",\n    component: Logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })));\n}\n\nconst fakeAuth = true;\n\nconst PrivateRoute = ({\n  component: Component\n}, ...rest) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => fakeAuth === true ? React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })) : React.createElement(Redirect, {\n    to: {\n      pathname: '/login',\n      state: {\n        from: props.location\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}));\n\nexport default RouterComponent;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/Router.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","Redirect","Home","About","AddLocation","NavBar","Categories","AddCategory","Locations","Places","AddPlace","MapView","Login","Logout","RouterComponent","fakeAuth","PrivateRoute","component","Component","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,EAAgDC,IAAhD,EAAsDC,QAAtD,QAAqE,kBAArE;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,SAASC,eAAT,GAA2B;AACvB,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,GAAzB;AAA6B,IAAA,SAAS,EAAEZ,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,cAAZ;AAA2B,IAAA,SAAS,EAAEE,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,aAAZ;AAA0B,IAAA,SAAS,EAAEE,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEH,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,cAAZ;AAA2B,IAAA,SAAS,EAAEI,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,SAAS,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CAFJ,CADJ;AAoBH;;AAED,MAAME,QAAQ,GAAG,IAAjB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC;AAAZ,CAAD,EAAwB,GAAGC,IAA3B,KACjB,oBAAC,KAAD,oBACQA,IADR;AAEI,EAAA,MAAM,EAAGC,KAAD,IACJL,QAAQ,KAAK,IAAb,GACM,oBAAC,SAAD,oBAAeK,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADN,GAEM,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACZC,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAFK,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ;;AAaA,eAAeV,eAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect} from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport AddLocation from './components/AddLocation';\nimport NavBar from \"./components/NavBar\";\nimport Categories from \"./components/Categories\";\nimport AddCategory from \"./components/AddCategory\";\nimport Locations from \"./components/Locations\";\nimport Places from \"./components/Places\";\nimport AddPlace from \"./components/AddPlace\";\nimport MapView from \"./customComponents/MapView\";\nimport Login from \"./components/Login\";\nimport Logout from \"./components/Login\";\n\nfunction RouterComponent() {\n    return (\n        <Router>\n            <NavBar/>\n            <Switch>\n                <PrivateRoute exact path=\"/\" component={Home}/>\n                <Route path=\"/addLocation\" component={AddLocation}/>\n                <Route path=\"/categories\" component={Categories}/>\n                <Route path=\"/about\" component={About}/>\n                <Route path=\"/addCategory\" component={AddCategory}/>\n                <Route path=\"/Locations\" component={Locations}/>\n                <Route path=\"/Places\" component={Places}/>\n                <Route path=\"/addPlace\" component={AddPlace}/>\n                <Route path=\"/MapView\" component={MapView}/>\n                <Route path=\"/Login\" component={Login}/>\n                <Route path=\"/Logout\" component={Logout}/>\n\n\n            </Switch>\n        </Router>\n    );\n}\n\nconst fakeAuth = true;\nconst PrivateRoute = ({component: Component},...rest) => (\n    <Route\n        {...rest}\n        render={(props) => (\n            fakeAuth === true\n                ? <Component {...props} />\n                : <Redirect to={{\n                    pathname: '/login',\n                    state: {from: props.location}\n                }}/>\n        )}\n    />\n)\nexport default RouterComponent;\n"]},"metadata":{},"sourceType":"module"}