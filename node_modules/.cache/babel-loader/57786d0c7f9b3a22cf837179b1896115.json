{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/Categories.js\";\nimport React, { Component } from 'react';\nimport { Button, Col, Form, ListGroup, Row } from \"react-bootstrap\";\nimport baseService from '../services/baseService';\nimport Table from \"react-bootstrap/Table\";\nimport AddSubCategory from \"./AddSubCategory\";\nimport AddCategory from \"./AddCategory\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass Categories extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categories: [],\n      loading: true,\n      categoriesModal: false,\n      subCategoriesModal: false,\n      categoryIndex: -1,\n      //for adding subcategory / edit category\n      subCategoryIndex: -1,\n      //for editing the sub category\n      edit: false\n    };\n\n    this.fetchCategories = () => {\n      baseService.getCategories().then(categories => this.setState({\n        categories,\n        loading: false\n      })).catch(err => console.log(err));\n    };\n\n    this.confirmAlert = (title, func) => {\n      confirmAlert({\n        title: '' + title,\n        message: 'Are you sure to do this.',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => {\n            if (func) func();\n          }\n        }, {\n          label: 'No',\n          onClick: () => {\n            this.alert('hhey no! ');\n          }\n        }]\n      });\n    };\n\n    this.alert = title => {\n      confirmAlert({\n        title: '' + title,\n        message: '',\n        buttons: [{\n          label: 'Dismiss'\n        }]\n      });\n    };\n\n    this.removeCategory = async index => {\n      /*\n      let categories = [...this.state.categories];\n      categories.splice(index, 1);\n      this.setState({categories});*/\n      if (window.confirm(\"Are you sure you want to delete this category?\")) {\n        let response = await baseService.deleteCategory(this.state.categories[index]);\n\n        if (response) {\n          this.fetchCategories();\n        } else {\n          this.alert('Failed to delete category');\n        }\n      }\n    };\n\n    this.removeSubCategory = async (categoryIndex, subCategoryIndex) => {\n      if (window.confirm(\"Are you sure you want to delete this subcategory?\")) {\n        let categories = [...this.state.categories];\n        let category = categories[categoryIndex]; // if (category.subCategories.length === 1) {\n        //     alert('Cannot delete, Category Must have at least 1 SubCategory');\n        //     return;\n        // }\n        // category.subCategories.splice(subCategoryIndex, 1);\n        // categories[categoryIndex] = category;\n        // this.setState({categories})\n\n        let response = await baseService.deleteSubCategory(category, category.subCategories[subCategoryIndex]);\n\n        if (response) {\n          this.fetchCategories();\n        } else {\n          this.alert('Failed to delete subcategory');\n        }\n      }\n    };\n\n    this.addCategory = async category => {\n      //add category\n      let newCategory = await baseService.addCategory(category);\n\n      if (newCategory) {\n        console.log(newCategory); //add the category\n\n        let categories = [...this.state.categories];\n        categories.push(newCategory);\n        this.setState({\n          categories,\n          categoriesModal: false\n        });\n      } else {\n        this.alert('failed to add category');\n      }\n    };\n\n    this.addSubCategory = async subCategory => {\n      //add sub category\n      let categories = [...this.state.categories];\n\n      if (this.state.categoryIndex !== -1) {\n        let category = categories[this.state.categoryIndex];\n        let newSubCategory = await baseService.addSubCategory(category, subCategory);\n\n        if (newSubCategory && newSubCategory.name) {\n          //category.subCategories.push(newSubCategory);\n          this.setState({\n            categoryIndex: -1\n          });\n          this.fetchCategories();\n        } else {\n          this.alert('fail to add subCategory');\n        }\n      } else {\n        this.alert('Failed to add sub category');\n      }\n    };\n\n    this.editCategory = async category => {\n      //let categories = [...this.state.categories];\n      // if (this.state.categoryIndex !== -1) {\n      let response = await baseService.updateCategory(category);\n\n      if (response && response.name) {\n        this.fetchCategories(); //categories[this.state.categoryIndex] = category;\n        //this.setState({categories, categoryIndex: -1});\n      } else {\n        this.alert('Failed to update category');\n      } // } else {\n      //     alert('Failed to update category');\n      //  }\n\n    };\n\n    this.editSubCategory = async subCategory => {\n      let categories = [...this.state.categories];\n\n      if (this.state.categoryIndex !== -1 && this.state.subCategoryIndex !== -1) {\n        let category = categories[this.state.categoryIndex];\n        let response = await baseService.updateSubCategory(category, subCategory); //category.subCategories[this.state.subCategoryIndex] = subCategory;\n\n        if (response && response.name) {\n          this.fetchCategories();\n        } else {\n          this.alert('Failed to update subcategory');\n        }\n\n        this.setState({\n          categoryIndex: -1,\n          subCategoryIndex: -1\n        });\n      } else {\n        this.alert('Failed to update sub category');\n      }\n    };\n  }\n\n  componentWillMount() {\n    baseService.getCategories().then(categories => this.setState({\n      categories,\n      loading: false\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Categories\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"success\",\n      onClick: () => this.setState({\n        categoriesModal: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), \" Add Category\"), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Icon\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Category Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Category Name (Ar)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"SubCategories\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.categories.length > 0 ? this.state.categories.map((category, categoryIndex) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, categoryIndex), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          width: 64,\n          height: 64,\n          padding: 5\n        },\n        src: category.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, category.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, category.nameAr), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"success\",\n        onClick: () => this.setState({\n          categoryIndex: categoryIndex,\n          subCategoriesModal: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), \" Add SubCategory\"), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Icon\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Category Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Category Name (Ar)\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, category.subCategories.length > 0 ? category.subCategories.map((subCategory, subCategoryIndex) => {\n        //do whatever\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, subCategoryIndex), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          style: {\n            width: 64,\n            height: 64,\n            padding: 5\n          },\n          src: subCategory.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, subCategory.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, subCategory.nameAr), React.createElement(\"td\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-trash fa-2x\",\n          style: {\n            color: 'red'\n          },\n          onClick: () => this.removeSubCategory(categoryIndex, subCategoryIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }), React.createElement(\"i\", {\n          className: \"fa fa-edit fa-2x\",\n          style: {\n            color: 'green'\n          },\n          onClick: () => this.setState({\n            categoryIndex: categoryIndex,\n            subCategoryIndex: subCategoryIndex,\n            edit: true,\n            subCategoriesModal: true\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        })));\n      }) : React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"No subcategories yet\")))))), React.createElement(\"td\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-trash fa-2x\",\n        style: {\n          color: 'red'\n        },\n        onClick: () => this.removeCategory(categoryIndex),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fa fa-edit fa-2x\",\n        style: {\n          color: 'green'\n        },\n        onClick: () => this.setState({\n          categoryIndex: categoryIndex,\n          edit: true,\n          categoriesModal: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      })));\n    }) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"No categories yet\")))))), React.createElement(AddCategory, {\n      modal: this.state.categoriesModal,\n      handleClose: () => this.setState({\n        categoriesModal: false,\n        categoryIndex: -1,\n        edit: false\n      }),\n      addCategory: this.addCategory,\n      edit: this.state.edit,\n      editCategory: this.editCategory,\n      category: this.state.categories[this.state.categoryIndex],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(AddSubCategory, {\n      modal: this.state.subCategoriesModal,\n      handleClose: () => this.setState({\n        subCategoriesModal: false,\n        categoryIndex: -1,\n        edit: false\n      }),\n      addSubCategory: this.addSubCategory,\n      edit: this.state.edit,\n      editSubCategory: this.editSubCategory,\n      category: this.state.categories[this.state.categoryIndex],\n      subCategoryIndex: this.state.subCategoryIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Categories;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/Categories.js"],"names":["React","Component","Button","Col","Form","ListGroup","Row","baseService","Table","AddSubCategory","AddCategory","confirmAlert","Categories","state","categories","loading","categoriesModal","subCategoriesModal","categoryIndex","subCategoryIndex","edit","fetchCategories","getCategories","then","setState","catch","err","console","log","title","func","message","buttons","label","onClick","alert","removeCategory","index","window","confirm","response","deleteCategory","removeSubCategory","category","deleteSubCategory","subCategories","addCategory","newCategory","push","addSubCategory","subCategory","newSubCategory","name","editCategory","updateCategory","editSubCategory","updateSubCategory","componentWillMount","render","length","map","width","height","padding","icon","nameAr","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Col, Form, ListGroup, Row} from \"react-bootstrap\";\nimport baseService from '../services/baseService'\nimport Table from \"react-bootstrap/Table\";\nimport AddSubCategory from \"./AddSubCategory\";\nimport AddCategory from \"./AddCategory\";\nimport {confirmAlert} from \"react-confirm-alert\";\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass Categories extends Component {\n    state = {\n        categories: [],\n        loading: true,\n        categoriesModal: false,\n        subCategoriesModal: false,\n        categoryIndex: -1, //for adding subcategory / edit category\n        subCategoryIndex: -1, //for editing the sub category\n        edit: false,\n\n    };\n\n    componentWillMount() {\n        baseService.getCategories().then((categories) => this.setState({\n            categories,\n            loading: false\n        })).catch((err) => console.log(err));\n    }\n\n    fetchCategories = () => {\n        baseService.getCategories().then((categories) => this.setState({\n            categories,\n            loading: false\n        })).catch((err) => console.log(err));\n    }\n    confirmAlert = (title, func) => {\n        confirmAlert({\n            title: '' + title,\n            message: 'Are you sure to do this.',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        if (func)\n                            func()\n                    }\n                },\n                {\n                    label: 'No',\n                    onClick: () => {\n                        this.alert('hhey no! ')\n                    }\n                }\n            ]\n        });\n    };\n\n    alert = (title) => {\n        confirmAlert({\n            title: '' + title,\n            message: '',\n            buttons: [{label: 'Dismiss'}]\n        });\n    };\n    removeCategory = async (index) => {\n        /*\n        let categories = [...this.state.categories];\n        categories.splice(index, 1);\n        this.setState({categories});*/\n\n        if (window.confirm(\"Are you sure you want to delete this category?\")) {\n            let response = await baseService.deleteCategory(this.state.categories[index]);\n            if (response) {\n                this.fetchCategories()\n            } else {\n                this.alert('Failed to delete category')\n            }\n        }\n\n\n\n\n\n    };\n    removeSubCategory = async (categoryIndex, subCategoryIndex) => {\n\n\n        if (window.confirm(\"Are you sure you want to delete this subcategory?\")) {\n            let categories = [...this.state.categories];\n            let category = categories[categoryIndex];\n            // if (category.subCategories.length === 1) {\n            //     alert('Cannot delete, Category Must have at least 1 SubCategory');\n            //     return;\n            // }\n            // category.subCategories.splice(subCategoryIndex, 1);\n            // categories[categoryIndex] = category;\n            // this.setState({categories})\n            let response = await baseService.deleteSubCategory(category, category.subCategories[subCategoryIndex])\n            if (response) {\n                this.fetchCategories();\n            } else {\n                this.alert('Failed to delete subcategory')\n            }\n        }\n\n\n    };\n    addCategory = async (category) => {\n        //add category\n        let newCategory = await baseService.addCategory(category);\n        if (newCategory) {\n            console.log(newCategory);\n            //add the category\n\n            let categories = [...this.state.categories];\n            categories.push(newCategory);\n            this.setState({categories, categoriesModal: false});\n        } else {\n            this.alert('failed to add category')\n        }\n\n    };\n    addSubCategory = async (subCategory) => {\n        //add sub category\n        let categories = [...this.state.categories];\n        if (this.state.categoryIndex !== -1) {\n            let category = categories[this.state.categoryIndex];\n            let newSubCategory = await baseService.addSubCategory(category, subCategory);\n            if (newSubCategory && newSubCategory.name) {\n                //category.subCategories.push(newSubCategory);\n                this.setState({categoryIndex: -1});\n                this.fetchCategories();\n            } else {\n                this.alert('fail to add subCategory')\n            }\n        } else {\n            this.alert('Failed to add sub category');\n        }\n\n    };\n\n\n    editCategory = async (category) => {\n        //let categories = [...this.state.categories];\n        // if (this.state.categoryIndex !== -1) {\n        let response = await baseService.updateCategory(category);\n        if (response && response.name) {\n            this.fetchCategories();\n            //categories[this.state.categoryIndex] = category;\n            //this.setState({categories, categoryIndex: -1});\n        } else {\n            this.alert('Failed to update category');\n        }\n        // } else {\n        //     alert('Failed to update category');\n        //  }\n    };\n\n    editSubCategory = async (subCategory) => {\n        let categories = [...this.state.categories];\n\n        if (this.state.categoryIndex !== -1 && this.state.subCategoryIndex !== -1) {\n            let category = categories[this.state.categoryIndex];\n            let response = await baseService.updateSubCategory(category, subCategory);\n            //category.subCategories[this.state.subCategoryIndex] = subCategory;\n            if (response && response.name) {\n                this.fetchCategories();\n            } else {\n                this.alert('Failed to update subcategory')\n            }\n            this.setState({categoryIndex: -1, subCategoryIndex: -1});\n        } else {\n            this.alert('Failed to update sub category');\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Categories</h2>\n\n\n                <Form>\n                    <Button variant=\"success\" onClick={() => this.setState({categoriesModal: true})}>\n                        <i className=\"fa fa-plus\"/> Add Category\n                    </Button>\n\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Icon</th>\n                            <th>Category Name</th>\n                            <th>Category Name (Ar)</th>\n                            <th>SubCategories</th>\n                            <th>Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n\n                        {this.state.categories.length > 0 ? this.state.categories.map((category, categoryIndex) => {\n                            return (\n                                <tr>\n                                    <td>{categoryIndex}</td>\n                                    <td>\n                                        <center>\n                                            <img style={{width: 64, height: 64, padding: 5}} src={category.icon}/>\n                                        </center>\n                                    </td>\n                                    <td>{category.name}</td>\n                                    <td>{category.nameAr}</td>\n                                    <td>\n                                        <Button variant=\"success\" onClick={() => this.setState({\n                                            categoryIndex: categoryIndex,\n                                            subCategoriesModal: true\n                                        })}>\n                                            <i className=\"fa fa-plus\"/> Add SubCategory\n                                        </Button>\n\n                                        <Table striped bordered hover>\n                                            <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Icon</th>\n                                                <th>Category Name</th>\n                                                <th>Category Name (Ar)</th>\n                                                <th>Actions</th>\n                                            </tr>\n                                            </thead>\n                                            <tbody>\n                                            {category.subCategories.length > 0 ? category.subCategories.map((subCategory, subCategoryIndex) => {\n                                                //do whatever\n                                                return (\n                                                    <tr>\n                                                        <td>{subCategoryIndex}</td>\n                                                        <td>\n                                                            <center>\n                                                                <img style={{width: 64, height: 64, padding: 5}}\n                                                                     src={subCategory.icon}/>\n                                                            </center>\n                                                        </td>\n                                                        <td>{subCategory.name}</td>\n                                                        <td>{subCategory.nameAr}</td>\n                                                        <td className=\"row\">\n                                                            <i className=\"fa fa-trash fa-2x\" style={{color: 'red'}}\n                                                               onClick={() => this.removeSubCategory(categoryIndex, subCategoryIndex)}/>\n                                                            <i className=\"fa fa-edit fa-2x\" style={{color: 'green'}}\n                                                               onClick={() => this.setState({\n                                                                   categoryIndex: categoryIndex,\n                                                                   subCategoryIndex: subCategoryIndex,\n                                                                   edit: true,\n                                                                   subCategoriesModal: true\n                                                               })}/>\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            }) : <tr>\n                                                <td colSpan=\"5\">\n                                                    <center>No subcategories yet</center>\n                                                </td>\n                                            </tr>}\n\n                                            </tbody>\n                                        </Table>\n                                    </td>\n                                    <td className=\"row\">\n                                        <i className=\"fa fa-trash fa-2x\" style={{color: 'red'}}\n                                           onClick={() => this.removeCategory(categoryIndex)}/>\n                                        <i className=\"fa fa-edit fa-2x\" style={{color: 'green'}}\n                                           onClick={() => this.setState({\n                                               categoryIndex: categoryIndex,\n                                               edit: true,\n                                               categoriesModal: true\n                                           })}/>\n                                    </td>\n                                </tr>\n                            )\n                        }) : <tr>\n                            <td colSpan=\"6\">\n                                <center>No categories yet</center>\n                            </td>\n                        </tr>}\n\n                        </tbody>\n                    </Table>\n                </Form>\n\n                <AddCategory modal={this.state.categoriesModal}\n                             handleClose={() => this.setState({categoriesModal: false, categoryIndex: -1, edit: false})}\n                             addCategory={this.addCategory}\n                             edit={this.state.edit}\n                             editCategory={this.editCategory}\n                             category={this.state.categories[this.state.categoryIndex]}\n                />\n                <AddSubCategory modal={this.state.subCategoriesModal}\n                                handleClose={() => this.setState({\n                                    subCategoriesModal: false,\n                                    categoryIndex: -1,\n                                    edit: false\n                                })}\n                                addSubCategory={this.addSubCategory}\n                                edit={this.state.edit}\n                                editSubCategory={this.editSubCategory}\n                                category={this.state.categories[this.state.categoryIndex]}\n                                subCategoryIndex={this.state.subCategoryIndex}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}