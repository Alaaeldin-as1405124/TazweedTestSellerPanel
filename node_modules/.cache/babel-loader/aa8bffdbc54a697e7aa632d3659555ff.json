{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/Media.js\";\nimport React, { Component } from 'react';\nimport { Tabs, Tab, ListGroup, Button, Form, Col, FormControl } from 'react-bootstrap';\nimport FormData from 'form-data';\nimport { List, arrayMove } from 'react-movable';\nimport DragableList from \"../customComponents/DragableList\";\n\nclass Media extends Component {\n  constructor(props) {\n    super(props);\n\n    this._handleImageChange = async e => {\n      e.preventDefault();\n      let filesArray = Array.from(e.target.files);\n      const formData = new FormData();\n      filesArray.map(singleFile => {\n        formData.append('files[]', singleFile);\n      });\n      let response = await fetch('http://localhost:1111/api/uploadMulti', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Authorization': \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoyLCJyZWdEYXRlIjoiV2VkIE9jdCAwMiAyMDE5IDEzOjQ1OjA3IEdNVCswMzAwIChBcmFiaWFuIFN0YW5kYXJkIFRpbWUpIiwiaXNWYWxpZCI6dHJ1ZSwiX2lkIjoiNWQ5NDgyMDNlYmQ1ZTg0M2I4NTU5NDI5IiwiZW1haWwiOiJhbGFhIiwibmFtZSI6ImFsYWEiLCJfX3YiOjAsImlhdCI6MTU3MDAxMzc2N30.LB-CBu-kOlPQwJjoyVwhuFP9lYxBWhffh-479W1emX8\"\n        }\n      });\n\n      if (response.ok) {\n        try {\n          let filesFetched = await response.json();\n          let files = [...this.state.files];\n          filesFetched.map(singleFile => {\n            files.push(singleFile);\n          });\n          this.setState({\n            files\n          });\n          this.props.updateMedia(files);\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        console.log('response not ok ', response);\n      }\n    };\n\n    this.removeImageFile = index => {\n      let files = [...this.state.files];\n      files.splice(index, 1);\n      this.setState({\n        files\n      }); //call props update\n\n      this.props.updateMedia(files);\n    };\n\n    this.removeVideo = index => {\n      let videoUrls = [...this.state.videoUrls];\n      videoUrls.splice(index, 1);\n      this.setState({\n        videoUrls\n      });\n    };\n\n    this.addExternalLink = () => {\n      //check video type and send it to the server\n      if (this.state.externalLink !== '') {\n        //check if it's a valid link\n        let link = this.state.externalLink.toString().toLowerCase();\n\n        if (link.includes('.mp4') || link.includes('youtube') || link.match(/\\.(jpeg|jpg|gif|png)$/)) {\n          let type = link.includes('.mp4') || link.includes('youtube') ? 'video' : 'image';\n          let files = this.state.files;\n          files.push({\n            link: this.state.externalLink,\n            type: type\n          });\n          let extention = link.substr(link.lastIndexOf('.') + 1, link.length);\n          console.log(extention);\n          this.setState({\n            externalLink: '',\n            files\n          });\n        } else {\n          alert('invalid video/image url (Accepting MP4 or Youtube link');\n          return;\n        }\n      } else alert('Please fill video link first');\n    };\n\n    this.onChange = (key, e) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    };\n\n    this.state = {\n      files: [],\n      imageUrls: [],\n      videoUrls: [],\n      type: 'image',\n      externalLink: ''\n    };\n    this._handleImageChange = this._handleImageChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.media) {\n      this.setState({\n        files: nextProps.media\n      });\n    }\n  }\n\n  componentWillMount() {\n    if (this.props.media) {\n      this.setState({\n        files: this.props.media\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Media\")), React.createElement(Tabs, {\n      id: \"controlled-tab-example\",\n      activeKey: this.state.type,\n      onSelect: k => this.setState({\n        type: k\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"image\",\n      title: \"Upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this._handleImageChange,\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), React.createElement(Tab, {\n      eventKey: \"video\",\n      title: \"External Link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Add External Link\"), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Video/Image Link (Youtube or external media link) MP4\",\n      onChange: e => this.onChange('externalLink', e),\n      value: this.state.externalLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      className: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"badge-info col-6\",\n      onClick: () => this.addExternalLink(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), \" Add\")))), this.state.videoUrls && this.state.videoUrls.map((url, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          width: 100,\n          height: 100,\n          padding: 5\n        },\n        src: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeVideo(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Remove\"))));\n    }))), React.createElement(DragableList, {\n      data: this.state.files,\n      renderItem: (file, index) => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(ListGroup.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: 'row',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: 'col',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, file.type.includes('video') && React.createElement(\"video\", {\n          width: \"auto\",\n          controls: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"source\", {\n          src: file.link,\n          type: file.type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }), \"Your browser does not support HTML5 video.\"), file.type.includes('image') && React.createElement(\"img\", {\n          style: {\n            width: 100,\n            height: 100,\n            padding: 5\n          },\n          src: file.link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        })), React.createElement(Button, {\n          variant: \"danger\",\n          onClick: () => this.removeImageFile(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"Remove\"))));\n      },\n      reOrder: files => {\n        if (files[0].type === 'image') {\n          this.setState({\n            files\n          });\n          this.props.updateMedia(files);\n        } else {\n          alert('The first item must be an image');\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Media;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/Media.js"],"names":["React","Component","Tabs","Tab","ListGroup","Button","Form","Col","FormControl","FormData","List","arrayMove","DragableList","Media","constructor","props","_handleImageChange","e","preventDefault","filesArray","Array","from","target","files","formData","map","singleFile","append","response","fetch","method","body","headers","ok","filesFetched","json","state","push","setState","updateMedia","console","log","removeImageFile","index","splice","removeVideo","videoUrls","addExternalLink","externalLink","link","toString","toLowerCase","includes","match","type","extention","substr","lastIndexOf","length","alert","onChange","key","value","imageUrls","bind","componentWillReceiveProps","nextProps","nextContext","media","componentWillMount","render","k","url","width","height","padding","file"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Tabs, Tab, ListGroup, Button, Form, Col, FormControl} from 'react-bootstrap'\nimport FormData from 'form-data';\nimport { List, arrayMove } from 'react-movable';\nimport DragableList from \"../customComponents/DragableList\";\n\nclass Media extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n            imageUrls: [],\n            videoUrls: [],\n            type: 'image',\n            externalLink:'',\n        };\n        this._handleImageChange = this._handleImageChange.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.media){\n            this.setState({files:nextProps.media})\n        }\n    }\n    componentWillMount() {\n        if(this.props.media){\n            this.setState({files:this.props.media})\n        }\n    }\n\n\n    _handleImageChange = async (e)=> {\n        e.preventDefault();\n        let filesArray = Array.from(e.target.files);\n        const formData = new FormData();\n        filesArray.map((singleFile) =>{\n            formData.append('files[]', singleFile);\n        });\n        let response = await fetch('http://localhost:1111/api/uploadMulti', {\n            method: 'POST',\n            body: formData,\n            headers: {\n                'Authorization': \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoyLCJyZWdEYXRlIjoiV2VkIE9jdCAwMiAyMDE5IDEzOjQ1OjA3IEdNVCswMzAwIChBcmFiaWFuIFN0YW5kYXJkIFRpbWUpIiwiaXNWYWxpZCI6dHJ1ZSwiX2lkIjoiNWQ5NDgyMDNlYmQ1ZTg0M2I4NTU5NDI5IiwiZW1haWwiOiJhbGFhIiwibmFtZSI6ImFsYWEiLCJfX3YiOjAsImlhdCI6MTU3MDAxMzc2N30.LB-CBu-kOlPQwJjoyVwhuFP9lYxBWhffh-479W1emX8\"\n            },\n        });\n        if (response.ok){\n\n            try{\n\n                let filesFetched = await response.json();\n                let files = [...this.state.files];\n                filesFetched.map((singleFile)=>{\n                    files.push(singleFile);\n                    });\n\n                this.setState({files});\n                this.props.updateMedia(files);\n            }catch (e) {\n                console.log(e)\n            }\n        }\n        else{\n            console.log('response not ok ',response)\n        }\n\n\n    }\n\n\n\n    removeImageFile = (index) => {\n        let files = [...this.state.files];\n        files.splice(index, 1);\n        this.setState({files})\n        //call props update\n        this.props.updateMedia(files);\n    };\n    removeVideo = (index) => {\n        let videoUrls = [...this.state.videoUrls];\n        videoUrls.splice(index, 1);\n        this.setState({videoUrls})\n    };\n\n    addExternalLink = () => {\n        //check video type and send it to the server\n        if(this.state.externalLink !==''){\n            //check if it's a valid link\n            let link = this.state.externalLink.toString().toLowerCase();\n            if(link.includes('.mp4') || link.includes('youtube') || link.match(/\\.(jpeg|jpg|gif|png)$/)){\n                let type = link.includes('.mp4') || link.includes('youtube') ? 'video' : 'image'\n                let files =this.state.files;\n                files.push({link:this.state.externalLink,type:type});\n                let extention = link.substr(link.lastIndexOf('.')+1,link.length)\n                console.log(extention)\n\n                this.setState({externalLink:'',files})\n            }\n            else{\n                alert('invalid video/image url (Accepting MP4 or Youtube link');\n                return;\n            }\n        }\n        else\n            alert('Please fill video link first')\n    }\n\n    onChange = (key,e)=>{\n        this.setState({[key]:e.target.value})\n    }\n    render() {\n\n        return (\n            <div>\n                <div>\n                    <h2>Media</h2>\n                </div>\n\n                <Tabs id=\"controlled-tab-example\" activeKey={this.state.type} onSelect={k => this.setState({type: k})}>\n                    <Tab eventKey=\"image\" title=\"Upload\">\n                        <form >\n                            <input type=\"file\" onChange={this._handleImageChange} multiple/>\n                        </form>\n\n\n\n                    </Tab>\n                    <Tab eventKey=\"video\" title=\"External Link\">\n\n                        <Form.Group>\n                            <Form.Label>\n                                Add External Link\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"text\" placeholder=\"Video/Image Link (Youtube or external media link) MP4\"\n                                                  onChange={(e)=>this.onChange('externalLink',e)}\n                                                  value={this.state.externalLink}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addExternalLink()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                        </Form.Group>\n\n                        {this.state.videoUrls && this.state.videoUrls.map((url, index) => {\n                            return (\n                                <div>\n                                    <ListGroup.Item>\n                                        <div className={'row'}>\n                                            <div className={'col'}>\n\n                                                <img style={{width: 100, height: 100, padding: 5}} src={url}/>\n                                            </div>\n                                            <Button variant=\"danger\"\n                                                    onClick={() => this.removeVideo(index)}>Remove</Button>\n                                        </div>\n                                    </ListGroup.Item>\n                                </div>)\n                        })}\n                    </Tab>\n\n                </Tabs>\n\n                <DragableList\n                    data={this.state.files}\n                    renderItem={(file,index)=>{\n                        return (\n                            <div>\n                                <ListGroup.Item>\n                                    <div className={'row'}>\n                                        <div className={'col'}>\n                                            {file.type.includes('video') &&\n                                            <video width=\"auto\" controls>\n                                                <source\n                                                    src={file.link}\n                                                    type={file.type}\n                                                />\n                                                Your browser does not support HTML5 video.\n                                            </video>\n                                            }\n                                            {file.type.includes('image') &&\n                                            <img style={{width: 100, height: 100, padding: 5}} src={file.link}/>}\n\n                                        </div>\n                                        <Button variant=\"danger\"\n                                                onClick={() => this.removeImageFile(index)}>Remove</Button>\n                                    </div>\n                                </ListGroup.Item>\n                            </div>)\n                    }}\n                    reOrder={(files)=>{\n                        if(files[0].type === 'image'){\n                            this.setState({files});\n                            this.props.updateMedia(files);\n                        }else{\n                            alert('The first item must be an image')\n                        }\n                    }}\n                />\n\n            </div>\n        )\n    }\n\n\n}\n\nexport default Media;\n"]},"metadata":{},"sourceType":"module"}