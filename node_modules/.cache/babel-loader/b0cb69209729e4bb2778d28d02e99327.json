{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/MediaSingle.js\";\nimport React, { Component } from 'react';\nimport { Tabs, Tab, ListGroup, Button, Form, Col, FormControl } from 'react-bootstrap';\nimport axios from 'axios';\nimport FormData from 'form-data';\n\nclass MediaSingle extends Component {\n  constructor(props) {\n    super(props);\n\n    this._handleImageChange = async e => {\n      e.preventDefault();\n      let file = e.target.files;\n\n      if (!file[0].type.toString().includes('image')) {\n        alert('allowed type (Images) ONLY');\n        return;\n      } //reset the chosen photos\n\n\n      this.setState({\n        files: []\n      });\n      const formData = new FormData();\n      formData.append('file', file[0]);\n      let response = await fetch('http://localhost:1111/api/upload', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Authorization': \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoyLCJyZWdEYXRlIjoiV2VkIE9jdCAwMiAyMDE5IDEzOjQ1OjA3IEdNVCswMzAwIChBcmFiaWFuIFN0YW5kYXJkIFRpbWUpIiwiaXNWYWxpZCI6dHJ1ZSwiX2lkIjoiNWQ5NDgyMDNlYmQ1ZTg0M2I4NTU5NDI5IiwiZW1haWwiOiJhbGFhIiwibmFtZSI6ImFsYWEiLCJfX3YiOjAsImlhdCI6MTU3MDAxMzc2N30.LB-CBu-kOlPQwJjoyVwhuFP9lYxBWhffh-479W1emX8\"\n        }\n      });\n\n      if (response.ok) {\n        try {\n          let link = await response.json();\n          console.log('link is', link);\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        console.log('response not ok ', response);\n      }\n\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0]);\n\n      reader.onloadend = () => {\n        let files = [...this.state.files];\n        file[0].blob = reader.result;\n        files.push(file[0]);\n        this.setState({\n          files: files\n        });\n      };\n    };\n\n    this.removeImageFile = index => {\n      this.setState({\n        files: []\n      });\n    };\n\n    this.onChange = (key, e) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    };\n\n    this.state = {\n      files: []\n    };\n    this._handleImageChange = this._handleImageChange.bind(this);\n    this._handleSubmit = this._handleSubmit.bind(this);\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault(); // TODO: do something with -> this.state.file\n\n    this.props.updateMedia(this.state.files);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this._handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this._handleImageChange,\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this._handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Upload Image\"))), this.state.files && this.state.files.map((fileUrl, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, fileUrl && React.createElement(\"img\", {\n        style: {\n          width: 100,\n          height: 100,\n          padding: 5\n        },\n        src: fileUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeImageFile(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Remove\"))));\n    }));\n  }\n\n}\n\nexport default MediaSingle;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/MediaSingle.js"],"names":["React","Component","Tabs","Tab","ListGroup","Button","Form","Col","FormControl","axios","FormData","MediaSingle","constructor","props","_handleImageChange","e","preventDefault","file","target","files","type","toString","includes","alert","setState","formData","append","response","fetch","method","body","headers","ok","link","json","console","log","reader","FileReader","readAsDataURL","onloadend","state","blob","result","push","removeImageFile","index","onChange","key","value","bind","_handleSubmit","updateMedia","render","map","fileUrl","width","height","padding"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Tabs, Tab, ListGroup, Button, Form, Col, FormControl} from 'react-bootstrap'\nimport axios from 'axios'\nimport FormData from 'form-data';\n\nclass MediaSingle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n        };\n        this._handleImageChange = this._handleImageChange.bind(this);\n        this._handleSubmit = this._handleSubmit.bind(this);\n    }\n\n\n    _handleSubmit(e) {\n        e.preventDefault();\n        // TODO: do something with -> this.state.file\n\n        this.props.updateMedia(this.state.files);\n\n    }\n\n    _handleImageChange = async (e) => {\n        e.preventDefault();\n        let file = e.target.files;\n        if (!file[0].type.toString().includes('image')) {\n            alert('allowed type (Images) ONLY');\n            return;\n        }\n        //reset the chosen photos\n        this.setState({files: []});\n\n\n        const formData = new FormData();\n        formData.append('file', file[0])\n        let response = await fetch('http://localhost:1111/api/upload', {\n            method: 'POST',\n            body: formData,\n            headers: {\n                'Authorization': \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoyLCJyZWdEYXRlIjoiV2VkIE9jdCAwMiAyMDE5IDEzOjQ1OjA3IEdNVCswMzAwIChBcmFiaWFuIFN0YW5kYXJkIFRpbWUpIiwiaXNWYWxpZCI6dHJ1ZSwiX2lkIjoiNWQ5NDgyMDNlYmQ1ZTg0M2I4NTU5NDI5IiwiZW1haWwiOiJhbGFhIiwibmFtZSI6ImFsYWEiLCJfX3YiOjAsImlhdCI6MTU3MDAxMzc2N30.LB-CBu-kOlPQwJjoyVwhuFP9lYxBWhffh-479W1emX8\"\n            },\n        });\n        if (response.ok){\n\n            try{\n\n                let link = await response.json();\n\n                console.log('link is', link);\n            }catch (e) {\n                console.log(e)\n            }\n        }\n        else{\n            console.log('response not ok ',response)\n        }\n\n\n        let reader = new FileReader();\n\n        reader.readAsDataURL(file[0]);\n        reader.onloadend = () => {\n            let files = [...this.state.files];\n\n            file[0].blob = reader.result;\n            files.push(file[0]);\n            this.setState({\n                files: files\n            });\n\n        }\n\n\n    }\n\n    removeImageFile = (index) => {\n        this.setState({files: []})\n    };\n\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n\n    render() {\n\n\n        return (\n            <div>\n\n                <form onSubmit={this._handleSubmit}>\n                    <div className={\"row p-2\"}>\n                        <input type=\"file\" onChange={this._handleImageChange} className={\"col\"}/>\n                        <button type=\"submit\" onClick={this._handleSubmit}>Upload Image</button>\n                    </div>\n                </form>\n                {this.state.files && this.state.files.map((fileUrl, index) => {\n                    return (\n                        <div>\n                            <ListGroup.Item>\n                                <div className={'row'}>\n                                    <div className={'col'}>\n                                        {fileUrl && <img style={{width: 100, height: 100, padding: 5}} src={fileUrl}/>}\n\n                                    </div>\n                                    <Button variant=\"danger\"\n                                            onClick={() => this.removeImageFile(index)}>Remove</Button>\n                                </div>\n                            </ListGroup.Item>\n                        </div>)\n\n                })}\n\n\n            </div>\n        )\n    }\n\n\n}\n\nexport default MediaSingle;\n"]},"metadata":{},"sourceType":"module"}