{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/Categories.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, ListGroup } from \"react-bootstrap\";\nimport baseService from '../services/baseService';\n\nclass Categories extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categories: [],\n      loading: true,\n      selectedIndex: 0\n    };\n\n    this.onCategoryClick = index => {\n      this.setState({\n        selectedIndex: index\n      });\n    };\n\n    this.removeCategory = index => {\n      let categories = [...this.state.categories];\n      categories.splice(index, 1);\n      this.setState({\n        categories\n      });\n    };\n\n    this.removeSubCategory = index => {\n      let categories = [...this.state.categories];\n      let category = categories[this.state.selectedIndex];\n      category.subCategories.splice(index, 1);\n      category.subCategories = categories;\n      this.setState({\n        categories\n      });\n    };\n  }\n\n  componentWillMount() {\n    baseService.getCategories().then(categories => this.setState({\n      categories,\n      loading: false\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Categories\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.categories.length !== 0 ? this.state.categories.map((category, index) => {\n      let active = this.state.selectedIndex === index;\n      return this.state.selectedIndex === index ? React.createElement(ListGroup.Item, {\n        onClick: () => this.onCategoryClick(index),\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, category.name, \" / \", category.nameAr), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeCategory(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Remove\"))) : React.createElement(ListGroup.Item, {\n        onClick: () => this.onCategoryClick(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, category.name, \" / \", category.nameAr), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeCategory(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Remove\")));\n    }) : React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: 'col',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"No categories yet\")))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.categories.length > 0 && this.state.categories[this.state.selectedIndex].subCategories.length > 0 ? this.state.categories.subCategories.map((category, index) => {\n      return React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, category.name, \" / \", category.nameAr), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeSubCategory(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Remove\")));\n    }) : React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: 'col',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"No Sub Categories yet\")))))));\n  }\n\n}\n\nexport default Categories;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/Categories.js"],"names":["React","Component","Button","Form","ListGroup","baseService","Categories","state","categories","loading","selectedIndex","onCategoryClick","index","setState","removeCategory","splice","removeSubCategory","category","subCategories","componentWillMount","getCategories","then","catch","err","console","log","render","length","map","active","name","nameAr"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Form, ListGroup} from \"react-bootstrap\";\nimport baseService from '../services/baseService'\n\nclass Categories extends Component {\n    state = {\n        categories: [],\n        loading: true,\n        selectedIndex:0\n    };\n\n    componentWillMount() {\n        baseService.getCategories().then((categories) => this.setState({\n            categories,\n            loading: false\n        })).catch((err) => console.log(err));\n    }\n\n    onCategoryClick = (index) =>{\n      this.setState({selectedIndex:index});\n    };\n    removeCategory = (index) =>{\n        let categories = [...this.state.categories];\n        categories.splice(index,1);\n        this.setState({categories});\n    };\n    removeSubCategory = (index) =>{\n        let categories = [...this.state.categories];\n        let category = categories[this.state.selectedIndex];\n        category.subCategories.splice(index,1);\n        category.subCategories = categories;\n        this.setState({categories})\n    };\n    render() {\n        return (\n            <div>\n                <h2>Categories</h2>\n\n                <Form>\n                    <Form.Row>\n                        <Form.Group>\n                            <ListGroup>\n\n\n                                {this.state.categories.length !== 0 ? this.state.categories.map((category, index) => {\n                                    let active = this.state.selectedIndex === index;\n                                        return (\n                                            this.state.selectedIndex===index ?\n                                                <ListGroup.Item onClick={() => this.onCategoryClick(index)} active>\n                                                    <div className={'row'}>\n                                                        <p className={'col'}>{category.name} / {category.nameAr}</p>\n                                                        <Button variant=\"danger\"\n                                                                onClick={() => this.removeCategory(index)}>Remove</Button>\n                                                    </div>\n                                                </ListGroup.Item>\n                                            :   <ListGroup.Item onClick={() => this.onCategoryClick(index)} >\n                                                    <div className={'row'}>\n                                                        <p className={'col'}>{category.name} / {category.nameAr}</p>\n                                                        <Button variant=\"danger\"\n                                                                onClick={() => this.removeCategory(index)}>Remove</Button>\n                                                    </div>\n                                                </ListGroup.Item>\n\n                                        )\n                                    }) :\n                                    <ListGroup.Item>\n                                        <p className={'col'}>No categories yet</p>\n                                    </ListGroup.Item>\n                                }\n\n\n                            </ListGroup>\n                        </Form.Group>\n                        <Form.Group>\n                            <ListGroup>\n\n                                {this.state.categories.length > 0 && this.state.categories[this.state.selectedIndex].subCategories.length > 0 ? this.state.categories.subCategories.map((category, index) => {\n                                        return (\n                                            <ListGroup.Item>\n                                                <div className={'row'}>\n                                                    <p className={'col'}>{category.name} / {category.nameAr}</p>\n                                                    <Button variant=\"danger\"\n                                                            onClick={() => this.removeSubCategory(index)}>Remove</Button>\n                                                </div>\n                                            </ListGroup.Item>\n                                        )\n                                    }) :\n                                    <ListGroup.Item>\n                                        <p className={'col'}>No Sub Categories yet</p>\n                                    </ListGroup.Item>\n                                }\n\n\n                            </ListGroup>\n                        </Form.Group>\n                    </Form.Row>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}