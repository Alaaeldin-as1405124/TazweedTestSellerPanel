{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/src/components/AddTimeSlot.js\";\nimport React, { Component } from 'react';\nimport baseService from \"../services/baseService\";\nimport { Button, Form, ListGroup } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass AddTimeSlot extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timeSlots: [],\n      startTime: '',\n      endTime: ''\n    };\n\n    this.getTimeSlots = () => {\n      baseService.getTimeSlots().then(timeSlots => {\n        console.log('timeslots from the server ', timeSlots);\n        this.setState({\n          timeSlots\n        });\n      });\n    };\n\n    this.onChange = (key, e) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    };\n\n    this.addTime = () => {\n      let timeSlots = [...this.state.timeSlots];\n      timeSlots.push({\n        startTime: this.state.startTime,\n        endTime: this.state.endTime\n      });\n      baseService.addTimeSlot(timeSlots).then(responnse => {\n        this.getTimeSlots();\n      }).catch(err => console.log(err));\n    };\n\n    this.removeTimeSlot = index => {\n      let timeSlots = [...this.state.timeSlots];\n      timeSlots.splice(index, 1);\n      baseService.deleteTimeSlot(timeSlots).then(response => {\n        this.getTimeSlots(); //update the current state after changing to the database\n      }).catch(err => console.log(err)); //this.setState({timeSlots});\n    };\n  }\n\n  componentWillMount() {\n    this.getTimeSlots();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add time slot\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \" the current day is starting  from \", this.state.startTime, \" : \", this.state.endTime), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"From\"), React.createElement(Form.Control, {\n      type: \"time\",\n      placeholder: \"enter start time\",\n      onChange: e => this.onChange('startTime', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"To\"), React.createElement(Form.Control, {\n      type: \"time\",\n      placeholder: \"enter ending time\",\n      onChange: e => this.onChange('endTime', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.addTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Add\"))), this.state.timeSlots.map((singleTimeSlot, index) => {\n      return React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, singleTimeSlot.startTime, \":\", singleTimeSlot.endTime), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeTimeSlot(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Remove\")));\n    }));\n  }\n\n}\n\nexport default AddTimeSlot;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/src/components/AddTimeSlot.js"],"names":["React","Component","baseService","Button","Form","ListGroup","FontAwesomeIcon","AddTimeSlot","state","timeSlots","startTime","endTime","getTimeSlots","then","console","log","setState","onChange","key","e","target","value","addTime","push","addTimeSlot","responnse","catch","err","removeTimeSlot","index","splice","deleteTimeSlot","response","componentWillMount","render","map","singleTimeSlot"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport baseService from \"../services/baseService\";\nimport {Button, Form, ListGroup} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nclass AddTimeSlot extends Component {\n    state = {\n        timeSlots: [],\n        startTime: '',\n        endTime: ''\n    };\n\n    componentWillMount() {\n       this.getTimeSlots();\n    }\n\n    getTimeSlots = () =>{\n        baseService.getTimeSlots().then((timeSlots) => {\n            console.log('timeslots from the server ',timeSlots)\n            this.setState({timeSlots})\n        })\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n\n    addTime = () =>{\n        let timeSlots = [...this.state.timeSlots];\n        timeSlots.push({\n            startTime:this.state.startTime,\n            endTime:this.state.endTime\n        })\n        baseService.addTimeSlot(timeSlots).then((responnse)=>{\n            this.getTimeSlots();\n        }).catch((err)=>console.log(err));\n\n    }\n    removeTimeSlot = (index)=>{\n        let timeSlots = [...this.state.timeSlots];\n        timeSlots.splice(index,1);\n        baseService.deleteTimeSlot(timeSlots).then((response)=>{\n            this.getTimeSlots();//update the current state after changing to the database\n        }).catch((err)=>console.log(err));\n\n        //this.setState({timeSlots});\n    }\n    render() {\n        return (\n            <div>\n                <h2>Add time slot</h2>\n                <h5> the current day is starting  from {this.state.startTime} : {this.state.endTime}</h5>\n                <Form>\n                    <Form.Row>\n                        <Form.Group controlId=\"formGroupEmail\">\n                            <Form.Label>From</Form.Label>\n                            <Form.Control type=\"time\" placeholder=\"enter start time\" onChange={(e)=>this.onChange('startTime',e)}/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formGroupEmail\">\n                            <Form.Label>To</Form.Label>\n                            <Form.Control type=\"time\" placeholder=\"enter ending time\" onChange={(e)=>this.onChange('endTime',e)}/>\n                        </Form.Group>\n\n\n                        <Button variant=\"success\" onClick={this.addTime}>Add</Button>\n                    </Form.Row>\n                </Form>\n\n                {this.state.timeSlots.map((singleTimeSlot,index)=>{\n                    return(\n\n                    <ListGroup.Item>\n                        <div className={'row'}>\n                            <p>{singleTimeSlot.startTime}:{singleTimeSlot.endTime}</p>\n                            <Button variant=\"danger\"\n                                    onClick={() => this.removeTimeSlot(index)}>Remove</Button>\n                        </div>\n                    </ListGroup.Item>\n\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default AddTimeSlot;\n\n"]},"metadata":{},"sourceType":"module"}