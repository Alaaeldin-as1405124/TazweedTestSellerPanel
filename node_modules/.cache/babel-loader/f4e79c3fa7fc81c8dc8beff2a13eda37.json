{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/AddSubCategory.js\";\nimport React, { Component } from 'react';\nimport { Button, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\nimport MediaSingle from \"./MediaSingle\";\n\nclass AddSubCategory extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClose = () => {\n      this.setState({\n        modal: false\n      });\n      if (this.props.handleClose) this.props.handleClose();\n    };\n\n    this.state = {\n      name: '',\n      nameAr: '',\n      icon: '',\n      modal: false,\n      edit: false,\n      title: 'Add',\n      subCategory: {}\n    };\n\n    this.addMediaFile = icon => {\n      this.setState({\n        icon\n      });\n      console.log(icon);\n    };\n\n    this.onChange = (key, e) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    };\n\n    this.addSubCategory = () => {\n      if (this.state.name === '' || this.state.nameAr === '' || this.state.icon === '') {\n        alert('please fill all fields');\n        return;\n      }\n\n      if (this.state.edit) {\n        let subCategory = this.state.subCategory;\n        subCategory.name = this.state.name;\n        subCategory.nameAr = this.state.nameAr;\n        subCategory.icon = this.state.icon;\n        this.props.editSubCategory(subCategory);\n      } else {\n        this.props.addSubCategory({\n          name: this.state.name,\n          nameAr: this.state.nameAr,\n          icon: this.state.icon\n        });\n      }\n\n      this.setState({\n        name: '',\n        nameAr: '',\n        icon: '',\n        edit: false,\n        title: 'Add',\n        subCategory: {}\n      });\n      this.handleClose();\n    };\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    //console.log(\"i;m recving \",nextProps)\n    if (this.state.modal !== nextProps.modal) this.setState({\n      modal: nextProps.modal\n    });\n\n    if (nextProps.edit && nextProps.category) {\n      let subCategory = nextProps.category.subCategories[nextProps.subCategoryIndex];\n\n      if (subCategory) {\n        this.setState({\n          subCategory,\n          edit: true,\n          title: 'Edit',\n          name: subCategory.name,\n          nameAr: subCategory.nameAr,\n          icon: subCategory.icon\n        });\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(Container, {\n      class: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.modal,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.title, \" SubCategory\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Name (English)\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Category name\",\n      value: this.state.name,\n      onChange: e => this.onChange('name', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Name (Arabic)\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Category name (Arabic)\",\n      value: this.state.nameAr,\n      onChange: e => this.onChange('nameAr', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"SubCategory Icon\"), React.createElement(MediaSingle, {\n      updateMedia: this.addMediaFile,\n      icon: this.state.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => {\n        this.addSubCategory();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Save Changes\"))));\n  }\n\n}\n\nexport default AddSubCategory;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/AddSubCategory.js"],"names":["React","Component","Button","Col","Container","Form","Modal","Row","MediaSingle","AddSubCategory","handleClose","setState","modal","props","state","name","nameAr","icon","edit","title","subCategory","addMediaFile","console","log","onChange","key","e","target","value","addSubCategory","alert","editSubCategory","componentWillReceiveProps","nextProps","nextContext","category","subCategories","subCategoryIndex","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,GAAhB,EAAqBC,SAArB,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6CC,GAA7C,QAAuD,iBAAvD;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAGnCS,WAHmC,GAGrB,MAAM;AAChB,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAd;AACA,UAAG,KAAKC,KAAL,CAAWH,WAAd,EACI,KAAKG,KAAL,CAAWH,WAAX;AACP,KAPkC;;AAAA,SA8BnCI,KA9BmC,GA8B3B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJL,MAAAA,KAAK,EAAE,KAJH;AAKJM,MAAAA,IAAI,EAAC,KALD;AAMJC,MAAAA,KAAK,EAAC,KANF;AAOJC,MAAAA,WAAW,EAAC;AAPR,KA9B2B;;AAAA,SAyCnCC,YAzCmC,GAyCnBJ,IAAD,IAAU;AACrB,WAAKN,QAAL,CAAc;AAACM,QAAAA;AAAD,OAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACH,KA5CkC;;AAAA,SA8CnCO,QA9CmC,GA8CxB,CAACC,GAAD,EAAMC,CAAN,KAAY;AACnB,WAAKf,QAAL,CAAc;AAAC,SAACc,GAAD,GAAOC,CAAC,CAACC,MAAF,CAASC;AAAjB,OAAd;AACH,KAhDkC;;AAAA,SAkDnCC,cAlDmC,GAkDlB,MAAM;AACnB,UAAI,KAAKf,KAAL,CAAWC,IAAX,KAAoB,EAApB,IAA0B,KAAKD,KAAL,CAAWE,MAAX,KAAsB,EAAhD,IAAsD,KAAKF,KAAL,CAAWG,IAAX,KAAoB,EAA9E,EAAkF;AAC9Ea,QAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;AACH;;AACD,UAAG,KAAKhB,KAAL,CAAWI,IAAd,EAAmB;AACf,YAAIE,WAAW,GAAG,KAAKN,KAAL,CAAWM,WAA7B;AACAA,QAAAA,WAAW,CAACL,IAAZ,GAAmB,KAAKD,KAAL,CAAWC,IAA9B;AACAK,QAAAA,WAAW,CAACJ,MAAZ,GAAqB,KAAKF,KAAL,CAAWE,MAAhC;AACAI,QAAAA,WAAW,CAACH,IAAZ,GAAmB,KAAKH,KAAL,CAAWG,IAA9B;AAEA,aAAKJ,KAAL,CAAWkB,eAAX,CAA2BX,WAA3B;AACH,OAPD,MAQI;AAEA,aAAKP,KAAL,CAAWgB,cAAX,CAA0B;AACtBd,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADK;AAEtBC,UAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAFG;AAGtBC,UAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AAHK,SAA1B;AAKH;;AACD,WAAKN,QAAL,CAAc;AAACI,QAAAA,IAAI,EAAE,EAAP;AAAWC,QAAAA,MAAM,EAAE,EAAnB;AAAuBC,QAAAA,IAAI,EAAE,EAA7B;AAAgCC,QAAAA,IAAI,EAAC,KAArC;AAA2CC,QAAAA,KAAK,EAAC,KAAjD;AAAuDC,QAAAA,WAAW,EAAC;AAAnE,OAAd;AACA,WAAKV,WAAL;AACH,KAzEkC;AAAA;;AASnCsB,EAAAA,yBAAyB,CAACC,SAAD,EAAYC,WAAZ,EAAyB;AAC9C;AACA,QAAI,KAAKpB,KAAL,CAAWF,KAAX,KAAqBqB,SAAS,CAACrB,KAAnC,EACI,KAAKD,QAAL,CAAc;AAACC,MAAAA,KAAK,EAAEqB,SAAS,CAACrB;AAAlB,KAAd;;AACJ,QAAGqB,SAAS,CAACf,IAAV,IAAkBe,SAAS,CAACE,QAA/B,EAAwC;AACpC,UAAIf,WAAW,GAAGa,SAAS,CAACE,QAAV,CAAmBC,aAAnB,CAAiCH,SAAS,CAACI,gBAA3C,CAAlB;;AACA,UAAGjB,WAAH,EAAe;AACX,aAAKT,QAAL,CAAc;AACVS,UAAAA,WADU;AAEVF,UAAAA,IAAI,EAAC,IAFK;AAGVC,UAAAA,KAAK,EAAC,MAHI;AAIVJ,UAAAA,IAAI,EAACK,WAAW,CAACL,IAJP;AAKVC,UAAAA,MAAM,EAACI,WAAW,CAACJ,MALT;AAMVC,UAAAA,IAAI,EAACG,WAAW,CAACH;AANP,SAAd;AASH;AAEJ;AACJ;;AA+CDqB,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWF,KAAxB;AAA+B,MAAA,MAAM,EAAE,KAAKF,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,KAAKI,KAAL,CAAWK,KAAzB,iBADJ,CADJ,EAKI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEZ,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,WAAW,EAAC,eAAtC;AAAsD,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWC,IAAxE;AACc,MAAA,QAAQ,EAAGW,CAAD,IAAO,KAAKF,QAAL,CAAc,MAAd,EAAsBE,CAAtB,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CADJ,EAWI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEnB,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,WAAW,EAAC,wBAAtC;AACc,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWE,MADhC;AAEc,MAAA,QAAQ,EAAGU,CAAD,IAAO,KAAKF,QAAL,CAAc,QAAd,EAAwBE,CAAxB,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CAXJ,EAsBI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAEnB,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,EAAE,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAKI,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAE,KAAKc,YAA/B;AAA6C,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWG,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAtBJ,CADJ,CALJ,EAyCI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAKP,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,MAAM;AACrC,aAAKmB,cAAL;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CAzCJ,CAFJ,CADJ;AA4DH;;AAxIkC;;AA2IvC,eAAepB,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Col, Container, Form, Modal, Row} from \"react-bootstrap\";\nimport MediaSingle from \"./MediaSingle\";\n\nclass AddSubCategory extends Component {\n\n\n    handleClose = () => {\n        this.setState({modal: false});\n        if(this.props.handleClose)\n            this.props.handleClose();\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        //console.log(\"i;m recving \",nextProps)\n        if (this.state.modal !== nextProps.modal)\n            this.setState({modal: nextProps.modal});\n        if(nextProps.edit && nextProps.category){\n            let subCategory = nextProps.category.subCategories[nextProps.subCategoryIndex];\n            if(subCategory){\n                this.setState({\n                    subCategory,\n                    edit:true,\n                    title:'Edit',\n                    name:subCategory.name,\n                    nameAr:subCategory.nameAr,\n                    icon:subCategory.icon,\n\n                })\n            }\n\n        }\n    }\n\n    state = {\n        name: '',\n        nameAr: '',\n        icon: '',\n        modal: false,\n        edit:false,\n        title:'Add',\n        subCategory:{}\n    };\n\n\n    addMediaFile = (icon) => {\n        this.setState({icon});\n        console.log(icon)\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    }\n\n    addSubCategory = () => {\n        if (this.state.name === '' || this.state.nameAr === '' || this.state.icon === '') {\n            alert('please fill all fields');\n            return;\n        }\n        if(this.state.edit){\n            let subCategory = this.state.subCategory;\n            subCategory.name = this.state.name;\n            subCategory.nameAr = this.state.nameAr;\n            subCategory.icon = this.state.icon;\n\n            this.props.editSubCategory(subCategory);\n        }\n        else{\n\n            this.props.addSubCategory({\n                name: this.state.name,\n                nameAr: this.state.nameAr,\n                icon: this.state.icon\n            });\n        }\n        this.setState({name: '', nameAr: '', icon: '',edit:false,title:'Add',subCategory:{}})\n        this.handleClose();\n    };\n\n    render() {\n        return (\n            <Container class>\n\n                <Modal show={this.state.modal} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.state.title} SubCategory</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n                        <Form>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"2\">\n                                    Name (English)\n                                </Form.Label>\n                                <Col>\n                                    <Form.Control type=\"text\" placeholder=\"Category name\" value={this.state.name}\n                                                  onChange={(e) => this.onChange('name', e)}/>\n                                </Col>\n\n                            </Form.Group>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"2\">\n                                    Name (Arabic)\n                                </Form.Label>\n                                <Col>\n                                    <Form.Control type=\"text\" placeholder=\"Category name (Arabic)\"\n                                                  value={this.state.nameAr}\n                                                  onChange={(e) => this.onChange('nameAr', e)}/>\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"2\">\n                                    SubCategory Icon\n                                </Form.Label>\n\n                                <MediaSingle updateMedia={this.addMediaFile} icon={this.state.icon}/>\n\n\n                            </Form.Group>\n\n                        </Form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Cancel\n                        </Button>\n                        <Button variant=\"primary\" onClick={() => {\n                            this.addSubCategory()\n                        }}>\n                            Save Changes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n\n            </Container>\n\n        );\n    }\n}\n\nexport default AddSubCategory;\n"]},"metadata":{},"sourceType":"module"}