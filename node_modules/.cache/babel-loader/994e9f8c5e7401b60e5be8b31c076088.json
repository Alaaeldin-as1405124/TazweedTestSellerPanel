{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/Media.js\";\nimport React, { Component } from 'react';\nimport { Tabs, Tab, ListGroup, Button, Form, Col, FormControl } from 'react-bootstrap';\nimport FormData from 'form-data';\n\nclass Media extends Component {\n  constructor(props) {\n    super(props);\n\n    this._handleImageChange = async e => {\n      e.preventDefault(); //reset the chosen photos\n      //this.setState({files:[],imageUrls:[]})\n\n      let files = Array.from(e.target.files); //console.log(files)\n\n      files.map((file, index) => {\n        console.log(file, 'inside loop');\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onloadend = () => {\n          let files = [...this.state.files];\n          file.blob = reader.result;\n          files.push(file);\n          this.setState({\n            files: files\n          });\n        };\n      });\n      const formData = new FormData();\n      formData.append('file', e.target.files);\n      let response = await fetch('http://localhost:1111/api/uploadMulti', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Authorization': \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoyLCJyZWdEYXRlIjoiV2VkIE9jdCAwMiAyMDE5IDEzOjQ1OjA3IEdNVCswMzAwIChBcmFiaWFuIFN0YW5kYXJkIFRpbWUpIiwiaXNWYWxpZCI6dHJ1ZSwiX2lkIjoiNWQ5NDgyMDNlYmQ1ZTg0M2I4NTU5NDI5IiwiZW1haWwiOiJhbGFhIiwibmFtZSI6ImFsYWEiLCJfX3YiOjAsImlhdCI6MTU3MDAxMzc2N30.LB-CBu-kOlPQwJjoyVwhuFP9lYxBWhffh-479W1emX8\"\n        }\n      });\n\n      if (response.ok) {\n        try {\n          let file = await response.json();\n          console.log(\"files are \", file); //this.setState({files:file.link});\n          //this.props.updateMedia(file.link);\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        console.log('response not ok ', response);\n      }\n    };\n\n    this.removeImageFile = index => {\n      let files = [...this.state.files];\n      let imageUrls = [...this.state.imageUrls];\n      files.splice(index, 1);\n      imageUrls.splice(index, 1);\n      this.setState({\n        files,\n        imageUrls\n      });\n    };\n\n    this.removeVideo = index => {\n      let videoUrls = [...this.state.videoUrls];\n      videoUrls.splice(index, 1);\n      this.setState({\n        videoUrls\n      });\n    };\n\n    this.addVideo = () => {\n      //check video type and send it to the server\n      if (this.state.externalVideoLink !== '') {\n        //check if it's a valid link\n        let link = this.state.externalVideoLink.toString().toLowerCase();\n\n        if (!link.includes('mp4') || !link.includes('youtube') || !link.includes('www.')) {\n          alert('invalid video url (Accepting MP4 or Youtube link');\n          return;\n        }\n\n        alert('video added');\n        this.setState({\n          externalVideoLink: ''\n        });\n      } else alert('Please fill video link first');\n    };\n\n    this.onChange = (key, e) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    };\n\n    this.state = {\n      files: [],\n      imageUrls: [],\n      videoUrls: [],\n      type: 'image',\n      externalVideoLink: ''\n    };\n    this._handleImageChange = this._handleImageChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Media\")), React.createElement(Tabs, {\n      id: \"controlled-tab-example\",\n      activeKey: this.state.type,\n      onSelect: k => this.setState({\n        type: k\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"image\",\n      title: \"Images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this._handleImageChange,\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), this.state.files && this.state.files.map((file, index) => {\n      console.log('file type: ', file.type);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, file.type.includes('video') && React.createElement(\"video\", {\n        width: \"400\",\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: file.blob,\n        type: file.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), \"Your browser does not support HTML5 video.\"), file.type.includes('image') && React.createElement(\"img\", {\n        style: {\n          width: 100,\n          height: 100,\n          padding: 5\n        },\n        src: file.blob,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeImageFile(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Remove\"))));\n    })), React.createElement(Tab, {\n      eventKey: \"video\",\n      title: \"Videos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Add video\"), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Video Link (Youtube or external link) MP4\",\n      onChange: e => this.onChange('externalVideoLink', e),\n      value: this.state.externalVideoLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      className: 'center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"badge-info col-6\",\n      onClick: () => this.addVideo(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), \" Add\")))), this.state.videoUrls && this.state.videoUrls.map((url, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          width: 100,\n          height: 100,\n          padding: 5\n        },\n        src: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeVideo(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Remove\"))));\n    }))));\n  }\n\n}\n\nexport default Media;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/Media.js"],"names":["React","Component","Tabs","Tab","ListGroup","Button","Form","Col","FormControl","FormData","Media","constructor","props","_handleImageChange","e","preventDefault","files","Array","from","target","map","file","index","console","log","reader","FileReader","readAsDataURL","onloadend","state","blob","result","push","setState","formData","append","response","fetch","method","body","headers","ok","json","removeImageFile","imageUrls","splice","removeVideo","videoUrls","addVideo","externalVideoLink","link","toString","toLowerCase","includes","alert","onChange","key","value","type","bind","render","k","width","height","padding","url"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Tabs, Tab, ListGroup, Button, Form, Col, FormControl} from 'react-bootstrap'\nimport FormData from 'form-data';\n\nclass Media extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n            imageUrls: [],\n            videoUrls: [],\n            type: 'image',\n            externalVideoLink:'',\n        };\n        this._handleImageChange = this._handleImageChange.bind(this);\n    }\n\n\n\n    _handleImageChange = async (e)=> {\n        e.preventDefault();\n        //reset the chosen photos\n        //this.setState({files:[],imageUrls:[]})\n\n\n        let files = Array.from(e.target.files);\n\n\n        //console.log(files)\n        files.map((file, index) => {\n            console.log(file, 'inside loop')\n            let reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onloadend = () => {\n                let files = [...this.state.files];\n                file.blob = reader.result;\n                files.push(file);\n                this.setState({\n                    files: files\n                });\n\n            }\n        });\n\n        const formData = new FormData();\n        formData.append('file', e.target.files)\n        let response = await fetch('http://localhost:1111/api/uploadMulti', {\n            method: 'POST',\n            body: formData,\n            headers: {\n                'Authorization': \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoyLCJyZWdEYXRlIjoiV2VkIE9jdCAwMiAyMDE5IDEzOjQ1OjA3IEdNVCswMzAwIChBcmFiaWFuIFN0YW5kYXJkIFRpbWUpIiwiaXNWYWxpZCI6dHJ1ZSwiX2lkIjoiNWQ5NDgyMDNlYmQ1ZTg0M2I4NTU5NDI5IiwiZW1haWwiOiJhbGFhIiwibmFtZSI6ImFsYWEiLCJfX3YiOjAsImlhdCI6MTU3MDAxMzc2N30.LB-CBu-kOlPQwJjoyVwhuFP9lYxBWhffh-479W1emX8\"\n            },\n        });\n        if (response.ok){\n\n            try{\n\n                let file = await response.json();\n                console.log(\"files are \",file);\n                //this.setState({files:file.link});\n                //this.props.updateMedia(file.link);\n            }catch (e) {\n                console.log(e)\n            }\n        }\n        else{\n            console.log('response not ok ',response)\n        }\n\n\n    }\n\n    removeImageFile = (index) => {\n        let files = [...this.state.files];\n        let imageUrls = [...this.state.imageUrls];\n        files.splice(index, 1);\n        imageUrls.splice(index, 1);\n        this.setState({files, imageUrls})\n    };\n    removeVideo = (index) => {\n        let videoUrls = [...this.state.videoUrls];\n        videoUrls.splice(index, 1);\n        this.setState({videoUrls})\n    };\n\n    addVideo = () => {\n        //check video type and send it to the server\n        if(this.state.externalVideoLink !==''){\n            //check if it's a valid link\n            let link = this.state.externalVideoLink.toString().toLowerCase();\n            if(!link.includes('mp4') || !link.includes('youtube') || !link.includes('www.')){\n                alert('invalid video url (Accepting MP4 or Youtube link');\n                return;\n            }\n            alert('video added');\n            this.setState({externalVideoLink:''})\n        }\n        else\n            alert('Please fill video link first')\n    }\n\n    onChange = (key,e)=>{\n        this.setState({[key]:e.target.value})\n    }\n    render() {\n\n\n        return (\n            <div>\n                <div>\n                    <h2>Media</h2>\n                </div>\n\n                <Tabs id=\"controlled-tab-example\" activeKey={this.state.type} onSelect={k => this.setState({type: k})}>\n                    <Tab eventKey=\"image\" title=\"Images\">\n                        <form >\n                            <input type=\"file\" onChange={this._handleImageChange} multiple/>\n                        </form>\n                        {this.state.files && this.state.files.map((file, index) => {\n                            console.log('file type: ', file.type)\n                            return (\n                                <div>\n                                    <ListGroup.Item>\n                                        <div className={'row'}>\n                                            <div className={'col'}>\n                                                {file.type.includes('video') &&\n                                                <video width=\"400\" controls>\n                                                    <source\n                                                        src={file.blob}\n                                                        type={file.type}\n                                                    />\n                                                    Your browser does not support HTML5 video.\n                                                </video>\n                                                }\n                                                {file.type.includes('image') &&\n                                                <img style={{width: 100, height: 100, padding: 5}} src={file.blob}/>}\n\n                                            </div>\n                                            <Button variant=\"danger\"\n                                                    onClick={() => this.removeImageFile(index)}>Remove</Button>\n                                        </div>\n                                    </ListGroup.Item>\n                                </div>)\n\n                        })}\n                    </Tab>\n                    <Tab eventKey=\"video\" title=\"Videos\">\n\n                        <Form.Group>\n                            <Form.Label>\n                                Add video\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"text\" placeholder=\"Video Link (Youtube or external link) MP4\"\n                                                  onChange={(e)=>this.onChange('externalVideoLink',e)}\n                                                  value={this.state.externalVideoLink}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addVideo()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                        </Form.Group>\n\n                        {this.state.videoUrls && this.state.videoUrls.map((url, index) => {\n                            return (\n                                <div>\n                                    <ListGroup.Item>\n                                        <div className={'row'}>\n                                            <div className={'col'}>\n\n                                                <img style={{width: 100, height: 100, padding: 5}} src={url}/>\n                                            </div>\n                                            <Button variant=\"danger\"\n                                                    onClick={() => this.removeVideo(index)}>Remove</Button>\n                                        </div>\n                                    </ListGroup.Item>\n                                </div>)\n                        })}\n                    </Tab>\n\n                </Tabs>\n\n\n            </div>\n        )\n    }\n\n\n}\n\nexport default Media;\n"]},"metadata":{},"sourceType":"module"}