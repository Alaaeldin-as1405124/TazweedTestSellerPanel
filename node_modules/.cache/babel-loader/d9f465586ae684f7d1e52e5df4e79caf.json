{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/PlaceLocationSelections.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Row, Col, ListGroup, Alert, Modal, Container, FormControl } from 'react-bootstrap';\nimport { useState, useEffect, useRef } from 'react';\nimport Media from \"./Media\";\nimport SocialMedia from \"./SocialMedia\";\nimport baseService from \"../services/baseService\";\nimport DragableList from \"../customComponents/DragableList\";\nimport SubScriptionControl from \"./SubScriptionControl\";\nimport MapView from \"../customComponents/MapView\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass PlaceLocationSelections extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categories: [],\n      locations: [],\n      selectedLocationId: 0,\n      selectedCategoryId: 0,\n      selectedSubCategoryId: 0,\n      selectedLocationIndex: 0,\n      selectedCategoryIndex: 0,\n      selectedSubCategoryIndex: 0\n    };\n\n    this.checkProps = props => {\n      if (props && props.locations) {}\n    };\n  }\n\n  componentWillMount() {\n    this.checkProps(this.props);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    this.checkProps(nextProps);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Please choose location\"), React.createElement(FormControl, {\n      as: 'select',\n      onChange: this.onLocationChange,\n      value: this.state.selectedLocationIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.locations.map((location, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        value: this.state.selectedLocationIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, location.name, \" / \", location.nameAr);\n    }))), React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Please choose Category\"), React.createElement(FormControl, {\n      as: 'select',\n      onChange: this.onCategoryChange,\n      value: this.state.selectedCategoryIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.locations[this.state.selectedLocationIndex] && this.state.locations[this.state.selectedLocationIndex].categories.map((category, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        value: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, category.name, \" / \", category.nameAr);\n    }))), React.createElement(Form.Group, {\n      as: Col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Choose SubCategory\"), React.createElement(FormControl, {\n      as: 'select',\n      onChange: this.onSubCategoryChange,\n      value: this.state.selectedSubCategoryIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.locations[this.state.selectedLocationIndex] && this.state.locations[this.state.selectedLocationIndex].categories[this.state.selectedCategoryIndex].subCategories.map((category, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        value: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, category.name, \" / \", category.nameAr);\n    }))))));\n  }\n\n}\n\nexport default PlaceLocationSelections;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/PlaceLocationSelections.js"],"names":["React","Component","Form","Button","Row","Col","ListGroup","Alert","Modal","Container","FormControl","useState","useEffect","useRef","Media","SocialMedia","baseService","DragableList","SubScriptionControl","MapView","confirmAlert","PlaceLocationSelections","state","categories","locations","selectedLocationId","selectedCategoryId","selectedSubCategoryId","selectedLocationIndex","selectedCategoryIndex","selectedSubCategoryIndex","checkProps","props","componentWillMount","componentWillReceiveProps","nextProps","nextContext","render","onLocationChange","map","location","index","name","nameAr","onCategoryChange","category","onSubCategoryChange","subCategories"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button, Row, Col, ListGroup, Alert, Modal, Container, FormControl} from 'react-bootstrap'\nimport {useState, useEffect, useRef} from 'react'\nimport Media from \"./Media\";\nimport SocialMedia from \"./SocialMedia\";\nimport baseService from \"../services/baseService\";\nimport DragableList from \"../customComponents/DragableList\";\nimport SubScriptionControl from \"./SubScriptionControl\";\nimport MapView from \"../customComponents/MapView\";\nimport {confirmAlert} from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass PlaceLocationSelections extends Component {\n    state = {\n        categories: [],\n        locations: [],\n        selectedLocationId: 0,\n        selectedCategoryId: 0,\n        selectedSubCategoryId: 0,\n        selectedLocationIndex: 0,\n        selectedCategoryIndex: 0,\n        selectedSubCategoryIndex: 0,\n\n\n    };\n\n    checkProps = (props) => {\n        if(props && props.locations){\n\n        }\n    };\n\n    componentWillMount() {\n        this.checkProps(this.props);\n\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n            this.checkProps(nextProps);\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Form.Group>\n\n                    <Form.Row>\n                        <Form.Group as={Col}>\n\n                            <Form.Label>\n                                Please choose location\n                            </Form.Label>\n                            <FormControl as={'select'} onChange={this.onLocationChange}\n                                         value={this.state.selectedLocationIndex}>\n                                {this.state.locations.map((location, index) => {\n                                    return (\n                                        <option key={index}\n                                                value={this.state.selectedLocationIndex}>{location.name} / {location.nameAr}</option>\n                                    )\n                                })}\n                            </FormControl>\n                        </Form.Group>\n\n                        <Form.Group as={Col}>\n\n                            <Form.Label>\n                                Please choose Category\n                            </Form.Label>\n                            <FormControl as={'select'}\n                                         onChange={this.onCategoryChange}\n                                         value={this.state.selectedCategoryIndex}\n                            >\n                                {this.state.locations[this.state.selectedLocationIndex] &&\n                                this.state.locations[this.state.selectedLocationIndex].categories.map((category, index) => {\n                                    return (\n                                        <option key={index}\n                                                value={index}>{category.name} / {category.nameAr}</option>\n                                    )\n                                })}\n                            </FormControl>\n                        </Form.Group>\n\n                        <Form.Group as={Col}>\n\n                            <Form.Label>\n                                Choose SubCategory\n                            </Form.Label>\n                            <FormControl as={'select'}\n                                         onChange={this.onSubCategoryChange}\n                                         value={this.state.selectedSubCategoryIndex}\n                            >\n                                {this.state.locations[this.state.selectedLocationIndex] &&\n                                this.state.locations[this.state.selectedLocationIndex].categories[this.state.selectedCategoryIndex].subCategories.map((category, index) => {\n                                    return (\n                                        <option key={index} value={index}>{category.name} / {category.nameAr}</option>\n                                    )\n                                })}\n                            </FormControl>\n                        </Form.Group>\n\n\n                    </Form.Row>\n                </Form.Group>\n\n            </div>\n        );\n    }\n}\n\nexport default PlaceLocationSelections;\n"]},"metadata":{},"sourceType":"module"}