{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/AddCategory.js\";\nimport React, { Component } from 'react';\nimport { Button, Col, Container, Form, FormControl, ListGroup, Modal, Row } from \"react-bootstrap\";\nimport Media from \"./Media\";\nimport MediaSingle from \"./MediaSingle\";\nimport AddSubCategory from \"./AddSubCategory\";\n\nclass AddCategory extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      subCategories: [],\n      name: '',\n      nameAr: '',\n      icon: '',\n      modal: false,\n      subCategoryModal: false\n    };\n\n    this.handleClose = () => this.setState({\n      modal: false,\n      subCategoryModal: false\n    });\n\n    this.addSubCategory = category => {\n      let subCategories = [...this.state.subCategories];\n      subCategories.push(category); //consider validations\n\n      this.setState({\n        subCategories,\n        modal: false\n      });\n    };\n\n    this.addMediaFile = icon => {\n      this.setState({\n        icon\n      }); //console.log(icon)\n    };\n\n    this.onChange = (key, e) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    };\n\n    this.addCategory = () => {\n      if (this.state.name === '' || this.state.nameAr === '' || this.state.icon === '' || this.state.subCategories.length === 0) {\n        alert('please fill all fields');\n        return;\n      }\n\n      this.props.addCategory({\n        name: this.state.name,\n        nameAr: this.state.nameAr,\n        icon: this.state.icon,\n        subCategories: this.state.subCategories\n      });\n      this.setState({\n        name: '',\n        nameAr: '',\n        icon: '',\n        subCategories: []\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (this.state.modal !== nextProps.modal) this.setState({\n      modal: nextProps.modal\n    });\n  }\n\n  render() {\n    console.log(\"sub category modal\", this.state.subCategoryModal);\n    return React.createElement(Container, {\n      class: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.modal,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Add SubCategory\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Add Category\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Name (English)\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Category name\",\n      value: this.state.name,\n      onChange: e => this.onChange('name', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Name (Arabic)\"), React.createElement(Col, {\n      sm: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Category name (Arabic)\",\n      value: this.state.nameAr,\n      onChange: e => this.onChange('nameAr', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Category Icon\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(MediaSingle, {\n      updateMedia: this.addMediaFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      className: 'col',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"badge-info col\",\n      onClick: () => this.setState({\n        subCategoryModal: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \" Add SubCategory\")), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.subCategories.length !== 0 ? this.state.subCategories.map((category, index) => {\n      return React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          width: 64,\n          height: 64,\n          padding: 5\n        },\n        src: category.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, category.name, \" / \", category.nameAr), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.removeSubCategory(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Remove\")));\n    }) : React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: 'col',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"No Subcategories yet\"))), React.createElement(AddSubCategory, {\n      modal: this.state.subCategoryModal,\n      addSubCategory: this.addSubCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => {\n        this.addCategory();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Save Changes\"))));\n  }\n\n}\n\nexport default AddCategory;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/gateofegyptadmin/src/components/AddCategory.js"],"names":["React","Component","Button","Col","Container","Form","FormControl","ListGroup","Modal","Row","Media","MediaSingle","AddSubCategory","AddCategory","state","subCategories","name","nameAr","icon","modal","subCategoryModal","handleClose","setState","addSubCategory","category","push","addMediaFile","onChange","key","e","target","value","addCategory","length","alert","props","componentWillReceiveProps","nextProps","nextContext","render","console","log","map","index","width","height","padding","removeSubCategory"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Col, Container, Form, FormControl, ListGroup, Modal, Row} from \"react-bootstrap\";\nimport Media from \"./Media\";\nimport MediaSingle from \"./MediaSingle\";\nimport AddSubCategory from \"./AddSubCategory\";\n\nclass AddCategory extends Component {\n\n    state = {\n        subCategories: [],\n        name: '',\n        nameAr: '',\n        icon: '',\n        modal: false,\n        subCategoryModal:false,\n\n    };\n\n    handleClose = () => this.setState({modal: false,subCategoryModal:false});\n\n    addSubCategory = (category) => {\n        let subCategories = [...this.state.subCategories];\n        subCategories.push(category);//consider validations\n        this.setState({subCategories, modal: false});\n    }\n\n    addMediaFile = (icon) => {\n        this.setState({icon});\n        //console.log(icon)\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n\n    addCategory = () => {\n        if (this.state.name === '' || this.state.nameAr === '' || this.state.icon === '' || this.state.subCategories.length === 0) {\n            alert('please fill all fields');\n            return;\n        }\n        this.props.addCategory({\n            name: this.state.name,\n            nameAr: this.state.nameAr,\n            icon: this.state.icon,\n            subCategories: this.state.subCategories\n        });\n        this.setState({name: '', nameAr: '', icon: '', subCategories: []})\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (this.state.modal !== nextProps.modal)\n            this.setState({modal: nextProps.modal});\n\n    }\n\n    render() {\n        console.log(\"sub category modal\",this.state.subCategoryModal)\n        return (\n            <Container class>\n                <Modal show={this.state.modal} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Add SubCategory</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n                        <h2>Add Category</h2>\n\n\n                        <Form>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"2\">\n                                    Name (English)\n                                </Form.Label>\n                                <Col sm=\"4\">\n                                    <Form.Control type=\"text\" placeholder=\"Category name\"\n                                                  value={this.state.name}\n                                                  onChange={(e) => this.onChange('name', e)}/>\n                                </Col>\n                                <Form.Label column sm=\"2\">\n                                    Name (Arabic)\n                                </Form.Label>\n                                <Col sm=\"4\">\n                                    <Form.Control type=\"text\" placeholder=\"Category name (Arabic)\"\n                                                  value={this.state.nameAr}\n                                                  onChange={(e) => this.onChange('nameAr', e)}/>\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"2\">\n                                    Category Icon\n                                </Form.Label>\n                                <Col>\n                                    <MediaSingle updateMedia={this.addMediaFile}/>\n                                </Col>\n\n                            </Form.Group>\n\n\n                            <Form.Group as={Row} className={'col'}>\n                                <Button className=\"badge-info col\" onClick={() => this.setState({subCategoryModal: true})}><i\n                                    className=\"fa fa-plus\"/> Add SubCategory</Button>\n                            </Form.Group>\n\n                            <ListGroup>\n\n\n                                {this.state.subCategories.length !== 0 ? this.state.subCategories.map((category, index) => {\n                                        return (\n                                            <ListGroup.Item>\n                                                <div className={'row'}>\n                                                    <img style={{width: 64, height: 64, padding: 5}} src={category.icon}/>\n                                                    <p className={'col'}>{category.name} / {category.nameAr}</p>\n                                                    <Button variant=\"danger\"\n                                                            onClick={() => this.removeSubCategory(index)}>Remove</Button>\n                                                </div>\n                                            </ListGroup.Item>\n                                        )\n                                    }) :\n                                    <ListGroup.Item>\n                                        <p className={'col'}>No Subcategories yet</p>\n                                    </ListGroup.Item>\n                                }\n\n\n                            </ListGroup>\n\n                            <AddSubCategory modal={this.state.subCategoryModal} addSubCategory={this.addSubCategory}/>\n\n                        </Form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Cancel\n                        </Button>\n                        <Button variant=\"primary\" onClick={() => {\n                            this.addCategory()\n                        }}>\n                            Save Changes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </Container>\n\n        );\n    }\n}\n\nexport default AddCategory;\n"]},"metadata":{},"sourceType":"module"}