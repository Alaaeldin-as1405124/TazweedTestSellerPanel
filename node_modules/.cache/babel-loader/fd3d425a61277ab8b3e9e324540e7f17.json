{"ast":null,"code":"var _jsxFileName = \"/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/src/components/Appointments.js\";\nimport React, { Component } from 'react';\nimport { Table } from \"react-bootstrap\";\nimport baseService from \"../services/baseService\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\n\nclass Appointments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      appointments: [],\n      appointmentsFiltered: [],\n      show: false,\n      selectedAppointment: {},\n      tab: 'Pending'\n    };\n\n    this.eventClicked = e => {\n      alert(e);\n    };\n\n    this.close = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.updateAppointmentStatus = async status => {\n      let newAppointment = this.state.selectedAppointment;\n      newAppointment.status = status;\n      await baseService.updateAppointment(newAppointment);\n    };\n\n    this.accept = () => {\n      this.updateAppointmentStatus('Accepted');\n      this.close();\n    };\n\n    this.reject = () => {\n      this.updateAppointmentStatus('Rejected');\n      this.close();\n    };\n\n    this.timeConvert = time => {\n      //expecting array of 2 times\n      let newTime = time.split(' to ');\n      newTime.map((singleTime, index) => {\n        // Check correct time format and split into components\n        singleTime = singleTime.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n        if (singleTime.length > 1) {\n          // If time format correct\n          singleTime = singleTime.slice(1); // Remove full string match value\n\n          singleTime[5] = +singleTime[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n\n          singleTime[0] = +singleTime[0] % 12 || 12; // Adjust hours\n        }\n\n        newTime[index] = singleTime.join('');\n        if (index === 0) newTime[index] += \" to \";\n      }); //apply (to) string\n\n      return newTime; // return adjusted time or original string\n    };\n\n    this.filter = filterCondition => {\n      let appoinntments = [...this.state.appointments];\n      appoinntments = appoinntments.filter(singleAppointment => {\n        if (filterCondition === \"Pending\") return singleAppointment.status = filterCondition;else if (filterCondition === \"Coming\") return true;else if (filterCondition === \"Passed\") return true;\n      });\n      this.setState({\n        appoinntmentsFiltered: appoinntments\n      });\n    };\n\n    this.renderAppointments = () => {};\n  }\n\n  componentWillMount() {\n    baseService.getAppointments().then(response => {\n      this.setState({\n        appointments: response,\n        appointmentsFiltered: response\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Appointments\"), React.createElement(Tabs, {\n      id: \"controlled-tab-example\",\n      activeKey: this.state.tab,\n      onSelect: k => this.setState({\n        tab: k\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      eventKey: \"Pending\",\n      title: \"Pending Appointments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.filter('Pending'), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Request Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Appointment Time\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Appointment Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.appointmentsFiltered.length > 0 ? this.state.appointmentsFiltered.map((singleAppointment, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, index + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, singleAppointment.clientId.username), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, singleAppointment.requestDate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.timeConvert(singleAppointment.time)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, singleAppointment.appointmentDate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, singleAppointment.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"\",\n        onClick: e => {\n          e.preventDefault();\n          this.setState({\n            selectedAppointment: singleAppointment,\n            show: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Take Action\")));\n    }) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \" \", React.createElement(\"td\", {\n      colSpan: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"there is no appointments yet\")))))), React.createElement(Tab, {\n      eventKey: \"Coming\",\n      title: \"Coming Appointments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.filter('Coming'), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Request Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Appointment Time\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Appointment Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.appointmentsFiltered.length > 0 ? this.state.appointmentsFiltered.map((singleAppointment, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, index + 1), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, singleAppointment.clientId.username), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, singleAppointment.requestDate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, this.timeConvert(singleAppointment.time)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, singleAppointment.appointmentDate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, singleAppointment.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"\",\n        onClick: e => {\n          e.preventDefault();\n          this.setState({\n            selectedAppointment: singleAppointment,\n            show: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Take Action\")));\n    }) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" \", React.createElement(\"td\", {\n      colSpan: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"there is no appointments yet\")))))), React.createElement(Tab, {\n      eventKey: \"Past\",\n      title: \"Past Appointments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.filter('Passed'))), React.createElement(ConfirmationModal, {\n      show: this.state.show,\n      close: this.close,\n      accept: this.accept,\n      reject: this.reject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Appointments;","map":{"version":3,"sources":["/Users/alaaeldin/Documents/GitHub/TazweedTestSellerPanel/src/components/Appointments.js"],"names":["React","Component","Table","baseService","ConfirmationModal","Tab","Tabs","Appointments","state","appointments","appointmentsFiltered","show","selectedAppointment","tab","eventClicked","e","alert","close","setState","updateAppointmentStatus","status","newAppointment","updateAppointment","accept","reject","timeConvert","time","newTime","split","map","singleTime","index","toString","match","length","slice","join","filter","filterCondition","appoinntments","singleAppointment","appoinntmentsFiltered","renderAppointments","componentWillMount","getAppointments","then","response","catch","err","console","log","render","k","clientId","username","requestDate","appointmentDate","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Table} from \"react-bootstrap\";\nimport baseService from \"../services/baseService\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\n\n\nclass Appointments extends Component {\n\n    state={\n        appointments:[],\n        appointmentsFiltered:[],\n        show:false,\n        selectedAppointment:{},\n        tab:'Pending'\n    };\n    componentWillMount() {\n        baseService.getAppointments().then((response)=>{\n            this.setState({appointments:response,appointmentsFiltered:response})\n        }).catch(err=>console.log(err))\n    }\n\n    eventClicked = (e) =>{\n        alert(e);\n    }\n\n    close = ()=>{\n        this.setState({show:false})\n    };\n    updateAppointmentStatus = async (status) =>{\n        let newAppointment = this.state.selectedAppointment;\n        newAppointment.status = status;\n        await baseService.updateAppointment(newAppointment);\n}\n    accept = () =>{\n        this.updateAppointmentStatus('Accepted')\n        this.close();\n    }\n    reject = () =>{\n        this.updateAppointmentStatus('Rejected')\n        this.close();\n    }\n    timeConvert= (time)=> {\n        //expecting array of 2 times\n        let newTime = time.split(' to ');\n        newTime.map((singleTime,index) =>{\n            // Check correct time format and split into components\n            singleTime = singleTime.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n            if (singleTime.length > 1) { // If time format correct\n                singleTime = singleTime.slice (1);  // Remove full string match value\n                singleTime[5] = +singleTime[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n                singleTime[0] = +singleTime[0] % 12 || 12; // Adjust hours\n            }\n\n            newTime[index]=singleTime.join('');\n            if(index ===0)\n                newTime[index]+=\" to \";\n\n\n        });\n        //apply (to) string\n\n\n        return newTime; // return adjusted time or original string\n    };\n    filter = (filterCondition) =>{\n        let appoinntments = [...this.state.appointments];\n        appoinntments = appoinntments.filter((singleAppointment)=>{\n            if(filterCondition === \"Pending\")\n            return singleAppointment.status = filterCondition;\n            else if(filterCondition === \"Coming\")\n                return true;\n            else if(filterCondition === \"Passed\")\n                return true\n        })\n        this.setState({appoinntmentsFiltered:appoinntments})\n    };\n    renderAppointments = ()=>{\n\n    }\n    render() {\n        return (\n            <div>\n                <h2 >Appointments</h2>\n\n                <Tabs id=\"controlled-tab-example\" activeKey={this.state.tab} onSelect={k => this.setState({tab: k})}>\n                    <Tab eventKey=\"Pending\" title=\"Pending Appointments\">\n                        {this.filter('Pending')}\n                        <Table striped bordered hover>\n                            <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Username</th>\n                                <th>Request Date</th>\n                                <th>Appointment Time</th>\n                                <th>Appointment Date</th>\n                                <th>Status</th>\n                                <th>Actions</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.appointmentsFiltered.length > 0 ? this.state.appointmentsFiltered.map((singleAppointment,index) =>{\n                                return(\n\n                                    <tr key={index}>\n                                        <td>{index+1}</td>\n                                        <td>{singleAppointment.clientId.username}</td>\n                                        <td>{singleAppointment.requestDate}</td>\n                                        <td>{this.timeConvert(singleAppointment.time)}</td>\n                                        <td>{singleAppointment.appointmentDate}</td>\n                                        <td>{singleAppointment.status}</td>\n                                        <td><a href='' onClick={(e)=> {\n                                            e.preventDefault();\n                                            this.setState({selectedAppointment:singleAppointment,show:true})\n                                        }}>Take Action</a></td>\n                                    </tr>\n                                )\n                            }) :<tr> <td colSpan={7}><center>there is no appointments yet</center></td></tr> }\n                            </tbody>\n                        </Table>\n                    </Tab>\n                    <Tab eventKey=\"Coming\" title=\"Coming Appointments\">\n                        {this.filter('Coming')}\n                        <Table striped bordered hover>\n                            <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Username</th>\n                                <th>Request Date</th>\n                                <th>Appointment Time</th>\n                                <th>Appointment Date</th>\n                                <th>Status</th>\n                                <th>Actions</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.appointmentsFiltered.length > 0 ? this.state.appointmentsFiltered.map((singleAppointment,index) =>{\n                                return(\n\n                                    <tr key={index}>\n                                        <td>{index+1}</td>\n                                        <td>{singleAppointment.clientId.username}</td>\n                                        <td>{singleAppointment.requestDate}</td>\n                                        <td>{this.timeConvert(singleAppointment.time)}</td>\n                                        <td>{singleAppointment.appointmentDate}</td>\n                                        <td>{singleAppointment.status}</td>\n                                        <td><a href='' onClick={(e)=> {\n                                            e.preventDefault();\n                                            this.setState({selectedAppointment:singleAppointment,show:true})\n                                        }}>Take Action</a></td>\n                                    </tr>\n                                )\n                            }) :<tr> <td colSpan={7}><center>there is no appointments yet</center></td></tr> }\n                            </tbody>\n                        </Table>\n                    </Tab>\n                    <Tab eventKey=\"Past\" title=\"Past Appointments\">\n                        {this.filter('Passed')}\n                    </Tab>\n                </Tabs>\n\n\n                <ConfirmationModal show={this.state.show} close={this.close} accept={this.accept} reject={this.reject}/>\n            </div>\n        );\n    }\n}\n\nexport default Appointments;\n\n"]},"metadata":{},"sourceType":"module"}