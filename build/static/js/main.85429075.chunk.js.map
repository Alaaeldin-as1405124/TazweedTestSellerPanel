{"version":3,"sources":["logo.svg","components/Home.js","customComponents/DragableList.js","components/About.js","services/baseService.js","customComponents/SortableList.js","components/Media.js","components/SocialMedia.js","components/AddLocation.js","components/NavBar.js","components/MediaSingle.js","components/AddSubCategory.js","components/AddCategory.js","components/Categories.js","components/Locations.js","components/SubScriptionControl.js","customComponents/MapView.js","components/AddPlace.js","components/Places.js","components/Login.js","components/Visitors.js","Router.js","App.js","index.js"],"names":["module","exports","Home","style","flex","minHeight","backgroundPosition","backgroundSize","class","src","width","alt","href","Component","SortableList","sortable","data","onReorder","renderItem","keyExtractor","transitionDuration","separator","listRef","React","useRef","separatorsRef","map","createRef","itemsRef","d","i","useState","active","setActive","currentOrder","setCurrentOrder","onSortStart","event","sortStart","ref","item","index","key","current","onMouseDown","onTouchStart","children","length","type","button","touches","list","classList","contains","add","css","Object","keys","forEach","position","height","offsetHeight","offsetWidth","separators","filter","dom","left","offsetLeft","top","offsetTop","items","x","y","dragged","target","find","spacing","curIndex","indexOf","newOrder","draggable","onStart","zIndex","transform","setTimeout","transition","onMove","delta","draggX","draggY","dragIndex","reduce","acc","splice","cur","idx","onEnd","remove","e","console","log","startPosition","onDragMove","currentPosition","getPosition","deltaPosition","preventDefault","onDragEnd","touch","window","removeEventListener","passive","dragEvent","changedTouches","pageX","pageY","addEventListener","onDragStart","DragableList","state","this","props","setState","nextProps","nextContext","_id","ordered","reOrder","className","About","WebApiBaseUrl","BaseService","localStorage","getItem","fetch","method","headers","response","ok","json","getToken","category","body","JSON","stringify","subCategory","location","place","token","removeItem","user","authUser","listItems","file","data-id","options","c","tag","onChange","order","evt","newIndex","oldIndex","newOrderedFiles","temp","Media","_handleImageChange","a","filesArray","Array","from","files","formData","FormData","singleFile","append","baseService","getApiUrl","filesFetched","push","update","updateMedia","removeImageFile","addExternalLink","externalLink","link","toString","toLowerCase","includes","match","alert","value","imageUrls","videoUrls","bind","media","Tabs","id","activeKey","onSelect","k","Tab","eventKey","title","multiple","Form","Group","Label","Row","as","Col","Control","placeholder","Button","onClick","ListGroup","Item","padding","controls","substr","lastIndexOf","replace","split","frameBorder","allow","allowFullScreen","variant","SocialMedia","removeSocialMedia","socialMediaList","updateSocialMediaList","videoType","addSocialMedia","socialMediaLink","socialMedia","platform","selectedPlatform","icon","onChangePlatformSelection","onChangeText","platforms","_handleSubmit","FormControl","AddLocation","modal","categories","name","nameAr","desc","descAr","locationCategories","locationSocialMedia","selectedCategory","loading","edit","checkProps","confirmAlert","message","buttons","label","onCategoryChange","selectedIndex","addCategory","removeCategory","updateMediaFiles","addLocation","updateLocation","then","catch","err","handleClose","getCategories","color","Container","column","sm","controlId","showModal","Example","handleShow","Modal","show","onHide","Header","closeButton","Title","Body","Footer","NavBar","to","MediaSingle","AddSubCategory","addMediaFile","addSubCategory","editSubCategory","subCategories","subCategoryIndex","size","AddCategory","subCategoryModal","editCategory","removeSubCategory","Categories","categoriesModal","subCategoriesModal","categoryIndex","fetchCategories","func","confirm","deleteCategory","deleteSubCategory","newCategory","newSubCategory","updateCategory","updateSubCategory","striped","bordered","hover","colSpan","Locations","locations","fetchLocations","getLocations","removeLocation","deleteLocation","singleSocialMedia","AddLocationModal","SubScriptionControl","subscribeChecker","socialMediaChecker","videoChecker","offerChecker","imageNum","videoNum","customPanoramaChecker","priorityABChecker","selectedPeriodIndex","subscriptionDate","Date","toISOString","custom360Link","offerLink","subscriptionInfo","onCheckerChange","checked","onPeriodChange","updatePanorama","updateOfferLink","Check","custom","MapView","address","lat","lng","longitude","latitude","handleLocationChange","places","onSuggestSelect","suggest","paddingLeft","marginTop","marginBottom","el","_geoSuggest","country","containerElement","mapElement","defaultPosition","radius","zoom","AddPlace","selectedLocationIndex","selectedCategoryIndex","selectedSubCategoryIndex","phones","emails","workingHours","website","phone","email","workingHourFrom","workingHourTo","mapLocation","fetchData","updateSubscriptionInfo","findIndex","singleLocation","singleCategory","singleSubCategory","onLocationChange","onSubCategoryChange","addPhone","removePhone","addEmail","removeEmail","timeFormat","time","hours","meridian","timeSplit","addWorkingHour","workingFrom","workingTo","workingHour","removeWorkingHour","updateMap","validation","valid","addPlace","updatePlace","Places","fetchPlaces","getPlaces","removePlace","deletePlace","AddPlaceModal","Login","password","error","dismissError","handleSubmit","login","setItem","history","checkLogin","prototype","unique","self","Visitors","visitors","getUniqueVisitors","visitor","deviceId","getVisitors","carrier","ipAddress","uniqueId","isTablet","landscape","PrivateRoute","component","rest","render","pathname","Logout","withRouter","logout","RouterComponent","exact","path","App","Router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.85429075.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","// Home.js\n\nimport React, {Component} from 'react';\n\nimport '../assets/customStyles.css';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div style={{\n                flex: 1, minHeight: '100%', backgroundPosition: 'center',\n                backgroundSize: 'cover',\n            }}>\n\n\n                <body>\n                <header class=\"header\">\n                    <div class=\"w-container\">\n                        <div class=\"logo-wrapper w-clearfix\">\n                            <img\n                                src=\"https://uploads-ssl.webflow.com/5d9ceab8ccdd266e2c43882b/5d9ceab9ccdd263edf43883b_logo-white.png\"\n                                width=\"56\" alt=\"\" class=\"logo-icon\"/>\n                            <h1 class=\"logo-text\">Gate Of Egypt</h1>\n                        </div>\n                        <h1>Find Places.</h1>\n                        <p class=\"main-subtitle\">\n                            Gate of Egypt is a mobile app that helps you to find places well sorted\n                            under category, sub-category in adiition to location\n                        </p>\n\n\n                        <a\n                            href=\"itms-services://?action=download-manifest&amp;url=https://goe.ay-legend.com/info.plist\"\n                            class=\"app-button w-inline-block\">\n                            <img\n                                src=\"https://uploads-ssl.webflow.com/5d9ceab8ccdd266e2c43882b/5d9ceab9ccdd267e92438840_app-store-apple.png\"\n                                width=\"141\" alt=\"\"/>\n                        </a>\n\n\n                        <a href=\"#\" class=\"app-button w-inline-block\">\n                            <img\n                                src=\"https://uploads-ssl.webflow.com/5d9ceab8ccdd266e2c43882b/5d9ceab9ccdd26d2fe43883a_app-store-google.png\"\n                                width=\"141\" alt=\"\"/>\n                        </a>\n\n                    </div>\n                </header>\n\n                </body>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nconst SortableList = ({\n                          sortable = true,\n                          data = [],\n                          onReorder = () => {\n                          },\n                          renderItem = () => {\n                          },\n                          keyExtractor = () => {\n                          },\n                          transitionDuration = 200,\n                          separator = null,\n                      }) => {\n    const listRef = React.useRef(null)\n    const separatorsRef = React.useRef(data.map(() => React.createRef()))\n    const itemsRef = React.useRef(data.map((d, i) => React.createRef()))\n    const [active, setActive] = React.useState(null)\n    const [currentOrder, setCurrentOrder] = React.useState(data.map((d, i) => i))\n\n    const onSortStart = event => sortable && sortStart(\n        event,\n        data,\n        listRef,\n        itemsRef,\n        separatorsRef,\n        onReorder,\n        setActive,\n        setCurrentOrder,\n        transitionDuration\n    )\n\n    return (\n        <div ref={listRef}>\n            {data.map((item, index) =>\n                <div key={keyExtractor(item, index)}>\n                    <div\n                        ref={itemsRef.current[index]}\n                        onMouseDown={onSortStart}\n                        onTouchStart={onSortStart}\n                        children={renderItem(item, currentOrder[index], active === index)}\n                    />\n                    {separator && index < data.length - 1 &&\n                    <div ref={separatorsRef.current[index]}>\n                        {separator}\n                    </div>\n                    }\n                </div>\n            )}\n        </div>\n    )\n}\n\nconst sortStart = (\n    event,\n    data,\n    listRef,\n    itemsRef,\n    separatorsRef,\n    onReorder,\n    setActive,\n    setCurrentOrder,\n    transitionDuration,\n) => {\n    try{\n        if (itemsRef.current.length < 2) return\n        if (event.type === 'mousedown' && event.button > 0) return\n        if (event.type === 'touchstart' && event.touches.length > 1) return\n\n        const list = listRef.current\n        if (list.classList.contains('is-sorting')) return\n        list.classList.add('is-sorting')\n\n        const css = (item, css) => Object.keys(css).forEach(style => item.style[style] = css[style])\n\n        css(list, {\n            position: 'relative',\n            height: list.offsetHeight + 'px',\n            width: list.offsetWidth + 'px',\n        })\n\n        const separators = separatorsRef.current.filter(ref => ref.current).map((ref, index) => {\n            const dom = ref.current\n            if (dom) return {\n                index: index,\n                dom: dom,\n                left: dom.offsetLeft,\n                top: dom.offsetTop,\n                width: dom.offsetWidth,\n                height: dom.offsetHeight,\n            }\n        })\n\n        const items = itemsRef.current.filter(ref => ref.current).map((ref, index) => {\n            const dom = ref.current\n            if (dom) return {\n                index: index,\n                dom: dom,\n                left: dom.offsetLeft,\n                top: dom.offsetTop,\n                width: dom.offsetWidth,\n                height: dom.offsetHeight,\n                x: dom.offsetLeft,\n                y: dom.offsetTop,\n                dragged: dom.contains(event.target)\n            }\n        })\n\n        const dragged = items.find(item => item.dragged)\n        const spacing = items[1].top - (items[0].top + items[0].height)\n\n        let curIndex = items.indexOf(dragged)\n        let newOrder = items.map(item => item.index)\n\n        setActive(curIndex)\n\n        draggable(event, {\n            onStart: () => {\n                separators.map(separator => css(separator.dom, {\n                    position: 'absolute',\n                    width: separator.width + 'px',\n                    height: separator.height + 'px',\n                    left: separator.left + 'px',\n                    top: separator.top + 'px',\n                    zIndex: 1,\n                }))\n\n                items.map(item => {\n                    css(item.dom, {\n                        position: 'absolute',\n                        width: item.width + 'px',\n                        height: item.height + 'px',\n                        transform: `translateX(${item.x}px) translateY(${item.y}px)`,\n                        zIndex: 2,\n                    })\n                    setTimeout(() => {\n                        if (item.dragged) return\n                        css(item.dom, {transition: `transform ${transitionDuration}ms ease`})\n                    })\n                })\n\n                css(dragged.dom, {zIndex: 3})\n            },\n            onMove: delta => {\n                const draggX = dragged.left + delta.x\n                const draggY = dragged.top + delta.y\n\n                const dragIndex = items.reduce((acc, item) => {\n                    if (item.index === 0) return acc\n                    const shadowCenter = draggY + dragged.height / 2\n                    const itemStart = item.top - spacing / 2\n                    return acc += (shadowCenter > itemStart) ? 1 : 0\n                }, 0)\n\n                if (dragIndex !== curIndex) {\n                    newOrder[dragIndex] = newOrder.splice(curIndex, 1, newOrder[dragIndex])[0]\n                    curIndex = dragIndex\n\n                    newOrder.reduce((acc, index) => {\n                        const item = items[index]\n                        item.y = acc\n                        css(item.dom, {transform: `translateX(${item.x}) translateY(${item.y}px)`})\n                        return acc += item.height + spacing\n                    }, 0)\n\n                    setCurrentOrder(newOrder.reduce((acc, cur, idx) => {\n                        acc[newOrder[idx]] = idx\n                        return acc\n                    }, []))\n                }\n\n                css(dragged.dom, {transform: `translateX(${draggX}px) translateY(${draggY}px)`})\n            },\n            onEnd: () => {\n                setActive(null)\n\n                css(dragged.dom, {\n                    transition: `all ${transitionDuration}ms ease`,\n                    transform: `translateX(${dragged.x}) translateY(${dragged.y}px)`,\n                })\n\n                setTimeout(() => {\n                    list.style = null\n                    list.classList.remove('is-sorting')\n                    items.map(item => item.dom.style = null)\n                    separators.map(separator => separator.dom.style = null)\n                    setCurrentOrder(items.map(item => item.index))\n                    onReorder(items.reduce((acc, cur, idx) => {\n                        acc[idx] = data[newOrder[idx]]\n                        return acc\n                    }, []))\n                }, transitionDuration)\n            }\n        })\n\n\n    }\n   catch (e) {\n       console.log(e)\n   }\n\n\n}\n\nconst draggable = (e, {onStart, onMove, onEnd}) => {\n    try{\n        let startPosition\n\n        const onDragStart = e => {\n            const currentPosition = getPosition(e)\n            onStart(startPosition)\n            startPosition = currentPosition\n            const touch = e.type === 'touchstart'\n            window.addEventListener((touch ? 'touchmove' : 'mousemove'), onDragMove, {passive: false})\n            window.addEventListener((touch ? 'touchend' : 'mouseup'), onDragEnd, false)\n        }\n\n        const onDragMove = e => {\n            const currentPosition = getPosition(e)\n            const deltaPosition = {\n                x: currentPosition.x - startPosition.x,\n                y: currentPosition.y - startPosition.y,\n            }\n            onMove(deltaPosition, currentPosition)\n            e.preventDefault()\n        }\n\n        const onDragEnd = e => {\n            const currentPosition = getPosition(e)\n            onEnd(currentPosition)\n            const touch = e.type === 'touchend'\n            window.removeEventListener((touch ? 'touchmove' : 'mousemove'), onDragMove, {passive: false})\n            window.removeEventListener((touch ? 'touchend' : 'mouseup'), onDragEnd, false)\n        }\n\n        const getPosition = e => {\n            const dragEvent = e.touches ? (e.touches[0] || e.changedTouches[0]) : e\n            return {x: dragEvent.pageX, y: dragEvent.pageY}\n        }\n\n        onDragStart(e)\n    }catch (e) {\n        console.log(e)\n    }\n\n}\n\n\n\n\nclass DragableList extends Component {\n    state = {\n        data: []\n    }\n\n    componentWillMount() {\n        //console.log('dragable list will mounnt',this.props)\n        if (this.props && this.props.data)\n            this.setState({data: this.props.data})\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        //console.log('dragable list will recv props',nextProps)\n        if (nextProps && nextProps.data){\n\n            this.setState({data: nextProps.data})\n        }\n    }\n\n    render() {\n        return (\n            <SortableList\n                data={this.state.data}\n                renderItem={(item, index, active) => this.props.renderItem(item, index,active)}\n                keyExtractor={item => item._id}\n                onReorder={ordered => this.props.reOrder(ordered)}\n                separator={<div className=\"separator\"/>}\n            />\n        );\n    }\n}\n\n\nexport default DragableList\n","import React, { Component } from 'react';\nimport DragableList from \"../customComponents/DragableList\";\n\nclass About extends Component {\n    render() {\n        return (\n            <div>\n                <h2>About</h2>\n                <DragableList/>\n            </div>\n        );\n    }\n}\n\nexport default About;\n\n","const WebApiBaseUrl = `http://goe.ay-legend.com:1112/api`;\n\nexport default class BaseService {\n\n    static getApiUrl (){\n        return WebApiBaseUrl;\n    }\n    static getToken(){\n        return 'Bearer '+window.localStorage.getItem('token');\n    }\n    static async getCategories() {\n\n        const response = await fetch(`${WebApiBaseUrl}/category/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n\n            }\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok;\n\n    }\n    static async getVisitors() {\n\n        const response = await fetch(`${WebApiBaseUrl}/visitor/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.getToken()\n\n            }\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok;\n\n    }\n    static async addCategory(category) {\n\n        const response = await fetch(`${WebApiBaseUrl}/category/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.getToken()\n\n            },\n            body: JSON.stringify(category)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n    static async updateCategory(category) {\n\n        const response = await fetch(`${WebApiBaseUrl}/category/`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n                'Authorization': this.getToken()\n            },\n            body: JSON.stringify(category)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n    static async deleteCategory(category) {\n\n        const response = await fetch(`${WebApiBaseUrl}/category/`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n                'Authorization': this.getToken()\n\n            },\n            body: JSON.stringify(category)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n\n    static async addSubCategory(category, subCategory) {\n\n        const response = await fetch(`${WebApiBaseUrl}/subcategory/${category._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n                'Authorization': this.getToken()\n\n            },\n            body: JSON.stringify(subCategory)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n    static async updateSubCategory(category,subCategory) {\n\n        const response = await fetch(`${WebApiBaseUrl}/subCategory/${category._id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n                'Authorization': this.getToken()\n            },\n            body: JSON.stringify(subCategory)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n    static async deleteSubCategory(category,subCategory) {\n        const response = await fetch(`${WebApiBaseUrl}/subCategory/${category._id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n                'Authorization': this.getToken()\n            },\n            body: JSON.stringify(subCategory)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n\n    static async getLocations() {\n        const response = await fetch(`${WebApiBaseUrl}/location/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n                'Authorization': \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoyLCJyZWdEYXRlIjoiV2VkIE9jdCAwMiAyMDE5IDEzOjQ1OjA3IEdNVCswMzAwIChBcmFiaWFuIFN0YW5kYXJkIFRpbWUpIiwiaXNWYWxpZCI6dHJ1ZSwiX2lkIjoiNWQ5NDgyMDNlYmQ1ZTg0M2I4NTU5NDI5IiwiZW1haWwiOiJhbGFhIiwibmFtZSI6ImFsYWEiLCJfX3YiOjAsImlhdCI6MTU3MDAxMzc2N30.LB-CBu-kOlPQwJjoyVwhuFP9lYxBWhffh-479W1emX8\"\n\n            }\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok;\n\n\n\n    }\n    static async addLocation(location) {\n\n        const response = await fetch(`${WebApiBaseUrl}/location/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n                'Authorization': \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoyLCJyZWdEYXRlIjoiV2VkIE9jdCAwMiAyMDE5IDEzOjQ1OjA3IEdNVCswMzAwIChBcmFiaWFuIFN0YW5kYXJkIFRpbWUpIiwiaXNWYWxpZCI6dHJ1ZSwiX2lkIjoiNWQ5NDgyMDNlYmQ1ZTg0M2I4NTU5NDI5IiwiZW1haWwiOiJhbGFhIiwibmFtZSI6ImFsYWEiLCJfX3YiOjAsImlhdCI6MTU3MDAxMzc2N30.LB-CBu-kOlPQwJjoyVwhuFP9lYxBWhffh-479W1emX8\"\n\n            },\n            body: JSON.stringify(location)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n    static async updateLocation(location) {\n\n        const response = await fetch(`${WebApiBaseUrl}/location/`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n                'Authorization': \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoyLCJyZWdEYXRlIjoiV2VkIE9jdCAwMiAyMDE5IDEzOjQ1OjA3IEdNVCswMzAwIChBcmFiaWFuIFN0YW5kYXJkIFRpbWUpIiwiaXNWYWxpZCI6dHJ1ZSwiX2lkIjoiNWQ5NDgyMDNlYmQ1ZTg0M2I4NTU5NDI5IiwiZW1haWwiOiJhbGFhIiwibmFtZSI6ImFsYWEiLCJfX3YiOjAsImlhdCI6MTU3MDAxMzc2N30.LB-CBu-kOlPQwJjoyVwhuFP9lYxBWhffh-479W1emX8\"\n\n            },\n            body: JSON.stringify(location)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n    static async deleteLocation(location) {\n\n        const response = await fetch(`${WebApiBaseUrl}/location/`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n                'Authorization': \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoyLCJyZWdEYXRlIjoiV2VkIE9jdCAwMiAyMDE5IDEzOjQ1OjA3IEdNVCswMzAwIChBcmFiaWFuIFN0YW5kYXJkIFRpbWUpIiwiaXNWYWxpZCI6dHJ1ZSwiX2lkIjoiNWQ5NDgyMDNlYmQ1ZTg0M2I4NTU5NDI5IiwiZW1haWwiOiJhbGFhIiwibmFtZSI6ImFsYWEiLCJfX3YiOjAsImlhdCI6MTU3MDAxMzc2N30.LB-CBu-kOlPQwJjoyVwhuFP9lYxBWhffh-479W1emX8\"\n\n            },\n            body: JSON.stringify(location)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n\n\n    static async addPlace(place) {\n\n        const response = await fetch(`${WebApiBaseUrl}/place/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n                'Authorization': this.getToken()\n\n            },\n            body: JSON.stringify(place)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n    static async getPlaces() {\n        const response = await fetch(`${WebApiBaseUrl}/place/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n\n            }\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok;\n\n    }\n    static async updatePlace(place) {\n\n        const response = await fetch(`${WebApiBaseUrl}/place/`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n                'Authorization':this.getToken()\n\n            },\n            body: JSON.stringify(place)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n    static async deletePlace(place) {\n\n        const response = await fetch(`${WebApiBaseUrl}/place/`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n                ,\n                'Authorization': this.getToken()\n\n            },\n            body: JSON.stringify(place)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n\n\n    static checkLogin (){\n        let token = window.localStorage.getItem('token');\n\n        if(token && token !=='' && token.length > 10){\n            console.log('am check login and returning true');\n\n            return true\n        }\n        return false;\n\n    }\n\n    static  logout (){\n        return window.localStorage.removeItem('token');\n    }\n\n    static async login(user) {\n\n        const authUser = await fetch(`${WebApiBaseUrl}/login/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n                //,'Authorization': token\n            },\n            body: JSON.stringify(user)\n        });\n\n        if (authUser.ok)\n            return await authUser.json();\n        else\n            return authUser.ok\n    }\n\n}\n","import React from 'react';\nimport Sortable from 'react-sortablejs';\n\n// Functional Component\nconst SortableList = ({items, reOrder, renderItem}) => {\n    let sortable = null; // sortable instance\n\n    const listItems = items.map((file, index) => {\n\n            return (<div data-id={index}>{renderItem(file, index)}</div>)\n        }\n    );\n\n    return (\n        <div>\n\n            <Sortable\n                // Sortable options (https://github.com/RubaXa/Sortable#options)\n                options={{}}\n\n                // [Optional] Use ref to get the sortable instance\n                // https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute\n                ref={(c) => {\n                    if (c) {\n                        sortable = c.sortable;\n                    }\n                }}\n\n                // [Optional] A tag or react component to specify the wrapping element. Defaults to \"div\".\n                // In a case of a react component it is required to has children in the component\n                // and pass it down.\n                tag=\"div\"\n\n                // [Optional] The onChange method allows you to implement a controlled component and keep\n                // DOM nodes untouched. You have to change state to re-render the component.\n                // @param {Array} order An ordered array of items defined by the `data-id` attribute.\n                // @param {Object} sortable The sortable instance.\n                // @param {Event} evt The event object.\n                onChange={(order, sortable, evt) => {\n                    //console.log('order ', order, '\\n sortable ', sortable, '\\n evt', evt)\n                    //do the sorting\n                    let newIndex = evt.newIndex;\n                    let oldIndex = evt.oldIndex;\n                    //console.log('old index ',oldIndex,'\\n new Index ',newIndex)\n                    let newOrderedFiles = [...items];\n                    let temp = newOrderedFiles[oldIndex];\n                    newOrderedFiles[oldIndex] = newOrderedFiles[newIndex];\n                    newOrderedFiles[newIndex] = temp;\n                    //let newOrderFiles = doSorting(items,order)\n                    //console.log(newOrderFiles)\n                    reOrder(newOrderedFiles);\n                }}\n            >\n                {listItems}\n            </Sortable>\n        </div>\n    );\n};\n\n\nexport default SortableList;\n","import React, {Component} from 'react';\nimport {Tabs, Tab, ListGroup, Button, Form, Col, FormControl} from 'react-bootstrap'\nimport FormData from 'form-data';\nimport DragableList from \"../customComponents/DragableList\";\nimport baseService from \"../services/baseService\";\nimport SortableList from \"../customComponents/SortableList\";\n\nclass Media extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n            imageUrls: [],\n            videoUrls: [],\n            type: 'image',\n            externalLink: '',\n        };\n        this._handleImageChange = this._handleImageChange.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n\n        if (nextProps.media) {\n            console.log('@media will rev props ',nextProps.media)\n            this.setState({files: nextProps.media})\n        }\n    }\n\n    componentWillMount() {\n        if (this.props.media) {\n            this.setState({files: this.props.media})\n        }\n    }\n\n\n    _handleImageChange = async (e) => {\n        e.preventDefault();\n        let filesArray = Array.from(e.target.files);\n        const formData = new FormData();\n        filesArray.map((singleFile) => {\n            formData.append('files[]', singleFile);\n        });\n        let response = await fetch(baseService.getApiUrl() +'/uploadMulti', {\n            method: 'POST',\n            body: formData,\n            headers: {\n                'Authorization': baseService.getToken()\n            },\n        });\n        if (response.ok) {\n\n            try {\n\n                let filesFetched = await response.json();\n                let files = [...this.state.files];\n                filesFetched.map((singleFile) => {\n                    files.push(singleFile);\n                });\n\n                this.setState({files}, () => this.update());\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n            console.log('response not ok ', response)\n        }\n\n\n    }\n\n    //TODO later relate this in each update\n    update = () => {\n        if (this.props && this.props.updateMedia) {\n            this.props.updateMedia(this.state.files);\n        }\n    }\n\n    removeImageFile = (index) => {\n        let files = [...this.state.files];\n        files.splice(index, 1);\n        this.setState({files}, () => {\n            this.update()\n        });\n    };\n\n\n    addExternalLink = () => {\n        //check video type and send it to the server\n        if (this.state.externalLink !== '') {\n            //check if it's a valid link\n            let link = this.state.externalLink.toString().toLowerCase();\n            if (link.includes('.mp4') || link.includes('youtube') || link.match(/\\.(jpeg|jpg|gif|png)$/)) {\n                let type = link.includes('.mp4') || link.includes('youtube') ? 'video' : 'image'\n                let files = [...this.state.files];\n                files.push({\n                    link: this.state.externalLink,\n                    type: type\n                });\n                //let extention = link.substr(link.lastIndexOf('.')+1,link.length)\n                //console.log(extention)\n\n                this.setState({externalLink: '', files}, () => {\n                    this.update()\n                })\n            } else {\n                alert('invalid video/image url (Accepting MP4 or Youtube link');\n                return;\n            }\n        } else\n            alert('Please fill video link first')\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h2>Media</h2>\n                </div>\n\n                <Tabs id=\"controlled-tab-example\" activeKey={this.state.type} onSelect={k => this.setState({type: k})}>\n                    <Tab eventKey=\"image\" title=\"Upload\">\n                        <form>\n                            <input type=\"file\" onChange={this._handleImageChange} multiple/>\n                        </form>\n\n\n                    </Tab>\n                    <Tab eventKey=\"video\" title=\"External Link\">\n\n                        <Form.Group>\n                            <Form.Label>\n                                Add External Link\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"text\"\n                                                  placeholder=\"Video/Image Link (Youtube or external media link) MP4\"\n                                                  onChange={(e) => this.onChange('externalLink', e)}\n                                                  value={this.state.externalLink}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addExternalLink()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                        </Form.Group>\n\n                    </Tab>\n\n                </Tabs>\n\n                <SortableList\n                    items={this.state.files}\n                    renderItem={(file, index) => {\n                        return (\n                            <div>\n                                <ListGroup.Item>\n                                    <div className={'row'}>\n                                        <div className={'col'}>\n                                            { (file.type.includes('video') && !file.link.toString().toLowerCase().includes('youtube')) ?\n                                                <video style={{width: 200, height: 250, padding: 5}} controls>\n                                                    <source\n                                                        src={file.link}\n                                                        type={'video/' + file.link.substr(file.link.lastIndexOf('.') + 1, file.link.length)}\n                                                    />\n                                                    Your browser does not support HTML5 video.\n                                                </video> : file.type.includes('video') && file.link.toString().toLowerCase().includes('youtube') &&\n                                                <iframe width=\"200\" height=\"250\"\n                                                        src={file.link.replace('watch?v=','embed/').split('&')[0]} frameBorder=\"0\"\n                                                        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                                                        allowFullScreen/>\n                                            }\n                                            {file.type.includes('image') &&\n                                            <img style={{width: 100, height: 100, padding: 5}} src={file.link}/>}\n\n                                        </div>\n                                        <Button variant=\"danger\"\n                                                onClick={() => this.removeImageFile(index)}>Remove</Button>\n                                    </div>\n                                </ListGroup.Item>\n                            </div>)\n                    }}\n                    reOrder={(files) => {\n                        //prevent issue when removing\n                        if (this.state.files.length === files.length) {\n                            if (files[0].type === 'image') {\n                                this.setState({files}, () => {\n                                    this.update()\n                                });\n\n                            } else {\n                                alert('The first item must be an image')\n                            }\n                        }\n\n                    }}\n\n                >\n                </SortableList>\n\n\n\n\n            </div>\n        )\n    }\n\n\n}\n\nexport default Media;\n","import React, {Component} from 'react';\nimport {Tabs, Tab, ListGroup, Button, Form, Col, FormControl} from 'react-bootstrap'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\n\nclass SocialMedia extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: [],\n            imageUrls: [],\n            videoUrls: [],\n            type: 'image',\n            socialMediaList: this.props.socialMediaList,\n            platforms: ['facebook', 'instagram', 'linkedin', 'twitter', 'google', 'youtube', 'angellist', 'codepen', 'envelope', 'etsy', 'flickr', 'foursquare', 'github-alt', 'github', 'gitlab', 'medium', 'pinterest', 'quora', 'reddit-alien', 'soundcloud', 'stack-overflow', 'steam', 'stumbleupon', 'tumblr', 'twitch', 'google-plus-official', 'vimeo', 'vk', 'weibo', 'wordpress', 'other'],\n            selectedPlatform: '',\n            socialMediaLink:'',\n            icon:'',\n\n        };\n        this._handleImageChange = this._handleImageChange.bind(this);\n        this._handleSubmit = this._handleSubmit.bind(this);\n    }\n\n    _handleSubmit(e) {\n        e.preventDefault();\n        // TODO: do something with -> this.state.file\n    }\n\n\n    _handleImageChange(e) {\n        e.preventDefault();\n        //reset the chosen photos\n        //this.setState({files:[],imageUrls:[]})\n\n\n        let files = Array.from(e.target.files);\n\n\n        console.log(files);\n\n    }\n\n    removeImageFile = (index) => {\n        let files = [...this.state.files];\n        let imageUrls = [...this.state.imageUrls];\n        files.splice(index, 1);\n        imageUrls.splice(index, 1);\n        this.setState({files, imageUrls})\n    };\n    removeSocialMedia = (index) => {\n        let socialMediaList = [...this.state.socialMediaList];\n        socialMediaList.splice(index, 1);\n        this.setState({socialMediaList},() =>this.props.updateSocialMediaList(this.state.socialMediaList))\n\n    };\n    videoType = (e) => {\n        console.log('video select change', e.target.value);\n    }\n    addSocialMedia = () => {\n        //check if link is empty\n        if(this.state.socialMediaLink === ''){\n            alert('Please fill social media link first')\n            return;\n        }\n        let socialMediaList = [...this.state.socialMediaList];\n        console.log('the linkn is ',this.state.socialMediaLink)\n        //create the obbject\n        let socialMedia = {\n            platform:this.state.selectedPlatform,\n            link:this.state.socialMediaLink,\n            icon:this.state.icon,\n        }\n        socialMediaList.push(socialMedia);\n        console.log('social list before updating',socialMediaList);\n        this.setState({socialMediaList,socialMediaLink:'',icon:''});\n        this.props.updateSocialMediaList(socialMediaList)\n    };\n\n    componentWillMount() {\n        this.setState({selectedPlatform: this.state.platforms[0]})\n    }\n\n    onChangePlatformSelection = (e) => {\n        this.setState({selectedPlatform: e.target.value})\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log('will rcv props', nextProps)\n        this.setState({socialMediaList: nextProps.socialMediaList})\n    }\n    onChangeText = (key,e) =>{\n      this.setState({[key]:e.target.value})\n    };\n\n    render() {\n\n\n        return (\n            <div>\n                <div>\n                    <h2>Social Media</h2>\n                </div>\n\n                <Form.Group>\n                    <Form.Label>\n                        Add Social Media\n                    </Form.Label>\n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <FormControl as={'select'} onChange={this.onChangePlatformSelection}>\n                                {this.state.platforms.map(platform => {\n                                    return (\n                                        <option>{platform}</option>\n                                    )\n                                })}\n                            </FormControl>\n                        </Form.Group>\n\n                        {this.state.selectedPlatform === 'other' && <Form.Group as={Col}>\n                            <Form.Control type=\"text\" placeholder=\"Platform icon link\"/>\n                        </Form.Group>}\n\n\n\n                        <Form.Group as={Col}>\n                            <Form.Control type=\"text\" placeholder=\"Social media link\" onChange={(e)=>this.onChangeText('socialMediaLink',e)} value={this.state.socialMediaLink}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} className={'center'}>\n                            <Button className=\"badge-info col-6\" onClick={() => this.addSocialMedia()}><i\n                                className=\"fa fa-plus\"/> Add</Button>\n                        </Form.Group>\n                    </Form.Row>\n                    {this.state.socialMediaList.length !== 0 ? this.state.socialMediaList.map((socialMedia, index) => {\n                            let className = 'fa fa-' + socialMedia.platform;\n                            return (\n                                <ListGroup.Item>\n                                    <div className={'row'}>\n                                        <i className={className} style={{width: 64}}/>\n                                        <FontAwesomeIcon icon={'facebook'} style={{width: 64}}/>\n                                        <p className={'col'}>{socialMedia.link}</p>\n                                        <Button variant=\"danger\"\n                                                onClick={() => this.removeSocialMedia(index)}>Remove</Button>\n                                    </div>\n                                </ListGroup.Item>\n                            )\n                        }) :\n                        <ListGroup.Item>\n                            <p className={'col'}>No Social media yet</p>\n                        </ListGroup.Item>\n                    }\n\n                </Form.Group>\n\n\n\n            </div>\n        )\n    }\n\n\n}\n\nexport default SocialMedia;\n","import React, {Component} from 'react';\nimport {Form, Button, Row, Col, ListGroup, Alert, Modal, Container, FormControl} from 'react-bootstrap'\nimport {useState, useEffect, useRef} from 'react'\nimport Media from \"./Media\";\nimport SocialMedia from \"./SocialMedia\";\nimport baseService from \"../services/baseService\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass AddLocation extends Component {\n    state = {\n        modal: false,\n        categories: [],\n        name: '',\n        nameAr: '',\n        desc: '',\n        descAr: '',\n        locationCategories: [],\n        media: [],\n        locationSocialMedia: [],\n        selectedCategory: 0,\n        loading: true,\n        title: 'Add',\n        edit: false,\n        location: {},\n\n\n    };\n\n    componentWillMount() {\n        baseService.getCategories().then((categories) => this.setState({categories, loading: false}))\n        this.checkProps(this.props);\n\n    }\n\n    checkProps = (nextProps) => {\n        if (nextProps.edit) {\n            let location = nextProps.location;\n            if (location) {\n                //edit category\n                this.setState({\n                    location: nextProps.location,\n                    edit: true,\n                    title: 'Edit',\n                    name: location.name,\n                    nameAr: location.nameAr,\n                    desc: location.desc,\n                    descAr: location.descAr,\n                    locationCategories: location.categories,\n                    media: location.media,\n                    locationSocialMedia: location.socialMedia,\n\n                })\n            }\n\n        }\n    }\n\n    alert = (title) => {\n        confirmAlert({\n            title: '' + title,\n            message: '',\n            buttons: [{label: 'Dismiss'}]\n        });\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.checkProps(nextProps);\n\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n    onCategoryChange = (e) => {\n        this.setState({selectedCategory: e.target.selectedIndex})\n    };\n    addCategory = () => {\n        let locationCategories = [...this.state.locationCategories];\n        if (locationCategories.includes(this.state.categories[this.state.selectedCategory])) {\n            alert('AddLocation already has this category');\n            return;\n        }\n        locationCategories.push(this.state.categories[this.state.selectedCategory]);\n        this.setState({locationCategories});\n    };\n\n    removeCategory = (index) => {\n\n        let locationCategories = [...this.state.locationCategories];\n        locationCategories.splice(index, 1);\n        this.setState({locationCategories});\n    };\n    updateSocialMediaList = (socialMediaList) => {\n        //keep social media sync\n        this.setState({locationSocialMedia: socialMediaList});\n\n    };\n    updateMediaFiles = (media) => {\n        this.setState({media});\n    }\n    addLocation = () => {\n        let categories = [];\n        this.state.locationCategories.map((category) => categories.push(category._id));\n        const {name, nameAr, desc, descAr, media, locationSocialMedia} = this.state;\n\n        if (categories.length === 0) {\n            alert('Please add categories to the location');\n            return;\n        } else if (media.length === 0 || name === '' || nameAr === '' || desc === '' || descAr === '') {\n            alert('Please fill all the fields');\n            return;\n        }\n\n        if (this.state.edit) {\n            let location = this.state.location;\n\n            location.name = this.state.name;\n            location.nameAr = this.state.nameAr;\n            location.desc = this.state.desc;\n            location.descAr = this.state.descAr;\n            location.categories = categories;\n            location.media = this.state.media;\n            location.socialMedia = this.state.locationSocialMedia;\n\n            baseService.updateLocation(location).then((response) =>{\n                if (this.props && this.props.updateLocation)\n                    this.props.updateLocation();\n            }).catch((err) => console.log(err));\n\n\n        } else {\n            let location = {\n                name: this.state.name,\n                nameAr: this.state.nameAr,\n                desc: this.state.desc,\n                descAr: this.state.descAr,\n                categories: categories,\n                media: this.state.media,\n                socialMedia: this.state.locationSocialMedia,\n            };\n            //just add it to the server\n            baseService.addLocation(location).catch((err) => console.log(err));\n            if(this.props &&this.props.handleClose){\n                //close the modal\n                this.props.handleClose()\n            }\n        }\n\n\n    };\n\n    render() {\n        if (this.state.categories.length === 0)\n            return (<div style={{color: 'red'}}>\n                Please Add Category first\n                <Button className=\"badge-info col-6\" href={'/Categories'}>\n                    <i className=\"fa fa-plus\"/> Add Category\n\n                </Button>\n            </div>);\n        return (\n            <div >\n\n                <Container class>\n\n\n                    <Form>\n                        <Form.Group as={Row}>\n                            <Form.Label column sm=\"2\">\n                                Name (English)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control type=\"text\" placeholder=\"Location name\"\n                                              onChange={(e) => this.onChange('name', e)} value={this.state.name}/>\n                            </Col>\n                            <Form.Label column sm=\"2\">\n                                Name (Arabic)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control type=\"text\" placeholder=\"Location name (Arabic)\"\n                                              onChange={(e) => this.onChange('nameAr', e)} value={this.state.nameAr}/>\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                            <Form.Label column sm=\"2\">\n                                Description (English)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control as=\"textarea\" placeholder=\"Location Description\"\n                                              onChange={(e) => this.onChange('desc', e)} value={this.state.desc}/>\n                            </Col>\n                            <Form.Label column sm=\"2\">\n                                Description (Arabic)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control as=\"textarea\" placeholder=\"Location Description (Arabic)\"\n                                              onChange={(e) => this.onChange('descAr', e)} value={this.state.descAr}/>\n                            </Col>\n                        </Form.Group>\n\n\n                        <Form.Group>\n                            <Form.Label>\n                                Please choose category\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <FormControl as={'select'} onChange={this.onCategoryChange}>\n                                        {this.state.categories.map((category, index) => {\n                                            return (\n                                                <option key={index}>{category.name} / {category.nameAr}</option>\n                                            )\n                                        })}\n                                    </FormControl>\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addCategory()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                        </Form.Group>\n\n                        <ListGroup>\n\n\n                            {this.state.locationCategories.length !== 0 ? this.state.locationCategories.map((category, index) => {\n                                    return (\n                                        <ListGroup.Item>\n                                            <div className={'row'}>\n                                                <img style={{width: 64, height: 64, padding: 5}} src={category.icon}/>\n                                                <p className={'col'}>{category.name} / {category.nameAr}</p>\n                                                <Button variant=\"danger\"\n                                                        onClick={() => this.removeCategory(index)}>Remove</Button>\n                                            </div>\n                                        </ListGroup.Item>\n                                    )\n                                }) :\n                                <ListGroup.Item>\n                                    <p className={'col'}>No categories yet</p>\n                                </ListGroup.Item>\n                            }\n\n\n                        </ListGroup>\n\n\n                        <Media media={this.state.media} updateMedia={this.updateMediaFiles}/>\n\n                        <div className={'p-2'}/>\n\n                        <SocialMedia socialMediaList={this.state.locationSocialMedia}\n                                     updateSocialMediaList={this.updateSocialMediaList}/>\n\n                        <div className={'p-2'}/>\n\n                        <Example showModal={this.state.modal}/>\n                        <Button variant=\"primary\"\n                                onClick={() => this.addLocation()}>{this.state.title} Location</Button>\n                    </Form>\n\n\n                </Container>\n\n\n            </div>\n        );\n    }\n}\n\nexport default AddLocation;\n\nclass Example extends Component {\n    state = {\n        modal: false,\n    }\n\n    handleClose = () => this.setState({modal: false});\n    handleShow = () => this.setState({modal: true});\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        //console.log(\"i;m recving \",nextProps)\n        this.setState({modal: nextProps.showModal})\n    }\n\n    render() {\n        return (\n            <div className={\"modal-dialog modal-lg\"}>\n\n                <Modal show={this.state.modal} onHide={this.handleClose} >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Modal heading</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.handleClose}>\n                            Save Changes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n//export default Example;\n","import React from 'react';\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\n\nexport default function NavBar() {\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"#\">Gate Of Egypt</a>\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                        <Link to={'/admin/'} className=\"nav-link\"> Home </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to={'/admin/locations'} className=\"nav-link\">Locations</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to={'/admin/categories'} className=\"nav-link\">Categories</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to={'/admin/places'} className=\"nav-link\">Places</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to={'/Logout'} className=\"nav-link\">Logout</Link>\n                    </li>\n\n                </ul>\n            </nav>\n        </div>\n\n    )\n}\n","import React, {Component} from 'react';\nimport {Tabs, Tab, ListGroup, Button, Form, Col, FormControl} from 'react-bootstrap'\nimport axios from 'axios'\nimport FormData from 'form-data';\nimport baseService from \"../services/baseService\";\n\nclass MediaSingle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            files: '',\n        };\n        this._handleImageChange = this._handleImageChange.bind(this);\n    }\n\n\n    componentWillMount() {\n        if(this.props.icon){\n            this.setState({files:this.props.icon})\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.icon){\n            this.setState({files:nextProps.icon})\n        }\n    }\n\n    _handleImageChange = async (e) => {\n        e.preventDefault();\n        let file = e.target.files;\n        if (!file[0].type.toString().includes('image')) {\n            alert('allowed type (Images) ONLY');\n            return;\n        }\n        //reset the chosen photos\n        this.setState({files: []});\n\n\n        const formData = new FormData();\n        formData.append('file', file[0])\n        let response = await fetch(baseService.getApiUrl() +'/upload', {\n            method: 'POST',\n            body: formData,\n            headers: {\n                'Authorization': baseService.getToken()\n            },\n        });\n        if (response.ok){\n\n            try{\n\n                let file = await response.json();\n                this.setState({files:file.link});\n                this.props.updateMedia(file.link);\n            }catch (e) {\n                console.log(e)\n            }\n        }\n        else{\n            console.log('response not ok ',response)\n        }\n\n\n\n    };\n\n    removeImageFile = () => {\n        this.setState({files: ''})\n        this.props.updateMedia('');\n    };\n\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n\n    render() {\n\n\n        return (\n            <div>\n\n                <form >\n                    <div className={\"row p-2\"}>\n                        <input type=\"file\" onChange={this._handleImageChange} className={\"col\"}/>\n                    </div>\n                </form>\n                {this.state.files !== ''&&\n\n                        <div>\n                            <ListGroup.Item>\n                                <div className={'row'}>\n                                    <div className={'col'}>\n                                        <img style={{width: 100, height: 100, padding: 5}} src={this.state.files}/>\n\n                                    </div>\n                                    <Button variant=\"danger\"\n                                            onClick={() => this.removeImageFile()}>Remove</Button>\n                                </div>\n                            </ListGroup.Item>\n                        </div>\n\n                }\n\n\n            </div>\n        )\n    }\n\n\n}\n\nexport default MediaSingle;\n","import React, {Component} from 'react';\nimport {Button, Col, Container, Form, Modal, Row} from \"react-bootstrap\";\nimport MediaSingle from \"./MediaSingle\";\n\nclass AddSubCategory extends Component {\n\n\n    handleClose = () => {\n        this.setState({modal: false});\n        if(this.props.handleClose)\n            this.props.handleClose();\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        //console.log(\"i;m recving \",nextProps)\n        if (this.state.modal !== nextProps.modal)\n            this.setState({modal: nextProps.modal});\n        if(nextProps.edit && nextProps.category){\n            let subCategory = nextProps.category.subCategories[nextProps.subCategoryIndex];\n            if(subCategory){\n                this.setState({\n                    subCategory:subCategory,\n                    edit:true,\n                    title:'Edit',\n                    name:subCategory.name,\n                    nameAr:subCategory.nameAr,\n                    icon:subCategory.icon,\n\n                })\n            }\n\n        }\n    }\n\n    state = {\n        name: '',\n        nameAr: '',\n        icon: '',\n        modal: false,\n        edit:false,\n        title:'Add',\n        subCategory:{}\n    };\n\n\n    addMediaFile = (icon) => {\n        this.setState({icon});\n        console.log(icon)\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    }\n\n    addSubCategory = () => {\n        if (this.state.name === '' || this.state.nameAr === '' || this.state.icon === '') {\n            alert('please fill all fields');\n            return;\n        }\n        if(this.state.edit){\n            let subCategory = this.state.subCategory;\n            subCategory.name = this.state.name;\n            subCategory.nameAr = this.state.nameAr;\n            subCategory.icon = this.state.icon;\n\n            this.props.editSubCategory(subCategory);\n        }\n        else{\n\n            this.props.addSubCategory({\n                name: this.state.name,\n                nameAr: this.state.nameAr,\n                icon: this.state.icon\n            });\n        }\n        this.setState({name: '', nameAr: '', icon: '',edit:false,title:'Add',subCategory:{}})\n        this.handleClose();\n    };\n\n    render() {\n        return (\n            <Container class>\n\n                <Modal show={this.state.modal} onHide={this.handleClose} size=\"lg\">\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.state.title} SubCategory</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n                        <Form>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"2\">\n                                    Name (English)\n                                </Form.Label>\n                                <Col>\n                                    <Form.Control type=\"text\" placeholder=\"Category name\" value={this.state.name}\n                                                  onChange={(e) => this.onChange('name', e)}/>\n                                </Col>\n\n                            </Form.Group>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"2\">\n                                    Name (Arabic)\n                                </Form.Label>\n                                <Col>\n                                    <Form.Control type=\"text\" placeholder=\"Category name (Arabic)\"\n                                                  value={this.state.nameAr}\n                                                  onChange={(e) => this.onChange('nameAr', e)}/>\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"2\">\n                                    SubCategory Icon\n                                </Form.Label>\n\n                                <MediaSingle updateMedia={this.addMediaFile} icon={this.state.icon}/>\n\n\n                            </Form.Group>\n\n                        </Form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Cancel\n                        </Button>\n                        <Button variant=\"primary\" onClick={() => {\n                            this.addSubCategory()\n                        }}>\n                            Save Changes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n\n            </Container>\n\n        );\n    }\n}\n\nexport default AddSubCategory;\n","import React, {Component} from 'react';\nimport {Button, Col, Container, Form, FormControl, ListGroup, Modal, Row} from \"react-bootstrap\";\nimport Media from \"./Media\";\nimport MediaSingle from \"./MediaSingle\";\nimport AddSubCategory from \"./AddSubCategory\";\n\nclass AddCategory extends Component {\n\n    state = {\n        subCategories: [],\n        category: {},\n        name: '',\n        nameAr: '',\n        icon: '',\n        modal: false,\n        subCategoryModal: false,\n        edit: false,\n        title: 'Add',\n\n    };\n\n    handleClose = () => {\n        this.setState({modal: false, subCategoryModal: false});\n\n        this.props.handleClose();\n    }\n\n    addSubCategory = (category) => {\n        let subCategories = [...this.state.subCategories];\n        subCategories.push(category);//consider validations\n        this.setState({subCategories, subCategoryModal: false});\n    }\n\n    addMediaFile = (icon) => {\n        this.setState({icon});\n        //console.log(icon)\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n\n    addCategory = () => {\n        if (this.state.name === '' || this.state.nameAr === '' || this.state.icon === '' || this.state.subCategories.length === 0) {\n            alert('please fill all fields');\n            return;\n        }\n        if (this.state.edit) {\n            //edit method\n            let category = this.state.category;\n            category.name = this.state.name;\n            category.nameAr = this.state.nameAr;\n            category.icon = this.state.icon;\n            category.subCategories = this.state.subCategories;\n            this.props.editCategory(category).catch((err) => console.log(err))\n        } else {\n            this.props.addCategory({\n                name: this.state.name,\n                nameAr: this.state.nameAr,\n                icon: this.state.icon,\n                subCategories: this.state.subCategories\n            });\n        }\n        this.setState({name: '', nameAr: '', icon: '', subCategories: [], edit: false, title: 'Add'})\n        this.handleClose();\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (this.state.modal !== nextProps.modal)\n            this.setState({modal: nextProps.modal});\n        if (nextProps.edit) {\n            let category = nextProps.category;\n            if (category) {\n                //edit category\n                this.setState({\n                    category: nextProps.category,\n                    title: 'Edit',\n                    edit: true,\n                    name: category.name,\n                    nameAr: category.nameAr,\n                    icon: category.icon,\n                    subCategories: category.subCategories,\n\n                })\n            }\n\n        }\n\n    }\n\n    removeSubCategory = (subCategoryIndex) => {\n        let subCategories = [...this.state.subCategories];\n        subCategories.splice(subCategoryIndex, 1);\n        this.setState({subCategories})\n    };\n\n    render() {\n        return (\n            <Container class>\n                <Modal show={this.state.modal} onHide={this.handleClose} size=\"lg\">\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.state.title} Category</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body>\n\n                        <Form>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"2\">\n                                    Name (English)\n                                </Form.Label>\n                                <Col sm=\"4\">\n                                    <Form.Control type=\"text\" placeholder=\"Category name\"\n                                                  value={this.state.name}\n                                                  onChange={(e) => this.onChange('name', e)}/>\n                                </Col>\n                                <Form.Label column sm=\"2\">\n                                    Name (Arabic)\n                                </Form.Label>\n                                <Col sm=\"4\">\n                                    <Form.Control type=\"text\" placeholder=\"Category name (Arabic)\"\n                                                  value={this.state.nameAr}\n                                                  onChange={(e) => this.onChange('nameAr', e)}/>\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"2\">\n                                    Category Icon\n                                </Form.Label>\n                                <Col>\n                                    <MediaSingle updateMedia={this.addMediaFile} icon={this.state.icon}/>\n                                </Col>\n\n                            </Form.Group>\n\n\n                            <Form.Group as={Row} className={'col'}>\n                                <Button className=\"badge-info col\"\n                                        onClick={() => this.setState({subCategoryModal: true})}><i\n                                    className=\"fa fa-plus\"/> Add SubCategory</Button>\n                            </Form.Group>\n\n                            <ListGroup>\n\n\n                                {this.state.subCategories.length !== 0 ? this.state.subCategories.map((category, index) => {\n                                        return (\n                                            <ListGroup.Item>\n                                                <div className={'row'}>\n                                                    <img style={{width: 64, height: 64, padding: 5}} src={category.icon}/>\n                                                    <p className={'col'}>{category.name} / {category.nameAr}</p>\n                                                    <Button variant=\"danger\"\n                                                            onClick={() => this.removeSubCategory(index)}>Remove</Button>\n                                                </div>\n                                            </ListGroup.Item>\n                                        )\n                                    }) :\n                                    <ListGroup.Item>\n                                        <p className={'col'}>No Subcategories yet</p>\n                                    </ListGroup.Item>\n                                }\n\n\n                            </ListGroup>\n\n                            <AddSubCategory modal={this.state.subCategoryModal}\n                                            handleClose={() => this.setState({subCategoryModal: false})}\n                                            addSubCategory={this.addSubCategory}/>\n\n                        </Form>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Cancel\n                        </Button>\n                        <Button variant=\"primary\" onClick={() => {\n                            this.addCategory()\n                        }}>\n                            Save Changes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </Container>\n\n        );\n    }\n}\n\nexport default AddCategory;\n","import React, {Component} from 'react';\nimport {Button, Col, Form, ListGroup, Row} from \"react-bootstrap\";\nimport baseService from '../services/baseService'\nimport Table from \"react-bootstrap/Table\";\nimport AddSubCategory from \"./AddSubCategory\";\nimport AddCategory from \"./AddCategory\";\nimport {confirmAlert} from \"react-confirm-alert\";\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass Categories extends Component {\n    state = {\n        categories: [],\n        loading: true,\n        categoriesModal: false,\n        subCategoriesModal: false,\n        categoryIndex: -1, //for adding subcategory / edit category\n        subCategoryIndex: -1, //for editing the sub category\n        edit: false,\n\n    };\n\n    componentWillMount() {\n        console.log('categories will mount')\n        baseService.getCategories().then((categories) => this.setState({\n            categories,\n            loading: false\n        })).catch((err) => console.log(err));\n    }\n\n    fetchCategories = () => {\n        baseService.getCategories().then((categories) => this.setState({\n            categories,\n            loading: false\n        })).catch((err) => console.log(err));\n    }\n    confirmAlert = (title, func) => {\n        confirmAlert({\n            title: '' + title,\n            message: 'Are you sure to do this.',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        if (func)\n                            func()\n                    }\n                },\n                {\n                    label: 'No',\n                    onClick: () => {\n                        this.alert('hhey no! ')\n                    }\n                }\n            ]\n        });\n    };\n\n    alert = (title) => {\n        confirmAlert({\n            title: '' + title,\n            message: '',\n            buttons: [{label: 'Dismiss'}]\n        });\n    };\n    removeCategory = async (index) => {\n        /*\n        let categories = [...this.state.categories];\n        categories.splice(index, 1);\n        this.setState({categories});*/\n\n        if (window.confirm(\"Are you sure you want to delete this category?\")) {\n            let response = await baseService.deleteCategory(this.state.categories[index]);\n            if (response) {\n                this.fetchCategories()\n            } else {\n                this.alert('Failed to delete category')\n            }\n        }\n\n\n\n\n\n    };\n    removeSubCategory = async (categoryIndex, subCategoryIndex) => {\n\n\n        if (window.confirm(\"Are you sure you want to delete this subcategory?\")) {\n            let categories = [...this.state.categories];\n            let category = categories[categoryIndex];\n             if (category.subCategories.length === 1) {\n                 alert('CanNOT delete, Category Must have at least 1 SubCategory');\n                 return;\n             }\n            // category.subCategories.splice(subCategoryIndex, 1);\n            // categories[categoryIndex] = category;\n            // this.setState({categories})\n            let response = await baseService.deleteSubCategory(category, category.subCategories[subCategoryIndex])\n            if (response) {\n                this.fetchCategories();\n            } else {\n                this.alert('Failed to delete subcategory')\n            }\n        }\n\n\n    };\n    addCategory = async (category) => {\n        //add category\n        let newCategory = await baseService.addCategory(category);\n        if (newCategory) {\n            console.log(newCategory);\n            //add the category\n\n            let categories = [...this.state.categories];\n            categories.push(newCategory);\n            this.setState({categories, categoriesModal: false});\n        } else {\n            this.alert('failed to add category')\n        }\n\n    };\n    addSubCategory = async (subCategory) => {\n        //add sub category\n        let categories = [...this.state.categories];\n        if (this.state.categoryIndex !== -1) {\n            let category = categories[this.state.categoryIndex];\n            let newSubCategory = await baseService.addSubCategory(category, subCategory);\n            if (newSubCategory && newSubCategory.name) {\n                //category.subCategories.push(newSubCategory);\n                this.setState({categoryIndex: -1});\n                this.fetchCategories();\n            } else {\n                this.alert('fail to add subCategory')\n            }\n        } else {\n            this.alert('Failed to add sub category');\n        }\n\n    };\n\n\n    editCategory = async (category) => {\n        //let categories = [...this.state.categories];\n        // if (this.state.categoryIndex !== -1) {\n        let response = await baseService.updateCategory(category);\n        if (response && response.name) {\n            this.fetchCategories();\n            //categories[this.state.categoryIndex] = category;\n            //this.setState({categories, categoryIndex: -1});\n        } else {\n            this.alert('Failed to update category');\n        }\n        // } else {\n        //     alert('Failed to update category');\n        //  }\n    };\n\n    editSubCategory = async (subCategory) => {\n        let categories = [...this.state.categories];\n\n        if (this.state.categoryIndex !== -1 && this.state.subCategoryIndex !== -1) {\n            let category = categories[this.state.categoryIndex];\n            let response = await baseService.updateSubCategory(category, subCategory);\n            //category.subCategories[this.state.subCategoryIndex] = subCategory;\n            if (response && response.name) {\n                this.fetchCategories();\n            } else {\n                this.alert('Failed to update subcategory')\n            }\n            this.setState({categoryIndex: -1, subCategoryIndex: -1});\n        } else {\n            this.alert('Failed to update sub category');\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Categories</h2>\n\n\n                <Form>\n                    <Button variant=\"success\" onClick={() => this.setState({categoriesModal: true})}>\n                        <i className=\"fa fa-plus\"/> Add Category\n                    </Button>\n\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Icon</th>\n                            <th>Category Name</th>\n                            <th>Category Name (Ar)</th>\n                            <th>SubCategories</th>\n                            <th>Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n\n                        {this.state.categories.length > 0 ? this.state.categories.map((category, categoryIndex) => {\n                            return (\n                                <tr>\n                                    <td>{categoryIndex}</td>\n                                    <td>\n                                        <center>\n                                            <img style={{width: 64, height: 64, padding: 5}} src={category.icon}/>\n                                        </center>\n                                    </td>\n                                    <td>{category.name}</td>\n                                    <td>{category.nameAr}</td>\n                                    <td>\n                                        <Button variant=\"success\" onClick={() => this.setState({\n                                            categoryIndex: categoryIndex,\n                                            subCategoriesModal: true\n                                        })}>\n                                            <i className=\"fa fa-plus\"/> Add SubCategory\n                                        </Button>\n\n                                        <Table striped bordered hover>\n                                            <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Icon</th>\n                                                <th>Category Name</th>\n                                                <th>Category Name (Ar)</th>\n                                                <th>Actions</th>\n                                            </tr>\n                                            </thead>\n                                            <tbody>\n                                            {category.subCategories.length > 0 ? category.subCategories.map((subCategory, subCategoryIndex) => {\n                                                //do whatever\n                                                return (\n                                                    <tr>\n                                                        <td>{subCategoryIndex}</td>\n                                                        <td>\n                                                            <center>\n                                                                <img style={{width: 64, height: 64, padding: 5}}\n                                                                     src={subCategory.icon}/>\n                                                            </center>\n                                                        </td>\n                                                        <td>{subCategory.name}</td>\n                                                        <td>{subCategory.nameAr}</td>\n                                                        <td className=\"row\">\n                                                            <i className=\"fa fa-trash fa-2x\" style={{color: 'red'}}\n                                                               onClick={() => this.removeSubCategory(categoryIndex, subCategoryIndex)}/>\n                                                            <i className=\"fa fa-edit fa-2x\" style={{color: 'green'}}\n                                                               onClick={() => this.setState({\n                                                                   categoryIndex: categoryIndex,\n                                                                   subCategoryIndex: subCategoryIndex,\n                                                                   edit: true,\n                                                                   subCategoriesModal: true\n                                                               })}/>\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            }) : <tr>\n                                                <td colSpan=\"5\">\n                                                    <center>No subcategories yet</center>\n                                                </td>\n                                            </tr>}\n\n                                            </tbody>\n                                        </Table>\n                                    </td>\n                                    <td className=\"row\">\n                                        <i className=\"fa fa-trash fa-2x\" style={{color: 'red'}}\n                                           onClick={() => this.removeCategory(categoryIndex)}/>\n                                        <i className=\"fa fa-edit fa-2x\" style={{color: 'green'}}\n                                           onClick={() => this.setState({\n                                               categoryIndex: categoryIndex,\n                                               edit: true,\n                                               categoriesModal: true\n                                           })}/>\n                                    </td>\n                                </tr>\n                            )\n                        }) : <tr>\n                            <td colSpan=\"6\">\n                                <center>No categories yet</center>\n                            </td>\n                        </tr>}\n\n                        </tbody>\n                    </Table>\n                </Form>\n\n                <AddCategory modal={this.state.categoriesModal}\n                             handleClose={() => this.setState({categoriesModal: false, categoryIndex: -1, edit: false})}\n                             addCategory={this.addCategory}\n                             edit={this.state.edit}\n                             editCategory={this.editCategory}\n                             category={this.state.categories[this.state.categoryIndex]}\n                />\n                <AddSubCategory modal={this.state.subCategoriesModal}\n                                handleClose={() => this.setState({\n                                    subCategoriesModal: false,\n                                    categoryIndex: -1,\n                                    edit: false\n                                })}\n                                addSubCategory={this.addSubCategory}\n                                edit={this.state.edit}\n                                editSubCategory={this.editSubCategory}\n                                category={this.state.categories[this.state.categoryIndex]}\n                                subCategoryIndex={this.state.subCategoryIndex}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Categories;\n","import React, {Component} from 'react';\nimport baseService from '../services/baseService'\nimport {Button, Form, Modal, Table} from \"react-bootstrap\";\nimport AddLocation from \"./AddLocation\";\nimport {confirmAlert} from \"react-confirm-alert\";\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass Locations extends Component {\n    state = {\n        locations: [],\n        loading: true,\n        modal: false,\n        index: -1,\n        edit: false,\n\n    }\n\n    componentWillMount() {\n        this.fetchLocations();\n    }\n\n    fetchLocations = () => {\n        baseService.getLocations().then((locations) => {\n            this.setState({locations, loading: false})\n        }).catch((err) => console.log(err))\n    }\n\n    alert = (title) => {\n        confirmAlert({\n            title: '' + title,\n            message: '',\n            buttons: [{label: 'Dismiss'}]\n        });\n    };\n    addLocation = () => {\n\n    };\n    removeLocation = async (location) => {\n        if (window.confirm(\"Are you sure you want to delete this location?\")) {\n            let response = await baseService.deleteLocation(location);\n            if (response) {\n                this.fetchLocations();//reload\n            } else {\n                this.alert('failed to delete the location')\n            }\n        }\n\n\n    };\n\n    render() {\n\n        return (\n            <div>\n                <h2>Locations</h2>\n                <Button variant=\"success\" onClick={() => this.setState({modal: true})}>\n                    <i className=\"fa fa-plus\"/> Add Location\n                </Button>\n\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Name Ar</th>\n                        <th>Desc</th>\n                        <th>Desc Ar</th>\n                        <th>Social Media</th>\n                        <th>Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.locations.map((location, index) => {\n                        return (\n                            <tr>\n                                <td>{index}</td>\n                                <td>{location.name}</td>\n                                <td>{location.nameAr}</td>\n                                <td>{location.desc}</td>\n                                <td>{location.descAr}</td>\n                                <td>{location.socialMedia.map((singleSocialMedia) => {\n                                    return (\n                                        <div>{singleSocialMedia.link}</div>\n                                    )\n                                })}</td>\n                                <td>\n                                    <i className=\"fa fa-trash fa-2x\" style={{color: 'red'}}\n                                       onClick={() => this.removeLocation(location)}/>\n                                    <i className=\"fa fa-edit fa-2x\" style={{color: 'green'}}\n                                       onClick={() => this.setState({index, edit: true, modal: true})}/>\n                                </td>\n\n                            </tr>\n                        )\n\n                    })}\n\n                    </tbody>\n                </Table>\n                <AddLocationModal modal={this.state.modal} location={this.state.locations[this.state.index]}\n                                  edit={this.state.edit}\n                                  updateLocation={() => {\n                                      this.fetchLocations();\n                                      this.setState({modal: false, edit: false, index: -1});\n\n                                  }}\n                                  handleClose={() => {\n                                      this.fetchLocations();\n                                      this.setState({modal: false});\n\n                                  }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Locations;\n\nclass AddLocationModal extends Component {\n    state = {\n        modal: false,\n        edit: false,\n        location: {},\n        title: 'Add'\n\n    }\n\n    handleClose = () => {\n        this.setState({modal: false});\n        if (this.props && this.props.updateLocation)\n            this.props.updateLocation();\n        else {\n            this.props.handleClose()\n        }\n    }\n    handleShow = () => this.setState({modal: true});\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        //console.log(\"i;m recving \",nextProps)\n        this.setState({modal: nextProps.modal, edit: nextProps.edit, title: 'Add'})\n        if (nextProps.edit) {\n            if (nextProps.location) {\n                this.setState({title: 'Edit', edit: true, location: nextProps.location});\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n\n                <Modal show={this.state.modal} onHide={this.handleClose} size=\"lg\">\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.state.title} Location</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <AddLocation edit={this.state.edit} location={this.state.location}\n                                     updateLocation={this.props.updateLocation}\n                                     handleClose={this.handleClose}\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Col, Form, FormControl} from 'react-bootstrap'\nimport MediaSingle from \"./MediaSingle\";\n\nclass SubScriptionControl extends Component {\n\n    state = {\n        subscribeChecker: false,\n        socialMediaChecker: false,\n        videoChecker: false,\n        offerChecker: false,\n        imageNum: 0,\n        videoNum: 0,\n        customPanoramaChecker: false,\n        priorityABChecker: false,\n        selectedPeriodIndex: 0,//0-Year 1-Month\n        subscriptionDate: new Date().toISOString().substr(0, 10),\n        custom360Link: '',\n        offerLink: '',\n\n\n    };\n\n    componentWillMount() {\n        this.checkProps(this.props);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.checkProps(nextProps)\n    }\n\n    checkProps = (props) => {\n        if (props && props.subscriptionInfo && props.subscriptionInfo.subscriptionDate) {\n            this.state = props.subscriptionInfo;\n        }\n    }\n\n    componentDidMount() {\n        this.update();\n    }\n\n    update = () => {\n        this.props.update(this.state);\n    };\n    onCheckerChange = (key, e) => {\n        this.setState({[key]: e.target.checked}, () => this.update())\n    }\n    onPeriodChange = (e) => {\n        this.setState({selectedPeriodIndex: e.target.selectedIndex}, () => this.update())\n    };\n\n    updatePanorama = (link) => {\n        this.setState({custom360Link: link}, () => this.update());\n    };\n    updateOfferLink = (link) => {\n        this.setState({offerLink: link}, () => this.update());\n    };\n\n    render() {\n\n\n        return (\n            <div>\n                <div>\n                    <h2>Subscription Control</h2>\n                </div>\n\n                <Form>\n                    <Form.Row>\n                        <Form.Group>\n                            <Form.Check\n                                checked={this.state.priorityABChecker}\n                                onClick={(e) => this.onCheckerChange('priorityABChecker', e)}\n                                custom\n                                type={'checkbox'}\n                                label={`Priority (Top Alpha.bet.)`}\n                                id={'priority'}\n                            />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group>\n                            <Form.Check\n                                checked={this.state.subscribeChecker}\n                                onClick={(e) => this.onCheckerChange('subscribeChecker', e)}\n                                custom\n                                type={'checkbox'}\n                                label={`Subscribed`}\n                                id={'subscription'}\n                            />\n                        </Form.Group>\n\n                    </Form.Row>\n                    {this.state.subscribeChecker &&\n                    <Form>\n                        <Form.Group as={Col}>\n\n                            <Form.Label>\n                                Validity\n                            </Form.Label>\n\n                            <Form.Control type=\"date\" value={this.state.subscriptionDate} onChange={(e) =>\n                                this.setState({subscriptionDate: e.target.value}, () => this.update())}\n                                          placeholder=\"Subscriptoin date\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col}>\n\n                            <Form.Label>\n                                Validity\n                            </Form.Label>\n                            <FormControl as={'select'} onChange={this.onPeriodChange}>\n                                <option key={0}>Year</option>\n                                <option key={1}>Month</option>\n                            </FormControl>\n                        </Form.Group>\n                    </Form>\n                    }\n\n\n                    <Form.Row>\n                        <Form.Group>\n                            <Form.Check\n                                checked={this.state.socialMediaChecker}\n                                onClick={(e) => this.onCheckerChange('socialMediaChecker', e)}\n                                custom\n                                type={'checkbox'}\n                                label={`Social Media`}\n                                id={'socialMedia'}\n                            />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group>\n                            <Form.Check\n                                checked={this.state.videoChecker}\n                                onClick={(e) => this.onCheckerChange('videoChecker', e)}\n                                custom\n                                id={'video'}\n                                type={'checkbox'}\n                                label={`Video`}\n                            />\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group>\n                            <Form.Check\n                                checked={this.state.customPanoramaChecker}\n                                onClick={(e) => this.onCheckerChange('customPanoramaChecker', e)}\n                                custom\n                                id={'360'}\n                                type={'checkbox'}\n                                label={`Custom 360`}\n                            />\n                        </Form.Group>\n                    </Form.Row>\n                    {this.state.customPanoramaChecker &&\n                    <MediaSingle updateMedia={this.updatePanorama} icon={this.state.custom360Link}/>}\n                    <Form.Row>\n                        <Form.Group>\n                            <Form.Check\n                                checked={this.state.offerChecker}\n                                onClick={(e) => this.onCheckerChange('offerChecker', e)}\n                                custom\n                                id={'offer'}\n                                type={'checkbox'}\n                                label={`has offer`}\n                            />\n                        </Form.Group>\n                    </Form.Row>\n                    {this.state.offerChecker &&\n                    <MediaSingle updateMedia={this.updateOfferLink} icon={this.state.offerLink}/>}\n                </Form>\n\n\n            </div>\n        )\n    }\n\n\n}\n\nexport default SubScriptionControl;\n","import React, {Component} from 'react';\nimport Geosuggest from 'react-geosuggest';\nimport LocationPicker from 'react-location-picker';\n\n/* Default position */\n\n\nclass MapView extends Component {\n    state = {\n        address: \"New Cairo\",\n        position: {\n            lat: 30.017792,\n            lng: 31.3473752,\n        },\n\n    };\n\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.checkProps(nextProps);\n    }\n\n    componentWillMount() {\n        this.checkProps(this.props);\n    }\n\n    componentDidMount() {\n        this.update();\n    }\n\n    checkProps = (props) => {\n        if (props && props.location) {\n            let location = props.location;\n            if(location.longitude){\n                this.setState({\n                    address: location.address,\n                    position:{\n                        lat: location.latitude,\n                        lng: location.longitude}\n                })\n                //console.log(this.state)\n            }\n\n        }\n    };\n\n    update = () => {\n        if (this.props && this.props.update)\n            this.props.update(this.state.position, this.state.address)\n    };\n\n    handleLocationChange = ({position, address, places}) =>{\n\n        // Set new location\n        this.setState({position,address}, () => this.update());\n    }\n\n    onSuggestSelect = (suggest) => {\n        if (suggest && suggest.label)\n            this.setState({position: suggest.location, address: suggest.label}, () => this.update());\n        //console.log(suggest);\n\n        //this._geoSuggest.blur();\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h4>{this.state.address}</h4>\n                <div>\n                    <Geosuggest\n                        style={{\n                            width: '100%',\n                            height: '40px',\n                            paddingLeft: '16px',\n                            marginTop: '2px',\n                            marginBottom: '100px'\n                        }}\n                        ref={el => this._geoSuggest = el}\n                        country={'EG'}\n                        onSuggestSelect={this.onSuggestSelect}\n                    />\n                    <LocationPicker\n                        containerElement={<div style={{height: '100%'}}/>}\n                        mapElement={<div style={{height: '400px'}}/>}\n                        defaultPosition={{\n                            lat: this.state.position.lat,\n                            lng: this.state.position.lng\n                        }}\n                        onChange={this.handleLocationChange}\n                        radius={1}\n                        zoom={15}\n                    />\n\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MapView\n","import React, {Component} from 'react';\nimport {Form, Button, Row, Col, ListGroup, Alert, Modal, Container, FormControl} from 'react-bootstrap'\nimport {useState, useEffect, useRef} from 'react'\nimport Media from \"./Media\";\nimport SocialMedia from \"./SocialMedia\";\nimport baseService from \"../services/baseService\";\nimport DragableList from \"../customComponents/DragableList\";\nimport SubScriptionControl from \"./SubScriptionControl\";\nimport MapView from \"../customComponents/MapView\";\nimport {confirmAlert} from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass AddPlace extends Component {\n    state = {\n        modal: false,\n        categories: [],\n        name: '',\n        nameAr: '',\n        desc: '',\n        descAr: '',\n        media: [],\n        loading: true,\n        title: 'Add',\n        edit: false,\n        locations: [],\n        selectedLocationIndex: 0,\n        selectedCategoryIndex: 0,\n        selectedSubCategoryIndex: 0,\n        phones: [],\n        emails: [],\n        workingHours: [],\n        website: '',\n        phone: '',\n        email: '',\n        workingHourFrom: '',\n        workingHourTo: '',\n        subscriptionInfo: {},\n        place: {},\n        socialMedia: [],\n        mapLocation: {}\n\n\n    };\n\n    componentWillMount() {\n        this.fetchData();\n\n    }\n\n    fetchData = async () => {\n        let categories = await baseService.getCategories();\n        let locations = await baseService.getLocations();\n        this.setState({categories, locations, loading: false});\n        this.checkProps(this.props);\n    }\n    updateSubscriptionInfo = (subscriptionInfo) => {\n        this.setState({subscriptionInfo});\n    }\n    checkProps = (nextProps) => {\n        if (nextProps.edit) {\n            let place = nextProps.place;\n            if (place) {\n                //the gotten place has the full location/category/subcategoryId\n                let selectedLocationIndex = 0;\n                let selectedCategoryIndex = 0;\n                let selectedSubCategoryIndex = 0;\n\n                try{\n                    selectedLocationIndex = this.state.locations.findIndex((singleLocation) => singleLocation._id === place.location._id);\n                    selectedCategoryIndex = this.state.locations[selectedLocationIndex].categories.findIndex((singleCategory) => singleCategory._id === place.category._id)\n                    selectedSubCategoryIndex = this.state.locations[selectedLocationIndex].categories[selectedCategoryIndex].subCategories.findIndex((singleSubCategory) => singleSubCategory._id === place.subCategory);\n\n                }catch (e) {\n                    console.log('Error while fetching the indexes')\n                }\n                console.log('selected locInd',selectedLocationIndex,'\\nSelected catInd',selectedCategoryIndex,'\\n selectedSubIn',selectedSubCategoryIndex)\n                //edit category\n                this.setState({\n                    place: nextProps.place,\n                    edit: true,\n                    title: 'Edit',\n                    name: place.name,\n                    nameAr: place.nameAr,\n                    desc: place.desc,\n                    descAr: place.descAr,\n                    media: place.media,\n                    phones: place.phone,\n                    emails: place.email,\n                    workingHours: place.workingHours,\n                    website: place.website,\n                    subscriptionInfo: place.subscriptionInfo,\n                    socialMedia: place.socialMedia,\n                    mapLocation: place.mapLocation,\n                    selectedLocationIndex: selectedLocationIndex !== -1 ? selectedLocationIndex : 0,\n                    selectedCategoryIndex: selectedCategoryIndex !== -1 ? selectedCategoryIndex : 0,\n                    selectedSubCategoryIndex: selectedSubCategoryIndex !== -1 ? selectedSubCategoryIndex : 0,\n\n                })\n            }\n\n        }\n    }\n\n    alert = (title) => {\n        confirmAlert({\n            title: '' + title,\n            message: '',\n            buttons: [{label: 'Dismiss'}]\n        });\n    };\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.checkProps(nextProps);\n\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n\n    onLocationChange = (e) => {\n        this.setState({selectedLocationIndex: e.target.selectedIndex,\n            selectedCategoryIndex: 0,\n            selectedSubCategoryIndex: 0})\n    };\n    onCategoryChange = (e) => {\n        this.setState({selectedCategoryIndex: e.target.selectedIndex})\n    };\n    onSubCategoryChange = (e) => {\n        this.setState({selectedSubCategoryIndex: e.target.selectedIndex})\n    };\n    addCategory = () => {\n        let locationCategories = [...this.state.locationCategories];\n        if (locationCategories.includes(this.state.categories[this.state.selectedCategory])) {\n            alert('AddLocation already has this category');\n            return;\n        }\n        locationCategories.push(this.state.categories[this.state.selectedCategory]);\n        this.setState({locationCategories});\n    };\n\n    updateSocialMediaList = (socialMediaList) => {\n        //keep social media sync\n        this.setState({socialMedia: socialMediaList});\n\n    };\n    updateMediaFiles = (media) => {\n        console.log(\"updating media to \", media);\n        this.setState({media});\n    }\n\n    addPhone = () => {\n        let phones = [...this.state.phones];\n        phones.push(this.state.phone);\n        this.setState({phones, phone: ''});\n    };\n    removePhone = (index) => {\n        let phones = [...this.state.phones];\n        phones.splice(index, 1)\n        this.setState({phones});\n    };\n    addEmail = () => {\n        let emails = [...this.state.emails];\n        emails.push(this.state.email);\n        this.setState({emails, email: ''});\n    };\n    removeEmail = (index) => {\n        let emails = [...this.state.emails];\n        emails.splice(index, 1);\n        this.setState({emails});\n    };\n    timeFormat = (time) => {\n        let timeSplit = time.split(':'),\n            hours,\n            minutes,\n            meridian;\n        hours = timeSplit[0];\n        minutes = timeSplit[1];\n        if (hours > 12) {\n            meridian = 'PM';\n            hours -= 12;\n        } else if (hours < 12) {\n            meridian = 'AM';\n            if (hours === 0) {\n                hours = 12;\n            }\n        } else {\n            meridian = 'PM';\n        }\n        return hours + ':' + minutes + ' ' + meridian;\n        //alert(hours + ':' + minutes + ' ' + meridian);\n    }\n    addWorkingHour = () => {\n        let workingFrom = this.state.workingHourFrom;\n        let workingTo = this.state.workingHourTo;\n        if (!workingFrom || !workingTo) {\n            alert('Please choose correct time');\n            return;\n        }\n\n        let workingHours = [...this.state.workingHours];\n        let workingHour = this.timeFormat(workingFrom) + \" To \" + this.timeFormat(workingTo);\n        workingHours.push(workingHour);\n        this.setState({workingHours, workingHourFrom: '', workingHourTo: ''});\n    };\n    removeWorkingHour = (index) => {\n        let workingHours = [...this.state.workingHours];\n        workingHours.splice(index, 1);\n        this.setState({workingHours});\n    };\n    updateMap = (position, address) => {\n        let mapLocation = {\n            longitude: position.lng,\n            latitude: position.lat,\n            address: address\n        };\n        this.setState({mapLocation})\n    };\n    validation = (place) => {\n        console.log('validating ', place);\n        let valid = true;\n        if (place) {\n            if (\n                place.name === '' ||\n                place.nameAr === '' ||\n                place.desc === '' ||\n                place.descAr === '' ||\n                place.category === '' ||\n                place.subCategory === '' ||\n                place.location === '' ||\n                place.mapLocation === {} ||\n                place.subscriptionInfo === {}\n            )\n                valid = false;\n        }\n        return valid;\n    }\n    addPlace = () => {\n        let location = this.state.locations[this.state.selectedLocationIndex];\n   //     console.log(this.state.selectedCategoryIndex);\n        let category = location.categories[this.state.selectedCategoryIndex]._id;//get categoryId from the selected one\n//console.log(this.state.selectedSubCategoryIndex);\n        let subCategory = location.categories[this.state.selectedCategoryIndex].subCategories[this.state.selectedSubCategoryIndex]._id;\n\n        console.log('Iam selecting category id ', category)\n        console.log('Iam selecting Subcategory id ', subCategory)\n        //do validation\n        let place;\n        if (this.state.edit) {\n            place = this.state.place;\n\n\n            place.name = this.state.name;\n            place.nameAr = this.state.nameAr;\n            place.desc = this.state.desc;\n            place.descAr = this.state.descAr;\n            place.media = this.state.media;\n            place.category = category;\n            place.subCategory = subCategory;\n            place.phone = this.state.phones;\n            place.email = this.state.emails;\n            place.workingHours = this.state.workingHours;\n            place.website = this.state.website;\n            place.location = location._id;\n            place.mapLocation = this.state.mapLocation;\n            place.socialMedia = this.state.socialMedia;\n            place.subscriptionInfo = this.state.subscriptionInfo;\n            if (this.validation(place)) {\n                baseService.updatePlace(place).catch((err) => console.log(err));\n                if (this.props && this.props.updatePlace)\n                    this.props.updatePlace();\n            } else\n                alert('Please fill all fields')\n\n\n        } else {\n            place = {\n                name: this.state.name,\n                nameAr: this.state.nameAr,\n                desc: this.state.desc,\n                descAr: this.state.descAr,\n                media: this.state.media,\n                category: category,\n                subCategory: subCategory,\n                phone: this.state.phones,\n                email: this.state.emails,\n                workingHours: this.state.workingHours,\n                website: this.state.website,\n                location: location._id,\n                mapLocation: this.state.mapLocation,\n                socialMedia: this.state.socialMedia,\n                subscriptionInfo: this.state.subscriptionInfo,\n\n\n            };\n            if (this.validation(place)) {\n                baseService.addPlace(place).then((response) => console.log(response)).catch((err) => console.log(err))\n\n            } else\n                alert('Please fill all fields')\n        }\n        if (this.props && this.props.handleClose && this.validation(place))\n            this.props.handleClose()\n\n    }\n\n    render() {\n        if (this.state.categories.length === 0)\n            return (<div style={{color: 'red'}}>\n                Please Add Location first\n                <Button className=\"badge-info col-6\" href={'/Categories'}>\n                    <i className=\"fa fa-plus\"/> Add Category\n\n                </Button>\n            </div>);\n\n        return (\n            <div>\n                <Container class>\n                    {!this.props.handleClose && <h2> Add Place</h2>}\n                    <Form>\n                        <Form.Group as={Row}>\n                            <Form.Label column sm=\"2\">\n                                Name (English)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control type=\"text\" placeholder=\"Place name\"\n                                              onChange={(e) => this.onChange('name', e)} value={this.state.name}/>\n                            </Col>\n                            <Form.Label column sm=\"2\">\n                                Name (Arabic)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control type=\"text\" placeholder=\"Place name (Arabic)\"\n                                              onChange={(e) => this.onChange('nameAr', e)} value={this.state.nameAr}/>\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                            <Form.Label column sm=\"2\">\n                                Description (English)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control as={'textarea'} placeholder=\"Place Description\"\n                                              onChange={(e) => this.onChange('desc', e)} value={this.state.desc}/>\n                            </Col>\n                            <Form.Label column sm=\"2\">\n                                Description (Arabic)\n                            </Form.Label>\n                            <Col sm=\"4\">\n                                <Form.Control as={'textarea'} placeholder=\"Place Description (Arabic)\"\n                                              onChange={(e) => this.onChange('descAr', e)} value={this.state.descAr}/>\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                            <Form.Label column sm=\"2\">\n                                Website\n                            </Form.Label>\n                            <Col>\n                                <Form.Control type=\"text\" placeholder=\"Website\"\n                                              onChange={(e) => this.onChange('website', e)} value={this.state.website}/>\n                            </Col>\n\n                        </Form.Group>\n\n\n                        <Form>\n                            <Form.Group>\n\n                                <Form.Row>\n                                    <Form.Group as={Col}>\n\n                                        <Form.Label>\n                                            Please choose location\n                                        </Form.Label>\n                                        <FormControl as={'select'} onChange={this.onLocationChange}\n                                                     value={this.state.selectedLocationIndex}>\n                                            {this.state.locations.map((location, index) => {\n                                                return (\n                                                    <option key={index}\n                                                            value={index}>{location.name} / {location.nameAr}</option>\n                                                )\n                                            })}\n                                        </FormControl>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col}>\n\n                                        <Form.Label>\n                                            Please choose Category\n                                        </Form.Label>\n                                        <FormControl as={'select'}\n                                                     onChange={this.onCategoryChange}\n                                                     value={this.state.selectedCategoryIndex}\n                                        >\n                                            {this.state.locations[this.state.selectedLocationIndex] &&\n                                            this.state.locations[this.state.selectedLocationIndex].categories.map((category, index) => {\n                                                return (\n                                                    <option key={index}\n                                                            value={index}>{category.name} / {category.nameAr}</option>\n                                                )\n                                            })}\n                                        </FormControl>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col}>\n\n                                        <Form.Label>\n                                            Choose SubCategory\n                                        </Form.Label>\n                                        <FormControl as={'select'}\n                                                     onChange={this.onSubCategoryChange}\n                                                     value={this.state.selectedSubCategoryIndex}\n                                        >\n                                            {this.state.locations[this.state.selectedLocationIndex] && this.state.locations[this.state.selectedLocationIndex].categories[this.state.selectedCategoryIndex] &&\n                                            this.state.locations[this.state.selectedLocationIndex].categories[this.state.selectedCategoryIndex].subCategories.map((category, index) => {\n                                                return (\n                                                    <option key={index} value={index}>{category.name} / {category.nameAr}</option>\n                                                )\n                                            })}\n                                        </FormControl>\n                                    </Form.Group>\n\n\n                                </Form.Row>\n                            </Form.Group>\n                        </Form>\n\n\n                        <Form.Group>\n                            <Form.Label>\n                                Please Add phone\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"text\" placeholder=\"Phone Number\"\n                                                  onChange={(e) => this.onChange('phone', e)} value={this.state.phone}/>\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addPhone()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                            {this.state.phones.length !== 0 ? this.state.phones.map((phone, index) => {\n                                    return (\n                                        <ListGroup.Item>\n                                            <div className={'row'}>\n                                                <p className={'col'}>{phone}</p>\n                                                <Button variant=\"danger\"\n                                                        onClick={() => this.removePhone(index)}>Remove</Button>\n                                            </div>\n                                        </ListGroup.Item>)\n                                })\n                                :\n                                <ListGroup.Item>\n                                    <p className={'col'}>No Phones added yet</p>\n                                </ListGroup.Item>\n                            }\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>\n                                Please Add Email\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"text\" placeholder=\"Email\"\n                                                  onChange={(e) => this.onChange('email', e)} value={this.state.email}/>\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addEmail()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                            {this.state.emails.length !== 0 ? this.state.emails.map((email, index) => {\n                                    return (\n                                        <ListGroup.Item>\n                                            <div className={'row'}>\n                                                <p className={'col'}>{email}</p>\n                                                <Button variant=\"danger\"\n                                                        onClick={() => this.removeEmail(index)}>Remove</Button>\n                                            </div>\n                                        </ListGroup.Item>)\n                                })\n                                :\n                                <ListGroup.Item>\n                                    <p className={'col'}>No Emails added yet</p>\n                                </ListGroup.Item>\n                            }\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>\n                                Please Working Hours\n                            </Form.Label>\n                            <Form.Row>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"time\" placeholder=\"Working Hours From\"\n                                                  onChange={(e) => this.onChange('workingHourFrom', e)}\n                                                  value={this.state.workingHourFrom}/>\n\n                                </Form.Group>\n                                <p>To</p>\n                                <Form.Group as={Col}>\n                                    <Form.Control type=\"time\" placeholder=\"Working Hours To\"\n                                                  onChange={(e) => this.onChange('workingHourTo', e)}\n                                                  value={this.state.workingHourTo}/>\n                                </Form.Group>\n\n                                <Form.Group as={Col} className={'center'}>\n                                    <Button className=\"badge-info col-6\" onClick={() => this.addWorkingHour()}><i\n                                        className=\"fa fa-plus\"/> Add</Button>\n                                </Form.Group>\n                            </Form.Row>\n                            {this.state.workingHours.length !== 0 ? this.state.workingHours.map((workingHour, index) => {\n                                    return (\n                                        <ListGroup.Item>\n                                            <div className={'row'}>\n                                                <p className={'col'}>{workingHour}</p>\n                                                <Button variant=\"danger\"\n                                                        onClick={() => this.removeWorkingHour(index)}>Remove</Button>\n                                            </div>\n                                        </ListGroup.Item>)\n                                })\n                                :\n                                <ListGroup.Item>\n                                    <p className={'col'}>No Working Hours added yet</p>\n                                </ListGroup.Item>\n                            }\n                        </Form.Group>\n\n\n                        <Media media={this.state.media} updateMedia={this.updateMediaFiles}/>\n\n                        <div className={'p-2'}/>\n\n                        <SocialMedia socialMediaList={this.state.socialMedia}\n                                     updateSocialMediaList={this.updateSocialMediaList}/>\n\n\n                        <SubScriptionControl update={this.updateSubscriptionInfo}\n                                             subscriptionInfo={this.state.subscriptionInfo}/>\n                        <div className={'p-2'}/>\n                        <MapView update={this.updateMap} location={this.state.mapLocation}/>\n                        <div className={'p-2'}/>\n                        <Button variant=\"primary\"\n                                onClick={() => this.addPlace()}>{this.state.title} Place</Button>\n\n\n                    </Form>\n\n\n                </Container>\n\n\n            </div>\n        );\n    }\n}\n\nexport default AddPlace;\n","import React, {Component} from 'react';\nimport baseService from '../services/baseService'\nimport {Button, Form, Modal, Table} from \"react-bootstrap\";\nimport AddPlace from \"./AddPlace\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nclass Places extends Component {\n    state = {\n        places: [],\n        loading: true,\n        modal: false,\n        index: -1,\n        edit: false,\n\n    }\n\n    componentWillMount() {\n        this.fetchPlaces();\n    }\n\n    fetchPlaces = () => {\n        baseService.getPlaces().then((places) => {\n            this.setState({places, loading: false})\n        }).catch((err) => console.log(err))\n    };\n\n    addLocation = () => {\n\n    };\n\n    alert = (title) => {\n        confirmAlert({\n            title: '' + title,\n            message: '',\n            buttons: [{label: 'Dismiss'}]\n        });\n    };\n\n    removePlace = async (place) => {\n        if (window.confirm(\"Are you sure you want to delete this place?\")){\n            let response = await baseService.deletePlace(place);\n            if (response) {\n                this.fetchPlaces();//reload\n            } else {\n                this.alert('failed to delete the place')\n            }\n        }\n\n\n    };\n\n    render() {\n\n        return (\n            <div>\n                <h2>Places/Companies</h2>\n                <Button variant=\"success\" onClick={() => this.setState({modal: true})}>\n                    <i className=\"fa fa-plus\"/> Add Place\n                </Button>\n\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Name Ar</th>\n                        <th>Desc</th>\n                        <th>Desc Ar</th>\n                        <th>Social Media</th>\n                        <th>Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.places.map((place, index) => {\n                        return (\n                            <tr>\n                                <td>{index}</td>\n                                <td>{place.name}</td>\n                                <td>{place.nameAr}</td>\n                                <td>{place.desc}</td>\n                                <td>{place.descAr}</td>\n                                <td>{place.socialMedia && place.socialMedia.map((singleSocialMedia) => {\n                                    return (\n                                        <div>{singleSocialMedia.link}</div>\n                                    )\n                                })}</td>\n                                <td>\n                                    <i className=\"fa fa-trash fa-2x\" style={{color: 'red'}}\n                                       onClick={() => this.removePlace(place)}/>\n                                    <i className=\"fa fa-edit fa-2x\" style={{color: 'green'}}\n                                       onClick={() => this.setState({index, edit: true, modal: true})}/>\n                                </td>\n\n                            </tr>\n                        )\n\n                    })}\n\n                    </tbody>\n                </Table>\n                <AddPlaceModal modal={this.state.modal}\n                               place={this.state.places[this.state.index]}\n                               edit={this.state.edit}\n                               updatePlace={() => {\n                                   this.fetchPlaces();\n                                   this.setState({modal: false, edit: false, index: -1});\n                               }}\n                               handleClose={() => {\n                                   this.fetchPlaces();\n                                   this.setState({modal: false});\n                               }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Places;\n\nclass AddPlaceModal extends Component {\n    state = {\n        modal: false,\n        edit: false,\n        place: {},\n        title: 'Add'\n\n    }\n\n  /*\n    searchPlacesAr = (searchText) =>{\n        //validate the input\n        if(searchText && searchText !== ''){\n            let matchingPlaces = [];\n            this.state.places.map((place) =>{\n                //we check if we got a match\n                if(place.nameAr.includes(searchText))\n                    matchingPlaces.push(place);//if yes just add it to the array\n            })\n            //after finishing the mapping we do update state to show the result\n            this.setState({placesFiltered:matchingPlaces})\n        }\n        else{\n            //search input is empty or undefined we get back the original list\n            this.setState({placesFiltered:this.state.originaPlaceslList})\n        }\n\n\n    };\n     */\n\n    handleClose = () => {\n        this.setState({modal: false});\n        if (this.props && this.props.updatePlace)\n            this.props.updatePlace();\n        else {\n            this.props.handleClose()\n        }\n    }\n    handleShow = () => this.setState({modal: true});\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        //console.log(\"i;m recving \",nextProps)\n        this.setState({modal: nextProps.modal, edit: nextProps.edit, title: 'Add'});\n        if (nextProps.edit) {\n            if (nextProps.place) {\n                this.setState({title: 'Edit', edit: true, place: nextProps.place});\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n\n                <Modal show={this.state.modal} onHide={this.handleClose} size=\"lg\">\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.state.title} Place</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <AddPlace edit={this.state.edit}\n                                  place={this.state.place}\n                                  updatePlace={this.props.updatePlace}\n                                  handleClose={this.handleClose}\n                        />\n                    </Modal.Body>\n\n                </Modal>\n            </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Form, Button} from \"react-bootstrap\";\nimport baseService from \"../services/baseService\";\nimport { Redirect } from 'react-router-dom'\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        error: '',\n    };\n\n\n    dismissError = () => {\n        this.setState({error: ''});\n    }\n\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n\n        if (!this.state.email || this.state.email === '') {\n            return alert('Email is required')\n        }\n\n        if (!this.state.password || this.state.password === '') {\n            return alert('Password is required');\n        }\n\n        baseService.login(\n            {\n                email: this.state.email,\n                password: this.state.password\n            }\n        ).then((response) =>{\n            //do the login steps\n            //save the token\n            //window.localStorage.setItem('token', value);\n            if(response.token){\n                window.localStorage.setItem('token', response.token);\n                //push the url\n                this.props.history.push('/admin')\n\n            }\n            else{\n                alert('Login Failed please try again')\n            }\n\n\n        }).catch((err) =>{console.log(err)})\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value});\n    };\n\n\n    render() {\n        if(baseService.checkLogin()){\n            console.log('@login yes iam logged in ');\n            this.props.history.push('/admin')\n\n        }\n        return (\n            <div className=\"Login\">\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={this.state.email}\n                                      onChange={(e) => this.onChange('email', e)}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password}\n                                      onChange={(e) => this.onChange('password', e)}/>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\" onClick={(e) => this.handleSubmit(e)}>\n                        Login\n                    </Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport {Form} from \"react-bootstrap\";\nimport baseService from '../services/baseService'\nimport Table from \"react-bootstrap/Table\";\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\n//unique function\nArray.prototype.unique = function() {\n    return this.filter(function (value, index, self) {\n        return self.indexOf(value) === index;\n    });\n};\n\nclass Visitors extends Component {\n    state = {\n        visitors: [],\n        loading: true,\n\n    };\n\n    componentWillMount() {\n        baseService.getVisitors().then((visitors) => {\n            console.log(visitors)\n            this.setState({\n                visitors,\n                loading: false\n            })\n        }).catch((err) => console.log(err));\n    }\n\n\n\n    getUniqueVisitors = () =>{\n        //get unique visitors by unique id\n      if(this.state.visitors.length > 0){\n          const visitors = this.state.visitors.map(visitor => visitor.deviceId);\n          return visitors.unique().length;\n      }\n      else\n          return 0;\n    };\n    getVisitors = (platform) =>{\n        if(this.state.visitors.length > 0){\n            const visitors = this.state.visitors.filter(visitor => visitor.platform === platform);\n            return visitors.length;\n        }\n        else\n            return 0;\n    };\n    render() {\n        return (\n            <div>\n                <h2>Visitors</h2>\n\n\n                <Form>\n                    <p>Number of total visitors# {this.state.visitors.length}</p>\n                    <p>Number of Unique visitors# {this.getUniqueVisitors()}</p>\n                    <p>Number of IOS visitors# {this.getVisitors('ios')}</p>\n                    <p>Number of Android visitors# {this.getVisitors('android')}</p>\n                    <Table striped bordered hover>\n                        <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Carrier</th>\n                            <th>DeviceId</th>\n                            <th>Platform</th>\n                            <th>ipAddress</th>\n                            <th>uniqueId</th>\n                            <th>isTablet</th>\n                            <th>landscape</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n\n                        {this.state.visitors.length > 0 ? this.state.visitors.map((visitor, index) => {\n                            return (\n                                <tr>\n                                    <td>{index}</td>\n                                    <td>{visitor.carrier}</td>\n                                    <td>{visitor.deviceId}</td>\n                                    <td>{visitor.platform}</td>\n                                    <td>{visitor.ipAddress}</td>\n                                    <td>{visitor.uniqueId}</td>\n                                    <td>{visitor.isTablet? 'YES' : 'NO'}</td>\n                                    <td>{visitor.landscape? 'YES' : 'NO'}</td>\n\n\n                                </tr>\n                            )\n                        }) : <tr>\n                            <td colSpan=\"8\">\n                                <center>No Visitors yet</center>\n                            </td>\n                        </tr>}\n\n                        </tbody>\n                    </Table>\n                </Form>\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default Visitors;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect, withRouter} from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport AddLocation from './components/AddLocation';\nimport NavBar from \"./components/NavBar\";\nimport Categories from \"./components/Categories\";\nimport AddCategory from \"./components/AddCategory\";\nimport Locations from \"./components/Locations\";\nimport Places from \"./components/Places\";\nimport AddPlace from \"./components/AddPlace\";\nimport MapView from \"./customComponents/MapView\";\nimport Login from \"./components/Login\";\nimport baseService from \"./services/baseService\";\nimport Visitors from \"./components/Visitors\";\n\nfunction RouterComponent() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Home}/>\n                <PrivateRoute exact path=\"/admin/\" component={Home}/>\n                <PrivateRoute exact path=\"/admin/addLocation\" component={AddLocation}/>\n                <PrivateRoute exact path=\"/admin/categories\" component={Categories}/>\n                <PrivateRoute exact path=\"/admin/about\" component={About}/>\n                <PrivateRoute exact path=\"/admin/addCategory\" component={AddCategory}/>\n                <PrivateRoute exact path=\"/admin/Locations\" component={Locations}/>\n                <PrivateRoute exact path=\"/admin/Places\" component={Places}/>\n                <PrivateRoute exact path=\"/admin/addPlace\" component={AddPlace}/>\n                <PrivateRoute exact path=\"/admin/MapView\" component={MapView}/>\n                <PrivateRoute exact path=\"/admin/visitors\" component={Visitors}/>\n                <Route exact path=\"/Logout\" component={Logout}/>\n                <Route exact path=\"/Login\" component={Login}/>\n\n\n            </Switch>\n        </Router>\n    );\n}\n\nconst PrivateRoute = ({component: Component}, ...rest) => (\n    <Route\n        {...rest}\n        render={(props) => (\n            baseService.checkLogin()\n                ? <div><NavBar/> <Component {...props} /></div>\n                : <Redirect to={{\n                    pathname: '/login',\n                    state: {from: props.location}\n                }}/>\n        )}\n    />\n);\n\nconst Logout = withRouter(({history}) =>{\n        baseService.logout();\n        history.push(\"/login\");\n        return null;\n}\n\n);\n\n\nexport default RouterComponent;\n","import React from 'react';\nimport './App.css';\nimport RouterComponent from \"./Router\";\nimport 'font-awesome/css/font-awesome.min.css';\n\nfunction App() {\n  return (\n    <RouterComponent/>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}