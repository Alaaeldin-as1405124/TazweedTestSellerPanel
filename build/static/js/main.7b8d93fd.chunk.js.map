{"version":3,"sources":["services/baseService.js","components/Login.js","components/Register.js","components/Home.js","components/NavBar.js","components/AddTimeSlot.js","components/ConfirmationModal.js","components/Appointments.js","Router.js","App.js","index.js"],"names":["WebApiBaseUrl","BaseService","window","localStorage","getItem","fetch","method","headers","this","getToken","response","ok","json","timeSlot","body","JSON","stringify","appointment","token","length","console","log","removeItem","user","authUser","Login","state","username","password","error","dismissError","setState","handleSubmit","evt","preventDefault","baseService","login","seller","then","setItem","props","history","push","alert","catch","err","onChange","key","e","target","value","checkLogin","Form","Group","Label","Control","type","placeholder","Button","variant","onClick","Component","Register","name","nameAr","desc","descAr","register","a","className","Home","style","flex","minHeight","backgroundPosition","backgroundSize","padding","id","activeKey","onSelect","k","eventKey","title","NavBar","href","to","AddTimeSlot","timeSlots","startTime","endTime","getTimeSlots","checkTimeValidity","result","forEach","singleTimeSlot","addTime","addTimeSlot","responnse","removeTimeSlot","index","confirm","splice","deleteTimeSlot","timeConvert","time","newTime","split","map","singleTime","toString","match","slice","join","Row","ListGroup","Item","ConfirmationModal","Modal","show","onHide","close","Header","closeButton","Title","Body","Footer","reject","accept","Appointments","appointments","appointmentsFiltered","selectedAppointment","filter","eventClicked","updateAppointmentStatus","status","newAppointment","updateAppointment","filterCondition","appoinntments","singleAppointment","appointmentDate","Date","toDateString","onAppointmentClick","renderAppointments","Table","striped","bordered","hover","clientId","requestDate","colSpan","toLowerCase","getAppointments","Dropdown","Toggle","Menu","PrivateRoute","component","rest","render","pathname","from","location","Logout","withRouter","logout","RouterComponent","exact","path","App","Router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7b8d93fd.chunk.js","sourcesContent":["const WebApiBaseUrl = `http://tazweed.ay-legend.com:8000/api`;\n\nexport default class BaseService {\n\n    static getApiUrl() {\n        return WebApiBaseUrl;\n    }\n\n    static getToken() {\n        return 'Bearer ' + window.localStorage.getItem('token');\n    }\n\n    static async getTimeSlots() {\n        const response = await fetch(`${WebApiBaseUrl}/timeSlots/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.getToken()\n\n            }\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok;\n\n    }\n\n    static async addTimeSlot(timeSlot) {\n\n        const response = await fetch(`${WebApiBaseUrl}/timeSlots/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.getToken()\n\n            },\n            body: JSON.stringify(timeSlot)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n\n    static async deleteTimeSlot(timeSlot) {\n\n        const response = await fetch(`${WebApiBaseUrl}/timeSlots/`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.getToken()\n\n            },\n            body: JSON.stringify(timeSlot)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n\n    static async getAppointments() {\n\n        const response = await fetch(`${WebApiBaseUrl}/appointments/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.getToken()\n\n            }\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n\n    static async updateAppointment(appointment) {\n\n        const response = await fetch(`${WebApiBaseUrl}/appointments/`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.getToken()\n\n            },\n            body: JSON.stringify(appointment)\n        });\n\n        if (response.ok)\n            return await response.json();\n        else\n            return response.ok\n\n\n    }\n\n    j\n\n    static checkLogin() {\n        let token = window.localStorage.getItem('token');\n\n        if (token && token !== '' && token.length > 10) {\n            console.log('am check login and returning true');\n\n            return true\n        }\n        return false;\n\n    }\n\n    static logout() {\n        return window.localStorage.removeItem('token');\n    }\n\n    static async login(user) {\n\n        const authUser = await fetch(`${WebApiBaseUrl}/login/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n                //,'Authorization': token\n            },\n            body: JSON.stringify(user)\n        });\n\n        if (authUser.ok)\n            return await authUser.json();\n        else\n            return authUser.ok\n    }\n\n    static async register(user) {\n\n        const authUser = await fetch(`${WebApiBaseUrl}/users/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        });\n\n        if (authUser.ok)\n            return await authUser.json();\n        else\n            return authUser.ok\n    }\n\n}\n","import React, {Component} from 'react';\nimport {Form, Button} from \"react-bootstrap\";\nimport baseService from \"../services/baseService\";\nimport {Redirect} from 'react-router-dom'\n\nclass Login extends Component {\n    state = {\n        username: '',\n        password: '',\n        error: '',\n    };\n\n\n    dismissError = () => {\n        this.setState({error: ''});\n    }\n\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n\n        if (!this.state.username || this.state.username === '') {\n            return alert('username is required')\n        }\n\n        if (!this.state.password || this.state.password === '') {\n            return alert('Password is required');\n        }\n\n        baseService.login(\n            {\n                username: this.state.username,\n                password: this.state.password,\n                seller: true\n            }\n        ).then((response) => {\n            //do the login steps\n            //save the token\n            //window.localStorage.setItem('token', value);\n            if (response && response.token) {\n                window.localStorage.setItem('token', response.token);\n                //push the url\n                this.props.history.push('/appointments')\n\n            } else {\n                alert('Login Failed please try again')\n            }\n\n\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value});\n    };\n\n\n    render() {\n        if (baseService.checkLogin()) {\n            //console.log('@login yes iam logged in ');\n            if (this.props && this.props.history)\n                this.props.history.push('/Appointments')\n\n        }\n        return (\n            <div>\n                <center>\n                    <h2>Login</h2>\n                </center>\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter username\" value={this.state.username}\n                                      onChange={(e) => this.onChange('username', e)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password}\n                                      onChange={(e) => this.onChange('password', e)}/>\n                    </Form.Group>\n\n                    <center>\n                        <Button variant=\"primary\" type=\"submit\" onClick={(e) => this.handleSubmit(e)}>Login</Button>\n                    </center>\n\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport {Form, Button} from \"react-bootstrap/\";\nimport baseService from \"../services/baseService\";\n\nclass Register extends Component {\n    state = {\n        username: '',\n        password: '',\n        type: 2,\n        name: '',\n        nameAr: '',\n        desc: '',\n        descAr: '',\n    };\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n    register = async (evt) => {\n        evt.preventDefault();\n        let user = {...this.state};\n        //validation\n        if (user.username === '' || user.password === '' || user.name === '' || user.nameAr === '') {\n            alert('Please fill all fields');\n            return;\n        }\n\n        let result = await baseService.register(user);\n        if (!result) {\n            alert('failed to register')\n        } else {\n            alert('Registered successfully');\n            this.props.history.push('/Login');\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n\n                <h2 className={\"center\"}>Register</h2>\n\n\n                <Form>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter username\"\n                                      onChange={(e) => this.onChange('username', e)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter Password\"\n                                      onChange={(e) => this.onChange('password', e)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Shop Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter shop name\"\n                                      onChange={(e) => this.onChange('name', e)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Shop Name (Ar)</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter arabic shop name\"\n                                      onChange={(e) => this.onChange('nameAr', e)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter shop description\"\n                                      onChange={(e) => this.onChange('desc', e)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Description (Ar)</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter shop arabic description\"\n                                      onChange={(e) => this.onChange('descAr', e)} />\n                    </Form.Group>\n\n                    <center>\n                        <Button variant=\"primary\" type=\"submit\" onClick={(e) => this.register(e)}>Submit</Button>\n                    </center>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Register;\n\n","// Home.js\n\nimport React, {Component} from 'react';\n\nimport '../assets/customStyles.css';\nimport Login from \"./Login\";\nimport Button from \"react-bootstrap/Button\";\nimport {Link} from \"react-router-dom\";\nimport Register from \"./Register\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\n\nclass Home extends Component {\n    state = {\n        type: 'login'\n    }\n\n    render() {\n        return (\n            <div style={{\n                flex: 1, minHeight: '100%', backgroundPosition: 'center',\n                backgroundSize: 'cover',\n            }}>\n\n\n                <body style={{padding: 50}}>\n\n                <h2>Tazweed Test Seller Panel</h2>\n                <Tabs id=\"controlled-tab-example\" activeKey={this.state.type} onSelect={k => this.setState({type: k})}>\n                    <Tab eventKey=\"login\" title=\"Login\">\n                        <Login history={this.props.history}/>\n\n\n                    </Tab>\n\n                    <Tab eventKey=\"register\" title=\"Registration\">\n                        <Register history={this.props.history}/>\n                    </Tab>\n                </Tabs>\n                </body>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default function NavBar() {\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"#\">Tazweed Admin panel</a>\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                        <Link to={'/appointments'} className=\"nav-link\"> Appointments </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to={'/addTimeSlot'} className=\"nav-link\">Add Time slot</Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                        <Link to={'/Logout'} className=\"nav-link\">Logout</Link>\n                    </li>\n\n                </ul>\n            </nav>\n        </div>\n\n    )\n}\n","import React, {Component} from 'react';\n\nimport baseService from \"../services/baseService\";\nimport {Button, Form, ListGroup} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Col from \"react-bootstrap/Col\";\n\nclass AddTimeSlot extends Component {\n    state = {\n        timeSlots: [],\n        startTime: '',\n        endTime: ''\n    };\n\n    componentWillMount() {\n        this.getTimeSlots();\n    }\n\n    getTimeSlots = () => {\n        baseService.getTimeSlots().then((timeSlots) => {\n            console.log('timeslots from the server ', timeSlots)\n            this.setState({timeSlots})\n        })\n    }\n\n    onChange = (key, e) => {\n        this.setState({[key]: e.target.value})\n    };\n\n    checkTimeValidity = ()=>{\n        //TODO Advance time conflict check\n        //check if there is conflict\n        let result = true;\n        this.state.timeSlots.forEach((singleTimeSlot)=>{\n            if(this.state.startTime == singleTimeSlot.startTime || this.state.endTime == singleTimeSlot.endTime)\n                result= false;\n\n        })\n        return result;\n    }\n    addTime = () => {\n        let timeSlots = [...this.state.timeSlots];\n        if(this.state.startTime === '' || this.state.endTime=== ''){\n            alert('Please enter valid time');\n            return;\n        }\n        if(this.checkTimeValidity()){\n\n            timeSlots.push({\n                startTime: this.state.startTime,\n                endTime: this.state.endTime\n            });\n            baseService.addTimeSlot(timeSlots).then((responnse) => {\n                this.getTimeSlots();\n                this.setState({startTime:'',endTime:''})\n            }).catch((err) => console.log(err));\n        }\n        else{\n            alert(\"Time conflict\")\n        }\n\n    }\n\n    removeTimeSlot = (index) => {\n        if (window.confirm(\"Are you sure you want to this time slot? It won't affect the current booked appointments, it will be applied for the future appointments\")) {\n            let timeSlots = [...this.state.timeSlots];\n            timeSlots.splice(index, 1);\n            baseService.deleteTimeSlot(timeSlots).then((response) => {\n                this.getTimeSlots();//update the current state after changing to the database\n            }).catch((err) => console.log(err));\n        }\n\n    }\n\n    timeConvert = (time) => {\n        //do the format\n        time = time.startTime +' to '+time.endTime;\n        let newTime = time.split(' to ');\n        newTime.map((singleTime, index) => {\n            // Check correct time format and split into components\n            singleTime = singleTime.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n            if (singleTime.length > 1) { // If time format correct\n                singleTime = singleTime.slice(1);  // Remove full string match value\n                singleTime[5] = +singleTime[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n                singleTime[0] = +singleTime[0] % 12 || 12; // Adjust hours\n            }\n\n            newTime[index] = singleTime.join('');\n            if (index === 0)\n                newTime[index] += \" to \";\n\n\n        });\n\n        return newTime; // return adjusted time or original string\n    };\n\n    render() {\n        return (\n            <div className={'col-9'}>\n                <h2>Add time slot</h2>\n                <Form>\n                    <Form.Row>\n                        <Form.Group className={'col'}>\n                            <Form.Label>From</Form.Label>\n                            <Form.Control type=\"time\" placeholder=\"enter start time\"\n                                          value={this.state.startTime}\n                                          onChange={(e) => this.onChange('startTime', e)}/>\n                        </Form.Group>\n                        <Form.Group className={'col'}>\n                            <Form.Label>To</Form.Label>\n                            <Form.Control type=\"time\" placeholder=\"enter ending time\"\n                                          value={this.state.endTime}\n                                          onChange={(e) => this.onChange('endTime', e)}/>\n                        </Form.Group>\n\n                        <Form.Group >\n\n                            <Button variant=\"success\" onClick={this.addTime}>\n                                <i className=\"fa fa-plus\"/> Add\n                            </Button>\n\n                        </Form.Group>\n\n\n\n                    </Form.Row>\n\n                </Form>\n\n                {this.state.timeSlots.map((singleTimeSlot, index) => {\n                    return (\n\n                        <ListGroup.Item>\n                            <div className={'row'}>\n\n                                <p className={'col'}>{this.timeConvert(singleTimeSlot)}</p>\n                                <Button variant=\"danger\"\n                                        onClick={() => this.removeTimeSlot(index)}>Remove</Button>\n                            </div>\n                        </ListGroup.Item>\n\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default AddTimeSlot;\n\n","import React, { Component } from 'react';\nimport {Modal,Button} from \"react-bootstrap\";\n\n\nclass ConfirmationModal extends Component {\n\n    render() {\n        return (\n            <div>\n                <Modal show={this.props.show} onHide={this.props.close}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Confirmation Modal</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Please choose your action.</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.props.close}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.props.reject}>\n                            Reject\n                        </Button> <Button variant=\"primary\" onClick={this.props.accept}>\n                            Accept\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ConfirmationModal;\n\n","import React, {Component} from 'react';\nimport {Dropdown, Table} from \"react-bootstrap\";\nimport baseService from \"../services/baseService\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\n\n\nclass Appointments extends Component {\n\n    state = {\n        appointments: [],\n        appointmentsFiltered: [],\n        show: false,\n        selectedAppointment: {},\n        filter: 'All'\n    };\n\n    componentWillMount() {\n        baseService.getAppointments().then((response) => {\n            this.setState({appointments: response, appointmentsFiltered: response})\n        }).catch(err => console.log(err))\n    }\n\n    eventClicked = (e) => {\n        alert(e);\n    }\n\n    close = () => {\n        this.setState({show: false})\n    };\n    updateAppointmentStatus = async (status) => {\n        let newAppointment = this.state.selectedAppointment;\n        newAppointment.status = status;\n        await baseService.updateAppointment(newAppointment);\n    }\n    accept = () => {\n        this.updateAppointmentStatus('Accepted')\n        this.close();\n    }\n    reject = () => {\n        this.updateAppointmentStatus('Rejected')\n        this.close();\n    }\n\n    filter = (filterCondition) => {\n        this.setState({filter:filterCondition});\n        if(filterCondition === \"All\")\n        {\n            this.setState({appointmentsFiltered: this.state.appointments});\n            return;\n        }\n        let appoinntments = [...this.state.appointments];\n        appoinntments = appoinntments.filter((singleAppointment) => {\n            if (filterCondition === \"Pending\" || filterCondition === \"Accepted\" || filterCondition === \"Rejected\")\n                return singleAppointment.status == filterCondition;\n            else if (filterCondition === \"Coming\")\n                return singleAppointment.appointmentDate < new Date().toDateString();\n            else if (filterCondition === \"Past\")\n                return singleAppointment.appointmentDate > new Date().toDateString()\n            else if (filterCondition === \"Today\")\n                return singleAppointment.appointmentDate == new Date().toDateString()\n        })\n        this.setState({appointmentsFiltered: appoinntments})\n\n    };\n    onAppointmentClick = (e,selectedAppointment) => {\n        e.preventDefault();\n        this.setState({selectedAppointment, show: true})\n\n    }\n    renderAppointments = () => {\n        return (\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Username</th>\n                    <th>Request Date</th>\n                    <th>Appointment Time</th>\n                    <th>Appointment Date</th>\n                    <th>Status</th>\n                    <th>Actions</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.appointmentsFiltered.length > 0 ? this.state.appointmentsFiltered.map((singleAppointment, index) => {\n                    return (\n\n                        <tr key={index}>\n                            <td>{index + 1}</td>\n                            <td>{singleAppointment.clientId.username}</td>\n                            <td>{new Date(singleAppointment.requestDate).toDateString()}</td>\n                            <td>{singleAppointment.time}</td>\n                            <td>{singleAppointment.appointmentDate}</td>\n                            <td>{singleAppointment.status}</td>\n                            <td>{singleAppointment.status !==\"Pending\" ?\n                                <p>Action Taken</p>:\n                                <a href='' onClick={(e) => this.onAppointmentClick(e,singleAppointment)}>Take Action</a>}\n                            </td>\n                        </tr>\n                    )\n                }) : <tr>\n                    <td colSpan={7}>\n                        <p className={'center'}>there is no {this.state.filter !==\"All\" && this.state.filter.toLowerCase()} appointments yet</p>\n                    </td>\n                </tr>}\n                </tbody>\n            </Table>\n        )\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h2>Appointments</h2>\n\n                <Dropdown>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        ({this.state.filter}) Appointments\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item onSelect={()=>this.filter('All')} >All</Dropdown.Item>\n                        <Dropdown.Item onSelect={()=>this.filter('Today')} >Today</Dropdown.Item>\n                        <Dropdown.Item onSelect={()=>this.filter('Pending')} >Pending</Dropdown.Item>\n                        <Dropdown.Item onSelect={()=>this.filter('Accepted')} >Accepted</Dropdown.Item>\n                        <Dropdown.Item onSelect={()=>this.filter('Rejected')} >Rejected</Dropdown.Item>\n                        <Dropdown.Item onSelect={()=>this.filter('Past')} >Past</Dropdown.Item>\n                        <Dropdown.Item onSelect={()=>this.filter('Coming')} >Coming</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                {this.renderAppointments()}\n\n                <ConfirmationModal show={this.state.show} close={this.close} accept={this.accept} reject={this.reject}/>\n            </div>\n        );\n    }\n}\n\nexport default Appointments;\n\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport Home from './components/Home';\nimport NavBar from \"./components/NavBar\";\nimport Login from \"./components/Login\";\nimport baseService from \"./services/baseService\";\nimport Register from \"./components/Register\";\nimport AddTimeSlot from \"./components/AddTimeSlot\";\nimport Appointments from \"./components/Appointments\";\n\nfunction RouterComponent() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Home}/>\n                <PrivateRoute exact path=\"/addTimeSlot\" component={AddTimeSlot}/>\n                <PrivateRoute exact path=\"/Appointments\" component={Appointments}/>\n                <Route exact path=\"/Login\" component={Login}/>\n                <Route exact path=\"/Logout\" component={Logout}/>\n\n\n            </Switch>\n        </Router>\n    );\n}\n\nconst PrivateRoute = ({component: Component}, ...rest) => (\n    <Route\n        {...rest}\n        render={(props) => (\n            baseService.checkLogin()\n                ? <div><NavBar/> <Component {...props} /></div>\n                : <Redirect to={{\n                    pathname: '/',\n                    state: {from: props.location}\n                }}/>\n        )}\n    />\n);\n\nconst Logout = withRouter(({history}) =>{\n        baseService.logout();\n        history.push(\"/\");\n        return null;\n}\n\n);\n\n\nexport default RouterComponent;\n","import React from 'react';\nimport './App.css';\nimport RouterComponent from \"./Router\";\nimport 'font-awesome/css/font-awesome.min.css';\n\nfunction App() {\n  return (\n    <RouterComponent/>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}